## Process this file with automake to generate Makefile.in
# 
#   Copyright (C) 2009 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

XMLdir = $(includedir)/gnash

# This variable contains all classes in AS2 and AS3
XML_SOURCES = flash/xml/xml_pkg.cpp
XML_HEADERS = flash/xml/xml_pkg.h

# This variable contains the classes only in AS3
XML_SOURCES_AS3 = 
XML_HEADERS_AS3 = 

# ActionScript 2 has the XML class, which has been renamed in
# ActionScript 3 to XMLDocument. They are the same class though.
if BUILD_XMLDOCUMENT_AS3
XML_SOURCES += flash/xml/XMLDocument_as.cpp
XML_HEADERS += flash/xml/XMLDocument_as.h
endif

if BUILD_XMLNODETYPE_AS3
XML_SOURCES_AS3 += flash/xml/XMLNodeType_as.cpp
XML_HEADERS_AS3 += flash/xml/XMLNodeType_as.h
endif

if BUILD_XMLNODE_AS3
XML_SOURCES += flash/xml/XMLNode_as.cpp
XML_HEADERS += flash/xml/XMLNode_as.h
endif

libgnashasobjs_la_SOURCES += $(XML_SOURCES) $(XML_SOURCES_AS3)
noinst_HEADERS += $(XML_HEADERS) $(XML_HEADERS_AS3) xmlclasses.h

# Build a header file that contains a generated array of *_init()
# functions for the classes that are configured for this build, as
# that could be a subset of the entire class library for this namespace.
xmlclasses.h: Makefile
	-@echo "Generating header file for xml classes..."
	-@header=xmlclasses.h; \
	$(RM) $${header}; \
	echo "// Generated by Makefile, don't hand edit!" > $${header}; \
	echo "#ifndef GNASH_ASOBJ_FLASH_XML_H" >> $${header}; \
	echo "#define GNASH_ASOBJ_FLASH_XML_H 1" >> $${header}; \
	echo "#include \"sharedlib.h\"" >> $${header}; \
	echo "static gnash::SharedLib::initentry *as3xmlclasses[] = {" >> $${header}; \
	oldway=`cd $(srcdir) && grep -l "_class_init" $(XML_HEADERS_AS3)`; \
	newway=`cd $(srcdir) && grep -l "void init"   $(XML_HEADERS_AS3)`; \
	for i in $${oldway}; do \
	  item=`basename $$i | sed -e 's:\_as.h::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	for i in $${newway}; do \
	  item=`basename $$i | sed -e 's:\_as.h::'`; \
	  echo "	gnash::$${item}_as::init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "static gnash::SharedLib::initentry *as2xmlclasses[] = {" >> $${header}; \
	oldway=`cd $(srcdir) && grep -l "_class_init" $(XML_HEADERS)`; \
	newway=`cd $(srcdir) && grep -l "void init"   $(XML_HEADERS)`; \
	for i in $${oldway}; do \
	  item=`basename $$i | sed -e 's:\_as.h::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	for i in $${newway}; do \
	  item=`basename $$i | sed -e 's:\_as.h::'`; \
	  echo "	gnash::$${item}_as::init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "#endif // end of GNASH_ASOBJ_FLASH_XML_H" >> $${header};

BUILT_SOURCES += xmlclasses.h
