## Process this file with automake to generate Makefile.in
# 
#   Copyright (C) 2009 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

TEXTdir = $(srcdir)/flash/text

TEXT_SOURCES = $(TEXTdir)/text_pkg.cpp
TEXT_HEADERS = $(TEXTdir)/text_pkg.h

if BUILD_ANTIALIASTYPE_AS3
TEXT_SOURCES += $(TEXTdir)/AntiAliasType_as.cpp
TEXT_HEADERS += $(TEXTdir)/AntiAliasType_as.h
endif

if BUILD_CSMSETTINGS_AS3
TEXT_SOURCES += $(TEXTdir)/CSMSettings_as.cpp
TEXT_HEADERS += $(TEXTdir)/CSMSettings_as.h
endif

if BUILD_FONTSTYLE_AS3
TEXT_SOURCES += $(TEXTdir)/FontStyle_as.cpp
TEXT_HEADERS += $(TEXTdir)/FontStyle_as.h
endif

if BUILD_FONTTYPE_AS3
TEXT_SOURCES += $(TEXTdir)/FontType_as.cpp
TEXT_HEADERS += $(TEXTdir)/FontType_as.h
endif

if BUILD_FONT_AS3
TEXT_SOURCES += $(TEXTdir)/Font_as.cpp
TEXT_HEADERS += $(TEXTdir)/Font_as.h
endif

if BUILD_GRIDFITTYPE_AS3
TEXT_SOURCES += $(TEXTdir)/GridFitType_as.cpp
TEXT_HEADERS += $(TEXTdir)/GridFitType_as.h
endif

if BUILD_STATICTEXT_AS3
TEXT_SOURCES += $(TEXTdir)/StaticText_as.cpp
TEXT_HEADERS += $(TEXTdir)/StaticText_as.h
endif

if BUILD_STYLESHEET_AS3
TEXT_SOURCES += $(TEXTdir)/StyleSheet_as.cpp
TEXT_HEADERS += $(TEXTdir)/StyleSheet_as.h
endif

if BUILD_TEXTCOLORTYPE_AS3
TEXT_SOURCES += $(TEXTdir)/TextColorType_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextColorType_as.h
endif

if BUILD_TEXTDISPLAYMODE_AS3
TEXT_SOURCES += $(TEXTdir)/TextDisplayMode_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextDisplayMode_as.h
endif

if BUILD_TEXTFIELDAUTOSIZE_AS3
TEXT_SOURCES += $(TEXTdir)/TextFieldAutoSize_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextFieldAutoSize_as.h
endif

if BUILD_TEXTFIELDTYPE_AS3
TEXT_SOURCES += $(TEXTdir)/TextFieldType_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextFieldType_as.h
endif

# FIXME: already exists
# if BUILD_TEXTFIELD_AS3
# TEXT_SOURCES += $(TEXTdir)/TextField_as.cpp
# TEXT_HEADERS += $(TEXTdir)/TextField_as.h
# endif

if BUILD_TEXTFORMATALIGN_AS3
TEXT_SOURCES += $(TEXTdir)/TextFormatAlign_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextFormatAlign_as.h
endif

# FIXME: already exists
# if BUILD_TEXTFORMAT_AS3
# TEXT_SOURCES += $(TEXTdir)/TextFormat_as.cpp
# TEXT_HEADERS += $(TEXTdir)/TextFormat_as.h
# endif

if BUILD_TEXTLINEMETRICS_AS3
TEXT_SOURCES += $(TEXTdir)/TextLineMetrics_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextLineMetrics_as.h
endif

if BUILD_TEXTRENDERER_AS3
TEXT_SOURCES += $(TEXTdir)/TextRenderer_as.cpp
TEXT_HEADERS += $(TEXTdir)/TextRenderer_as.h
endif

# FIXME: already exists
# if BUILD_TEXTSNAPSHOT_AS3
# TEXT_SOURCES += $(TEXTdir)/TextSnapshot_as.cpp
# TEXT_HEADERS += $(TEXTdir)/TextSnapshot_as.h
# endif

libgnashasobjs_la_SOURCES += $(TEXT_SOURCES)
noinst_HEADERS +=  $(TEXT_HEADERS) textclasses.h

# Build a header file that contains a generated array of *_init()
# functions for the classes that are configured for this build, as
# that could be a subset of the entire class library for this namespace.
textclasses.h: Makefile
	-@echo "Generating header file for text classes..."
	-@header=textclasses.h; \
	$(RM) $${header}; \
	echo "// Generated by Makefile, don't hand edit!" > $${header}; \
	echo "#ifndef GNASH_ASOBJ3_TEXT_H" >> $${header}; \
	echo "#define GNASH_ASOBJ3_TEXT_H 1" >> $${header}; \
	echo "#include <sharedlib.h>" >> $${header}; \
	echo "static gnash::SharedLib::initentry *asclasses[] = {" >> $${header}; \
	# drop the first node, which is always the top level package ;\
	sources="`echo $(TEXT_SOURCES) | cut -d ' ' -f 2-`"; \
	for i in $${sources}; do \
	  item=`basename $$i | sed -e 's:\_as.cpp::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "#endif // end of GNASH_ASOBJ3_TEXT_H" >> $${header};

BUILT_SOURCES += textclasses.h
