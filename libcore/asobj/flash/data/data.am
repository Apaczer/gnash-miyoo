## Process this file with automake to generate Makefile.in
# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

DATAdir = $(srcdir)/flash/data

DATA_SOURCES = $(DATAdir)/data_pkg.cpp
DATA_HEADERS = $(DATAdir)/data_pkg.h

if BUILD_ENCRYPTEDLOCALSTORE_AS3
DATA_SOURCES += $(DATAdir)/EncryptedLocalStore_as.cpp
DATA_HEADERS += $(DATAdir)/EncryptedLocalStore_as.h
endif

if BUILD_SQLCOLLATIONTYPE_AS3
DATA_SOURCES += $(DATAdir)/SQLCollationType_as.cpp
DATA_HEADERS += $(DATAdir)/SQLCollationType_as.h
endif

if BUILD_SQLCOLUMNNAMESTYLE_AS3
DATA_SOURCES += $(DATAdir)/SQLColumnNameStyle_as.cpp
DATA_HEADERS += $(DATAdir)/SQLColumnNameStyle_as.h
endif

if BUILD_SQLCOLUMNSCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLColumnSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLColumnSchema_as.h
endif

if BUILD_SQLCONNECTION_AS3
DATA_SOURCES += $(DATAdir)/SQLConnection_as.cpp
DATA_HEADERS += $(DATAdir)/SQLConnection_as.h
endif

if BUILD_SQLINDEXSCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLIndexSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLIndexSchema_as.h
endif

if BUILD_SQLMODE_AS3
DATA_SOURCES += $(DATAdir)/SQLMode_as.cpp
DATA_HEADERS += $(DATAdir)/SQLMode_as.h
endif

if BUILD_SQLRESULT_AS3
DATA_SOURCES += $(DATAdir)/SQLResult_as.cpp
DATA_HEADERS += $(DATAdir)/SQLResult_as.h
endif

if BUILD_SQLSCHEMARESULT_AS3
DATA_SOURCES += $(DATAdir)/SQLSchemaResult_as.cpp
DATA_HEADERS += $(DATAdir)/SQLSchemaResult_as.h
endif

if BUILD_SQLSCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLSchema_as.h
endif

if BUILD_SQLSTATEMENT_AS3
DATA_SOURCES += $(DATAdir)/SQLStatement_as.cpp
DATA_HEADERS += $(DATAdir)/SQLStatement_as.h
endif

if BUILD_SQLTABLESCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLTableSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLTableSchema_as.h
endif

if BUILD_SQLTRANSACTIONLOCKTYPE_AS3
DATA_SOURCES += $(DATAdir)/SQLTransactionLockType_as.cpp
DATA_HEADERS += $(DATAdir)/SQLTransactionLockType_as.h
endif

if BUILD_SQLTRIGGERSCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLTriggerSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLTriggerSchema_as.h
endif

if BUILD_SQLVIEWSCHEMA_AS3
DATA_SOURCES += $(DATAdir)/SQLViewSchema_as.cpp
DATA_HEADERS += $(DATAdir)/SQLViewSchema_as.h
endif

libgnashasobjs_la_SOURCES += $(DATA_SOURCES)
noinst_HEADERS += $(DATA_HEADERS) dataclasses.h

# Build a header file that contains a generated array of *_init()
# functions for the classes that are configured for this build, as
# that could be a subset of the entire class library for this namespace.
dataclasses.h: Makefile
	-@echo "Generating header file for data classes..."
	-@header=dataclasses.h; \
	$(RM) $${header}; \
	echo "// Generated by Makefile, don't hand edit!" > $${header}; \
	echo "#ifndef GNASH_ASOBJ3_DATA_H" >> $${header}; \
	echo "#define GNASH_ASOBJ3_DATA_H 1" >> $${header}; \
	echo "#include <sharedlib.h>" >> $${header}; \
	echo "static gnash::SharedLib::initentry *asclasses[] = {" >> $${header}; \
	# drop the first node, which is always the top level package ;\
	sources="`echo $(DATA_SOURCES) | cut -d ' ' -f 2-`"; \
	for i in $${sources}; do \
	  item=`basename $$i | sed -e 's:\_as.cpp::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "#endif // end of GNASH_ASOBJ3_DATA_H" >> $${header};


BUILT_SOURCES += dataclasses.h
