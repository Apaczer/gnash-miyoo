## Process this file with automake to generate Makefile.in
# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

NETdir = $(srcdir)/flash/net

NET_SOURCES = $(NETdir)/net_pkg.cpp
NET_HEADERS = $(NETdir)/net_pkg.h

if BUILD_FILEFILTER_AS3
NET_SOURCES += $(NETdir)/FileFilter_as3.cpp
NET_HEADERS += $(NETdir)/FileFilter_as3.h
endif

if BUILD_FILEREFERENCELIST_AS3
NET_SOURCES += $(NETdir)/FileReferenceList_as3.cpp
NET_HEADERS += $(NETdir)/FileReferenceList_as3.h
endif

if BUILD_FILEREFERENCE_AS3
NET_SOURCES += $(NETdir)/FileReference_as3.cpp
NET_HEADERS += $(NETdir)/FileReference_as3.h
endif

if BUILD_IDYNAMICPROPERTYOUTPUT_AS3
NET_SOURCES += $(NETdir)/IDynamicPropertyOutput_as3.cpp
NET_HEADERS += $(NETdir)/IDynamicPropertyOutput_as3.h
endif

if BUILD_IDYNAMICPROPERTYWRITER_AS3
NET_SOURCES += $(NETdir)/IDynamicPropertyWriter_as3.cpp
NET_HEADERS += $(NETdir)/IDynamicPropertyWriter_as3.h
endif

if BUILD_LOCALCONNECTION_AS3
NET_SOURCES += $(NETdir)/LocalConnection_as3.cpp
NET_HEADERS += $(NETdir)/LocalConnection_as3.h
endif

if BUILD_NETCONNECTION_AS3
NET_SOURCES += $(NETdir)/NetConnection_as3.cpp
NET_HEADERS += $(NETdir)/NetConnection_as3.h
endif

if BUILD_NETSTREAM_AS3
NET_SOURCES += $(NETdir)/NetStream_as3.cpp
NET_HEADERS += $(NETdir)/NetStream_as3.h
endif

if BUILD_OBJECTENCODING_AS3
NET_SOURCES += $(NETdir)/ObjectEncoding_as3.cpp
NET_HEADERS += $(NETdir)/ObjectEncoding_as3.h
endif

if BUILD_RESPONDER_AS3
NET_SOURCES += $(NETdir)/Responder_as3.cpp
NET_HEADERS += $(NETdir)/Responder_as3.h
endif

if BUILD_SHAREDOBJECTFLUSHSTATUS_AS3
NET_SOURCES += $(NETdir)/SharedObjectFlushStatus_as3.cpp
NET_HEADERS += $(NETdir)/SharedObjectFlushStatus_as3.h
endif

# FIXME: already exists
# if BUILD_SHAREDOBJECT_AS3
# NET_SOURCES += $(NETdir)/SharedObject_as3.cpp
# NET_HEADERS += $(NETdir)/SharedObject_as3.h
# endif

if BUILD_SOCKET_AS3
NET_SOURCES += $(NETdir)/Socket_as3.cpp
NET_HEADERS += $(NETdir)/Socket_as3.h
endif

if BUILD_URLLOADERDATAFORMAT_AS3
NET_SOURCES += $(NETdir)/URLLoaderDataFormat_as3.cpp
NET_HEADERS += $(NETdir)/URLLoaderDataFormat_as3.h
endif

if BUILD_URLLOADER_AS3
NET_SOURCES += $(NETdir)/URLLoader_as3.cpp
NET_HEADERS += $(NETdir)/URLLoader_as3.h
endif

if BUILD_URLREQUESTDEFAULTS_AS3
NET_SOURCES += $(NETdir)/URLRequestDefaults_as3.cpp
NET_HEADERS += $(NETdir)/URLRequestDefaults_as3.h
endif

if BUILD_URLREQUESTHEADER_AS3
NET_SOURCES += $(NETdir)/URLRequestHeader_as3.cpp
NET_HEADERS += $(NETdir)/URLRequestHeader_as3.h
endif

if BUILD_URLREQUESTMETHOD_AS3
NET_SOURCES += $(NETdir)/URLRequestMethod_as3.cpp
NET_HEADERS += $(NETdir)/URLRequestMethod_as3.h
endif

if BUILD_URLREQUEST_AS3
NET_SOURCES += $(NETdir)/URLRequest_as3.cpp
NET_HEADERS += $(NETdir)/URLRequest_as3.h
endif

if BUILD_URLSTREAM_AS3
NET_SOURCES += $(NETdir)/URLStream_as3.cpp
NET_HEADERS += $(NETdir)/URLStream_as3.h
endif

if BUILD_URLVARIABLES_AS3
NET_SOURCES += $(NETdir)/URLVariables_as3.cpp
NET_HEADERS += $(NETdir)/URLVariables_as3.h
endif

# FIXME: already exists
# if BUILD_XMLSOCKET_AS3
# NET_SOURCES += $(NETdir)/XMLSocket_as3.cpp
# NET_HEADERS += $(NETdir)/XMLSocket_as3.h
# endif

libgnashasobjs_la_SOURCES  += $(NET_SOURCES)
noinst_HEADERS +=  $(NET_HEADERS) netclasses.h

# Build a header file that contains a generated array of *_init()
# functions for the classes that are configured for this build, as
# that could be a subset of the entire class library for this namespace.
netclasses.h: Makefile
	-@echo "Generating header file for net classes..."
	-@header=netclasses.h; \
	$(RM) $${header}; \
	echo "// Generated by Makefile, don't hand edit!" > $${header}; \
	echo "#ifndef GNASH_ASOBJ3_NET_H" >> $${header}; \
	echo "#define GNASH_ASOBJ3_NET_H 1" >> $${header}; \
	echo "#include <sharedlib.h>" >> $${header}; \
	echo "static gnash::SharedLib::initentry *asclasses[] = {" >> $${header}; \
	# drop the first node, which is always the top level package ;\
	sources="`echo $(NET_SOURCES) | cut -d ' ' -f 2-`"; \
	for i in $${sources}; do \
	  item=`basename $$i | sed -e 's:\_as3.cpp::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "#endif // end of GNASH_ASOBJ3_NET_H" >> $${header};

BUILT_SOURCES += netclasses.h
