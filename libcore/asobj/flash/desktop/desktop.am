## Process this file with automake to generate Makefile.in
# 
#   Copyright (C) 2009 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

DESKTOPdir = $(srcdir)/flash/desktop

DESKTOP_SOURCES = $(DESKTOPdir)/desktop_pkg.cpp
DESKTOP_HEADERS = $(DESKTOPdir)/desktop_pkg.h

if BUILD_CLIPBOARDFORMATS_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/ClipboardFormats_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/ClipboardFormats_as.h
endif

if BUILD_CLIPBOARDTRANSFERMODE_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/ClipboardTransferMode_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/ClipboardTransferMode_as.h
endif

if BUILD_CLIPBOARD_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/Clipboard_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/Clipboard_as.h
endif

if BUILD_DOCKICON_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/DockIcon_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/DockIcon_as.h
endif

if BUILD_ICON_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/Icon_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/Icon_as.h
endif

if BUILD_INTERACTIVEICON_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/InteractiveIcon_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/InteractiveIcon_as.h
endif

if BUILD_NATIVEAPPLICATION_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/NativeApplication_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/NativeApplication_as.h
endif

if BUILD_NATIVEDRAGACTIONS_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/NativeDragActions_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/NativeDragActions_as.h
endif

if BUILD_NATIVEDRAGMANAGER_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/NativeDragManager_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/NativeDragManager_as.h
endif

if BUILD_NATIVEDRAGOPTIONS_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/NativeDragOptions_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/NativeDragOptions_as.h
endif

if BUILD_NOTIFICATIONTYPE_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/NotificationType_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/NotificationType_as.h
endif

if BUILD_SYSTEMTRAYICON_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/SystemTrayIcon_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/SystemTrayIcon_as.h
endif

if BUILD_UPDATER_AS3
DESKTOP_SOURCES += $(DESKTOPdir)/Updater_as.cpp
DESKTOP_HEADERS += $(DESKTOPdir)/Updater_as.h
endif

libgnashasobjs_la_SOURCES += $(DESKTOP_SOURCES)
noinst_HEADERS +=  $(DESKTOP_HEADERS) desktopclasses.h

# Build a header file that contains a generated array of *_init()
# functions for the classes that are configured for this build, as
# that could be a subset of the entire class library for this
# namespace. This file only gets rebuilt if the Makefile is modified.
desktopclasses.h: Makefile
	-@echo "Generating header file for desktop classes..."
	-@header=desktopclasses.h; \
	$(RM) $${header}; \
	echo "// Generated by Makefile, don't hand edit!" > $${header}; \
	echo "#ifndef GNASH_ASOBJ3_DESKTOP_H" >> $${header}; \
	echo "#define GNASH_ASOBJ3_DESKTOP_H 1" >> $${header}; \
	echo "#include <sharedlib.h>" >> $${header}; \
	echo "static gnash::SharedLib::initentry *asclasses[] = {" >> $${header}; \
	# drop the first node, which is always the top level package ;\
	sources="`echo $(DESKTOP_SOURCES) | cut -d ' ' -f 2-`"; \
	for i in $${sources}; do \
	  item=`basename $$i | sed -e 's:\_as.cpp::'`; \
	  lowname="`echo $${item} | tr '[A-Z]' '[a-z]'`"; \
	  echo "	gnash::$${lowname}_class_init,"  >> $${header}; \
	done; \
	echo '	0' >> $${header}; \
	echo '};' >> $${header}; \
	echo "#endif // end of GNASH_ASOBJ3_DESKTOP_H" >> $${header};


BUILT_SOURCES += desktopclasses.h
