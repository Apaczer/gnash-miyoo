// TextField_as.hx:  ActionScript 3 "TextField" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090515 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.text.TextField;
import flash.display.MovieClip;
#else
import flash.TextField;
import flash.MovieClip;
#end
import flash.Lib;
import Type;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class TextField_as {
    static function main() {
        var x1:TextField = new TextField();

        // Make sure we actually get a valid class        
        if (x1 != null) {
            DejaGnu.pass("TextField class exists");
        } else {
            DejaGnu.fail("TextField class doesn't exist");
        }
// Tests to see if all the properties exist. All these do is test for
// existance of a property, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	if (x1.alwaysShowSelection == false) {
	    DejaGnu.pass("TextField.alwaysShowSelection property exists");
	} else {
	    DejaGnu.fail("TextField.alwaysShowSelection property doesn't exist");
	}
	if (x1.antiAliasType == null) {
	    DejaGnu.pass("TextField.antiAliasType property exists");
	} else {
	    DejaGnu.fail("TextField.antiAliasType property doesn't exist");
	}
	if (x1.autoSize == null) {
	    DejaGnu.pass("TextField.autoSize property exists");
	} else {
	    DejaGnu.fail("TextField.autoSize property doesn't exist");
	}
	if (x1.background == false) {
	    DejaGnu.pass("TextField.background property exists");
	} else {
	    DejaGnu.fail("TextField.background property doesn't exist");
	}
	if (x1.backgroundColor == uint) {
	    DejaGnu.pass("TextField.backgroundColor property exists");
	} else {
	    DejaGnu.fail("TextField.backgroundColor property doesn't exist");
	}
	if (x1.border == false) {
	    DejaGnu.pass("TextField.border property exists");
	} else {
	    DejaGnu.fail("TextField.border property doesn't exist");
	}
	if (x1.borderColor == uint) {
	    DejaGnu.pass("TextField.borderColor property exists");
	} else {
	    DejaGnu.fail("TextField.borderColor property doesn't exist");
	}
	if (x1.bottomScrollV == 0) {
	    DejaGnu.pass("TextField.bottomScrollV property exists");
	} else {
	    DejaGnu.fail("TextField.bottomScrollV property doesn't exist");
	}
	if (x1.caretIndex == 0) {
	    DejaGnu.pass("TextField.caretIndex property exists");
	} else {
	    DejaGnu.fail("TextField.caretIndex property doesn't exist");
	}
	if (x1.condenseWhite == false) {
	    DejaGnu.pass("TextField.condenseWhite property exists");
	} else {
	    DejaGnu.fail("TextField.condenseWhite property doesn't exist");
	}
	if (x1.contextMenu == NativeMenu) {
	    DejaGnu.pass("TextField.contextMenu property exists");
	} else {
	    DejaGnu.fail("TextField.contextMenu property doesn't exist");
	}
	if (x1.defaultTextFormat == defaultTextFormat) {
	    DejaGnu.pass("TextField.defaultTextFormat property exists");
	} else {
	    DejaGnu.fail("TextField.defaultTextFormat property doesn't exist");
	}
	if (x1.displayAsPassword == false) {
	    DejaGnu.pass("TextField.displayAsPassword property exists");
	} else {
	    DejaGnu.fail("TextField.displayAsPassword property doesn't exist");
	}
	if (x1.embedFonts == false) {
	    DejaGnu.pass("TextField.embedFonts property exists");
	} else {
	    DejaGnu.fail("TextField.embedFonts property doesn't exist");
	}
	if (x1.gridFitType == null) {
	    DejaGnu.pass("TextField.gridFitType property exists");
	} else {
	    DejaGnu.fail("TextField.gridFitType property doesn't exist");
	}
	if (x1.htmlText == null) {
	    DejaGnu.pass("TextField.htmlText property exists");
	} else {
	    DejaGnu.fail("TextField.htmlText property doesn't exist");
	}
	if (x1.length == 0) {
	    DejaGnu.pass("TextField.length property exists");
	} else {
	    DejaGnu.fail("TextField.length property doesn't exist");
	}
	if (x1.maxChars == 0) {
	    DejaGnu.pass("TextField.maxChars property exists");
	} else {
	    DejaGnu.fail("TextField.maxChars property doesn't exist");
	}
	if (x1.maxScrollH == 0) {
	    DejaGnu.pass("TextField.maxScrollH property exists");
	} else {
	    DejaGnu.fail("TextField.maxScrollH property doesn't exist");
	}
	if (x1.maxScrollV == 0) {
	    DejaGnu.pass("TextField.maxScrollV property exists");
	} else {
	    DejaGnu.fail("TextField.maxScrollV property doesn't exist");
	}
	if (x1.mouseWheelEnabled == false) {
	    DejaGnu.pass("TextField.mouseWheelEnabled property exists");
	} else {
	    DejaGnu.fail("TextField.mouseWheelEnabled property doesn't exist");
	}
	if (x1.multiline == false) {
	    DejaGnu.pass("TextField.multiline property exists");
	} else {
	    DejaGnu.fail("TextField.multiline property doesn't exist");
	}
	if (x1.numLines == 0) {
	    DejaGnu.pass("TextField.numLines property exists");
	} else {
	    DejaGnu.fail("TextField.numLines property doesn't exist");
	}
	if (x1.restrict == null) {
	    DejaGnu.pass("TextField.restrict property exists");
	} else {
	    DejaGnu.fail("TextField.restrict property doesn't exist");
	}
	if (x1.scrollH == 0) {
	    DejaGnu.pass("TextField.scrollH property exists");
	} else {
	    DejaGnu.fail("TextField.scrollH property doesn't exist");
	}
	if (x1.scrollV == 0) {
	    DejaGnu.pass("TextField.scrollV property exists");
	} else {
	    DejaGnu.fail("TextField.scrollV property doesn't exist");
	}
	if (x1.selectable == false) {
	    DejaGnu.pass("TextField.selectable property exists");
	} else {
	    DejaGnu.fail("TextField.selectable property doesn't exist");
	}
	if (x1.selectionBeginIndex == 0) {
	    DejaGnu.pass("TextField.selectionBeginIndex property exists");
	} else {
	    DejaGnu.fail("TextField.selectionBeginIndex property doesn't exist");
	}
	if (x1.selectionEndIndex == 0) {
	    DejaGnu.pass("TextField.selectionEndIndex property exists");
	} else {
	    DejaGnu.fail("TextField.selectionEndIndex property doesn't exist");
	}
	if (x1.sharpness == 0) {
	    DejaGnu.pass("TextField.sharpness property exists");
	} else {
	    DejaGnu.fail("TextField.sharpness property doesn't exist");
	}
	if (x1.styleSheet == styleSheet) {
	    DejaGnu.pass("TextField.styleSheet property exists");
	} else {
	    DejaGnu.fail("TextField.styleSheet property doesn't exist");
	}
	if (x1.text == null) {
	    DejaGnu.pass("TextField.text property exists");
	} else {
	    DejaGnu.fail("TextField.text property doesn't exist");
	}
	if (x1.textColor == uint) {
	    DejaGnu.pass("TextField.textColor property exists");
	} else {
	    DejaGnu.fail("TextField.textColor property doesn't exist");
	}
	if (x1.textHeight == 0) {
	    DejaGnu.pass("TextField.textHeight property exists");
	} else {
	    DejaGnu.fail("TextField.textHeight property doesn't exist");
	}
	if (x1.textWidth == 0) {
	    DejaGnu.pass("TextField.textWidth property exists");
	} else {
	    DejaGnu.fail("TextField.textWidth property doesn't exist");
	}
	if (x1.thickness == 0) {
	    DejaGnu.pass("TextField.thickness property exists");
	} else {
	    DejaGnu.fail("TextField.thickness property doesn't exist");
	}
	if (x1.type == null) {
	    DejaGnu.pass("TextField.type property exists");
	} else {
	    DejaGnu.fail("TextField.type property doesn't exist");
	}
	if (x1.useRichTextClipboard == false) {
	    DejaGnu.pass("TextField.useRichTextClipboard property exists");
	} else {
	    DejaGnu.fail("TextField.useRichTextClipboard property doesn't exist");
	}
	if (x1.wordWrap == false) {
	    DejaGnu.pass("TextField.wordWrap property exists");
	} else {
	    DejaGnu.fail("TextField.wordWrap property doesn't exist");
	}

// Tests to see if all the methods exist. All these do is test for
// existance of a method, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	if (x1.TextField == TextField) {
	    DejaGnu.pass("TextField::TextField() method exists");
	} else {
	    DejaGnu.fail("TextField::TextField() method doesn't exist");
	}
	if (x1.appendText == null) {
	    DejaGnu.pass("TextField::appendText() method exists");
	} else {
	    DejaGnu.fail("TextField::appendText() method doesn't exist");
	}
	if (x1.getCharBoundaries == Rectangle) {
	    DejaGnu.pass("TextField::getCharBoundaries() method exists");
	} else {
	    DejaGnu.fail("TextField::getCharBoundaries() method doesn't exist");
	}
	if (x1.getCharIndexAtPoint == 0) {
	    DejaGnu.pass("TextField::getCharIndexAtPoint() method exists");
	} else {
	    DejaGnu.fail("TextField::getCharIndexAtPoint() method doesn't exist");
	}
	if (x1.getFirstCharInParagraph == 0) {
	    DejaGnu.pass("TextField::getFirstCharInParagraph() method exists");
	} else {
	    DejaGnu.fail("TextField::getFirstCharInParagraph() method doesn't exist");
	}
	if (x1.getImageReference == DisplayObject) {
	    DejaGnu.pass("TextField::getImageReference() method exists");
	} else {
	    DejaGnu.fail("TextField::getImageReference() method doesn't exist");
	}
	if (x1.getLineIndexAtPoint == 0) {
	    DejaGnu.pass("TextField::getLineIndexAtPoint() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineIndexAtPoint() method doesn't exist");
	}
	if (x1.getLineIndexOfChar == 0) {
	    DejaGnu.pass("TextField::getLineIndexOfChar() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineIndexOfChar() method doesn't exist");
	}
	if (x1.getLineLength == 0) {
	    DejaGnu.pass("TextField::getLineLength() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineLength() method doesn't exist");
	}
	if (x1.getLineMetrics == TextLineMetrics) {
	    DejaGnu.pass("TextField::getLineMetrics() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineMetrics() method doesn't exist");
	}
	if (x1.getLineOffset == 0) {
	    DejaGnu.pass("TextField::getLineOffset() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineOffset() method doesn't exist");
	}
	if (x1.getLineText == null) {
	    DejaGnu.pass("TextField::getLineText() method exists");
	} else {
	    DejaGnu.fail("TextField::getLineText() method doesn't exist");
	}
	if (x1.getParagraphLength == 0) {
	    DejaGnu.pass("TextField::getParagraphLength() method exists");
	} else {
	    DejaGnu.fail("TextField::getParagraphLength() method doesn't exist");
	}
	if (x1.getTextFormat == TextFormat) {
	    DejaGnu.pass("TextField::getTextFormat() method exists");
	} else {
	    DejaGnu.fail("TextField::getTextFormat() method doesn't exist");
	}
	if (x1.replaceSelectedText == null) {
	    DejaGnu.pass("TextField::replaceSelectedText() method exists");
	} else {
	    DejaGnu.fail("TextField::replaceSelectedText() method doesn't exist");
	}
	if (x1.replaceText == null) {
	    DejaGnu.pass("TextField::replaceText() method exists");
	} else {
	    DejaGnu.fail("TextField::replaceText() method doesn't exist");
	}
	if (x1.setSelection == null) {
	    DejaGnu.pass("TextField::setSelection() method exists");
	} else {
	    DejaGnu.fail("TextField::setSelection() method doesn't exist");
	}
	if (x1.setTextFormat == null) {
	    DejaGnu.pass("TextField::setTextFormat() method exists");
	} else {
	    DejaGnu.fail("TextField::setTextFormat() method doesn't exist");
	}

        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

