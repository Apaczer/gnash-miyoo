// Stage_as.hx:  ActionScript 3 "Stage" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.display.Stage;
import flash.display.MovieClip;
#else
import flash.Stage;
import flash.MovieClip;
#end
import flash.Lib;
import Type;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class Stage_as {
    static function main() {
        var x1:Stage = new Stage();

        // Make sure we actually get a valid class        
        if (x1 != null) {
            DejaGnu.pass("Stage class exists");
        } else {
            DejaGnu.fail("Stage lass doesn't exist");
        }
// Tests to see if all the properties exist. All these do is test for
// existance of a property, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	if (x1.align == null) {
	    DejaGnu.pass("Stage::align property exists");
	} else {
	    DejaGnu.fail("Stage::align property doesn't exist");
	}
	if (x1.displayState == null) {
	    DejaGnu.pass("Stage::displayState property exists");
	} else {
	    DejaGnu.fail("Stage::displayState property doesn't exist");
	}
// 	if (x1.focus == focus) {
// 	    DejaGnu.pass("Stage::focus property exists");
// 	} else {
// 	    DejaGnu.fail("Stage::focus property doesn't exist");
// 	}
	if (x1.frameRate == 0) {
	    DejaGnu.pass("Stage::frameRate property exists");
	} else {
	    DejaGnu.fail("Stage::frameRate property doesn't exist");
	}
	if (x1.fullScreenHeight == 0) {
	    DejaGnu.pass("Stage::fullScreenHeight property exists");
	} else {
	    DejaGnu.fail("Stage::fullScreenHeight property doesn't exist");
	}
// 	if (x1.fullScreenSourceRect == Rectangle) {
// 	    DejaGnu.pass("Stage::fullScreenSourceRect property exists");
// 	} else {
// 	    DejaGnu.fail("Stage::fullScreenSourceRect property doesn't exist");
// 	}
	if (x1.fullScreenWidth == 0) {
	    DejaGnu.pass("Stage::fullScreenWidth property exists");
	} else {
	    DejaGnu.fail("Stage::fullScreenWidth property doesn't exist");
	}
	if (x1.height == 0) {
	    DejaGnu.pass("Stage::height property exists");
	} else {
	    DejaGnu.fail("Stage::height property doesn't exist");
	}
	if (x1.mouseChildren == false) {
	    DejaGnu.pass("Stage::mouseChildren property exists");
	} else {
	    DejaGnu.fail("Stage::mouseChildren property doesn't exist");
	}
// 	if (x1.nativeWindow == NativeWindow) {
// 	    DejaGnu.pass("Stage::nativeWindow property exists");
// 	} else {
// 	    DejaGnu.fail("Stage::nativeWindow property doesn't exist");
// 	}
	if (x1.numChildren == 0) {
	    DejaGnu.pass("Stage::numChildren property exists");
	} else {
	    DejaGnu.fail("Stage::numChildren property doesn't exist");
	}
	if (x1.quality == null) {
	    DejaGnu.pass("Stage::quality property exists");
	} else {
	    DejaGnu.fail("Stage::quality property doesn't exist");
	}
	if (x1.scaleMode == null) {
	    DejaGnu.pass("Stage::scaleMode property exists");
	} else {
	    DejaGnu.fail("Stage::scaleMode property doesn't exist");
	}
	if (x1.showDefaultContextMenu == false) {
	    DejaGnu.pass("Stage::showDefaultContextMenu property exists");
	} else {
	    DejaGnu.fail("Stage::showDefaultContextMenu property doesn't exist");
	}
	if (x1.stageFocusRect == false) {
	    DejaGnu.pass("Stage::stageFocusRect property exists");
	} else {
	    DejaGnu.fail("Stage::stageFocusRect property doesn't exist");
	}
	if (x1.stageHeight == 0) {
	    DejaGnu.pass("Stage::stageHeight property exists");
	} else {
	    DejaGnu.fail("Stage::stageHeight property doesn't exist");
	}
	if (x1.stageWidth == 0) {
	    DejaGnu.pass("Stage::stageWidth property exists");
	} else {
	    DejaGnu.fail("Stage::stageWidth property doesn't exist");
	}
	if (x1.tabChildren == false) {
	    DejaGnu.pass("Stage::tabChildren property exists");
	} else {
	    DejaGnu.fail("Stage::tabChildren property doesn't exist");
	}
// 	if (x1.textSnapshot == textSnapshot) {
// 	    DejaGnu.pass("Stage::textSnapshot property exists");
// 	} else {
// 	    DejaGnu.fail("Stage::textSnapshot property doesn't exist");
// 	}
	if (x1.width == 0) {
	    DejaGnu.pass("Stage::width property exists");
	} else {
	    DejaGnu.fail("Stage::width property doesn't exist");
	}

// Tests to see if all the methods exist. All these do is test for
// existance of a method, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
// 	if (x1.addChild == DisplayObject) {
// 	    DejaGnu.pass("Stage::addChild() method exists");
// 	} else {
// 	    DejaGnu.fail("Stage::addChild() method doesn't exist");
// 	}
// 	if (x1.addChildAt == DisplayObject) {
// 	    DejaGnu.pass("Stage::addChildAt() method exists");
// 	} else {
// 	    DejaGnu.fail("Stage::addChildAt() method doesn't exist");
// 	}
	if (x1.addEventListener == null) {
	    DejaGnu.pass("Stage::addEventListener() method exists");
	} else {
	    DejaGnu.fail("Stage::addEventListener() method doesn't exist");
	}
// 	if (x1.assignFocus == Event) {
// 	    DejaGnu.pass("Stage::assignFocus() method exists");
// 	} else {
// 	    DejaGnu.fail("Stage::assignFocus() method doesn't exist");
// 	}
// 	if (x1.dispatchEvent == Event) {
// 	    DejaGnu.pass("Stage::dispatchEvent() method exists");
// 	} else {
// 	    DejaGnu.fail("Stage::dispatchEvent() method doesn't exist");
// 	}
	if (x1.hasEventListener != null) {
	    DejaGnu.pass("Stage::hasEventListener() method exists");
	} else {
	    DejaGnu.fail("Stage::hasEventListener() method doesn't exist");
	}
	if (x1.invalidate == null) {
	    DejaGnu.pass("Stage::invalidate() method exists");
	} else {
	    DejaGnu.fail("Stage::invalidate() method doesn't exist");
	}
	if (x1.isFocusInaccessible != null) {
	    DejaGnu.pass("Stage::isFocusInaccessible() method exists");
	} else {
	    DejaGnu.fail("Stage::isFocusInaccessible() method doesn't exist");
	}
// 	if (x1.removeChildAt == DisplayObject) {
// 	    DejaGnu.pass("Stage::removeChildAt() method exists");
// 	} else {
// 	    DejaGnu.fail("Stage::removeChildAt() method doesn't exist");
// 	}
	if (x1.setChildIndex == null) {
	    DejaGnu.pass("Stage::setChildIndex() method exists");
	} else {
	    DejaGnu.fail("Stage::setChildIndex() method doesn't exist");
	}
	if (x1.swapChildrenAt == null) {
	    DejaGnu.pass("Stage::swapChildrenAt() method exists");
	} else {
	    DejaGnu.fail("Stage::swapChildrenAt() method doesn't exist");
	}
	if (x1.willTrigger != null) {
	    DejaGnu.pass("Stage::willTrigger() method exists");
	} else {
	    DejaGnu.fail("Stage::willTrigger() method doesn't exist");
	}

        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

