// Security_as3.hx:  ActionScript 3 "Security" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.system.Security;
import flash.display.MovieClip;
#else
import flash.Security;
import flash.MovieClip;
#end
import flash.Lib;
import Type;

// import our testing API
import DejaGnu;

// Class must be named with the _as3 suffix, as that's the same name as the file.
class Security_as {
    static function main() {

        // Make sure we actually get a valid class        
        if (Security != null) {
            DejaGnu.pass("Security class exists");
        } else {
            DejaGnu.fail("Security class doesn't exist");
        }
// Tests to see if all the properties exist. All these do is test for
// existance of a property, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	if (Security.exactSettings == false) {
	    DejaGnu.pass("Security.exactSettings property exists");
	} else {
	    DejaGnu.fail("Security.exactSettings property doesn't exist");
	}
	if (Security.sandboxType == null) {
	    DejaGnu.pass("Security.sandboxType property exists");
	} else {
	    DejaGnu.fail("Security.sandboxType property doesn't exist");
	}

// Tests to see if all the methods exist. All these do is test for
// existance of a method, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	if (Security.allowDomain == null) {
	    DejaGnu.pass("Security::allowDomain() method exists");
	} else {
	    DejaGnu.fail("Security::allowDomain() method doesn't exist");
	}
	if (Security.allowInsecureDomain == null) {
	    DejaGnu.pass("Security::allowInsecureDomain() method exists");
	} else {
	    DejaGnu.fail("Security::allowInsecureDomain() method doesn't exist");
	}
	if (Security.loadPolicyFile != null) {
	    DejaGnu.pass("Security::loadPolicyFile() method exists");
	} else {
	    DejaGnu.fail("Security::loadPolicyFile() method doesn't exist");
	}
	if (Security.showSettings != null) {
	    DejaGnu.pass("Security::showSettings() method exists");
	} else {
	    DejaGnu.fail("Security::showSettings() method doesn't exist");
	}
// AIR only
// 	if (Security.APPLICATION == null) {
// 	    DejaGnu.pass("Security::APPLICATION() method exists");
// 	} else {
// 	    DejaGnu.fail("Security::APPLICATION() method doesn't exist");
// 	}
	if (Security.LOCAL_TRUSTED != null) {
	    DejaGnu.pass("Security::LOCAL_TRUSTED() method exists");
	} else {
	    DejaGnu.fail("Security::LOCAL_TRUSTED() method doesn't exist");
	}
	if (Security.LOCAL_WITH_FILE != null) {
	    DejaGnu.pass("Security::LOCAL_WITH_FILE() method exists");
	} else {
	    DejaGnu.fail("Security::LOCAL_WITH_FILE() method doesn't exist");
	}
	if (Security.LOCAL_WITH_NETWORK != null) {
	    DejaGnu.pass("Security::LOCAL() method exists");
	} else {
	    DejaGnu.fail("Security::LOCAL() method doesn't exist");
	}
	if (Security.REMOTE != null) {
	    DejaGnu.pass("Security::REMOTE() method exists");
	} else {
	    DejaGnu.fail("Security::REMOTE() method doesn't exist");
	}

        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

