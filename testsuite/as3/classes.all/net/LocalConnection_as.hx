// LocalConnection_as.hx:  ActionScript 3 "LocalConnection" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

// There are several event handlers there, we will fix them later.



#if flash9
import flash.net.LocalConnection;
import flash.display.MovieClip;
#else
import flash.LocalConnection;
import flash.MovieClip;
#end

import flash.Lib;
import Type;
import Std;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class LocalConnection_as {
    static function main() {
        var x1:LocalConnection = new LocalConnection();

        // Make sure we actually get a valid class 

//	DejaGnu.note("Type of x1: "   + Type.typeof(x1));    // TObject       

//      This is test 1

//	DejaGnu.note( "LocalConnection type is" + Type.typeof(LocalConnection) );
//	DejaGnu.note( "x1 type is" + Type.typeof(x1) );
		
#if flash9
//	DejaGnu.note( "LocalConnection type of v9 is" + Type.typeof(LocalConnection) );
	if (Type.typeof(LocalConnection) == ValueType.TObject && x1 != null) {
            DejaGnu.pass("LocalConnection class exists");
        } else {
            DejaGnu.fail("LocalConnection class doesn't exist");
        }
#else
//	DejaGnu.note( "LocalConnection type of v8 is" + Type.typeof(LocalConnection) );
	if (Type.typeof(x1) == ValueType.TObject && x1 != null) {
            DejaGnu.pass("LocalConnection class exists");
        } else {
            DejaGnu.fail("LocalConnection class doesn't exist");
        }
#end
 
// Tests to see if all the properties exist. All these do is test for
// existance of a property, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
// 	if (x1.client == Object) {
// 	    DejaGnu.pass("LocalConnection.client property exists");
// 	} else {
// 	    DejaGnu.fail("LocalConnection.client property doesn't exist");
// 	}

//Si modified May 27
//This is test 2
//	DejaGnu.note("ME1 "   + Type.typeof(String));
//	DejaGnu.note("ME2 "   + Type.typeof(x1.domain));	
//	if (Type.typeof(x1.domain)== Type.typeof(String));		

	DejaGnu.note("Type of x1.domain "   + Type.typeof(x1.domain));

#if flash9
	if (Std.is(x1.domain,String) ) {
	    DejaGnu.pass("LocalConnection.domain property exists");
	} else {
	    DejaGnu.fail("LocalConnection.domain property doesn't exist");
	}
#else
        if (Type.typeof(x1.domain) == TFunction  ){
	    DejaGnu.pass("LocalConnection.domain property exists");
	} else {
	    DejaGnu.fail("LocalConnection.domain property doesn't exist");
	}
#end

// Tests to see if all the methods exist. All these do is test for
// existance of a method, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.


//Si modified May 27
//This is test 3
#if flash9
	if (Type.typeof(x1.allowDomain) == ValueType.TFunction ) {
	    DejaGnu.pass("LocalConnection::allowDomain() method exists");
	} else {
	    DejaGnu.xfail("LocalConnection::allowDomain() method doesn't exist");
	}
#else
	DejaGnu.note("Warning! A event handler here: allowDomain"   + Type.typeof(x1.allowDomain)); 
	if (Type.typeof(x1.allowDomain) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::allowDomain() method exists");
	} else {
	    DejaGnu.xfail("LocalConnection::allowDomain() method doesn't exist");
	}
#end

//Si modified May 27
//This is test 4

	DejaGnu.note("Type of x1.allowInsecureDomain "   + Type.typeof(x1.allowInsecureDomain));

#if flash9
	if (Type.typeof(x1.allowInsecureDomain) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::allowInsecureDomain() method exists");
	} else {
	    DejaGnu.xfail("LocalConnection::allowInsecureDomain() method doesn't exist");
	}
#else
	DejaGnu.note("Warning! A event handler here: allosDa "   + Type.typeof(x1.allowInsecureDomain));
	if (Type.typeof(x1.allowInsecureDomain) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::allowInsecureDomain() method exists");
	} else {
	    DejaGnu.xfail("LocalConnection::allowInsecureDomain() method doesn't exist");
	}
#end

//Si modified May 27
//This is test 5
#if flash9
        if (Type.typeof(x1.close) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::close() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::close() method doesn't exist");
	}
#else
	if (Type.typeof(x1.close) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::close() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::close() method doesn't exist");
	}
#end

//Si modified May 27
//This is test 6
#if flash9
	if (Type.typeof(x1.connect) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::connect() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::connect() method doesn't exist");
	}
#else
        if (Type.typeof(x1.connect) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::connect() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::connect() method doesn't exist");
	}
#end

//Si modified May 27
//This is test 7
#if flash9
	if (Type.typeof(x1.send) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::send() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::send() method doesn't exist");
	}
#else
	if (Type.typeof(x1.send) == ValueType.TFunction) {
	    DejaGnu.pass("LocalConnection::send() method exists");
	} else {
	    DejaGnu.fail("LocalConnection::send() method doesn't exist");
	}
#end

        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

