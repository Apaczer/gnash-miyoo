
load_lib "dejagnu.exp"


# If tracing has been enabled at the top level, then turn it on here
# too.
if $tracelevel {
    strace $tracelevel
}

set timeoutmsg "Timed out: Never got started, "
set timeout 100
set file all
set timetol 0
set executable "../../utilities/gprocessor"
set params "-v "

foreach file [glob ${srcdir}/*.as] {
    puts "Executing test case [ file tail ${file} ]"
    foreach swfversion [list 5 6 7] {

	# some tests might do different things when built for different
	# SWF target versions.
	exec makeswf -I${srcdir} -DOUTPUT_VERSION=${swfversion} -v${swfversion} ${file}
	
	# ready for Ming-0.4 naming of .pp file
	#exec rm -f ${file}.pp ${file}.swf.frame0.pp
	if [info exists file] {
	    #	puts "$file exists"
	} else {
	    perror "$file doesn't exist"
	    return -1
	}
	
	#    verbose "The executable is $executable $params ${file}.swf" 2
	if ![file exists out.swf] {
	    perror "The executable, \"$executable\" is missing" 0
	    return "No source file found"
	}
	
	set testid "SWF${swfversion} [ file tail ${file} ]"
	
 	# spawn the executable and look for the DejaGnu output messages from the
 	# test case.
	verbose "Flash version ${swfversion}"
	set outp [local_exec "./${executable} ${params} out.swf" "" "" $timeout]
#	print $outp

	# remove the \r part of "\r\n" so we don't break all the patterns
	# we want to match.
	regsub -all -- "\r" $outp "" outp

	if {[regexp " XFAILED: .*\n" $outp state]} {
	    regsub -all " XFAILED: *\n" $outp "\\1" outp
	    regsub -all -- "\n" $state "" state
	    xfail "$state"
	}
	
	if {[regexp " FAILED: .*\n" $outp state]} {
	    regsub -all  "FAILED: *\n" $outp "\\1" outp
	    regsub -all -- "\n" $state "" state
	    fail "$state"
	}
 	if {[regexp " XPASSED: .*\n" $outp state]} {
 	    regsub -all "XPASSED: *\n" $outp "\\1" outp
 	    regsub -all -- "\n" $state "" state
 	    xpass "$state"
 	}
	if {[regexp " PASSED: .*\n" $outp state]} {
	    regsub -all "PASSED: *\n" $outp "\\1" outp
	    regsub -all -- "\n" $state "" state
	    pass "$state"
	}

    }
}


