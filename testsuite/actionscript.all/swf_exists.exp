
load_lib "dejagnu.exp"


# If tracing has been enabled at the top level, then turn it on here
# too.
if $tracelevel {
    strace $tracelevel
}

set timeoutmsg "Timed out: Never got started, "
set timeout 100
set file all
set timetol 0
set executable "../../utilities/gprocessor"
set params "-w"

foreach file [glob ${srcdir}/*.as] {

	# TODO: FIME: Remove me when LocalConnection doesn't choke 
	#       gprocessor anymore
	if { $file == "${srcdir}/LocalConnection.as" } continue

    puts "Executing test case [ file tail ${file} ]"
    foreach swfversion [list 5 6 7 ] {

	# some tests might do different things when built for different
	# SWF target versions.
	exec makeswf -I${srcdir} -DOUTPUT_VERSION=${swfversion} -v${swfversion} ${file}
	
	# ready for Ming-0.4 naming of .pp file
	#exec rm -f ${file}.pp ${file}.swf.frame0.pp
	if [info exists file] {
	    #	puts "$file exists"
	} else {
	    perror "$file doesn't exist"
	    return -1
	}
	
	#    verbose "The executable is $executable $params ${file}.swf" 2
	if ![file exists out.swf] {
	    perror "The executable, \"$executable\" is missing" 0
	    return "No source file found"
	}
	
	set testid "SWF${swfversion} [ file tail ${file} ]"
	verbose "Flash version ${swfversion}"
	
 	# spawn the executable and look for the DejaGnu output messages from the
 	# test case.

	set outp [exec -keepnewline -- ./${executable} -v out.swf]

	# remove the \r part of "\r\n" so we don't break all the patterns
	# we want to match.
	regsub -all -- "\r" $outp "" outp

	#print "After regsub: $outp"

	set lines [split $outp \n]

	foreach line $lines {

		#print "Parsing line: $line"

		if {[regexp " XFAILED: .*" $line state]} {
		    xfail "$state"
		}

		if {[regexp " FAILED: .*" $line state]} {
		    fail "$state"
		}

		if {[regexp " XPASSED: .*" $line state]} {
		    xpass "$state"
		}

		if {[regexp " PASSED: .*" $line state]} {
		    pass "$state"
		}
		
	}

    }
}


