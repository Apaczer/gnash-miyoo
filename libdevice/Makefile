# Makefile.in generated by automake 1.15.1 from Makefile.am.
# libdevice/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# 
#   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2012,
#	2013 Free Software Foundation, Inc.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

# 
# Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gnash
pkgincludedir = $(includedir)/gnash
pkglibdir = $(libdir)/gnash
pkglibexecdir = $(libexecdir)/gnash
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-unknown-linux-gnu
#am__append_1 = $(X11_CFLAGS)
#am__append_2 = \
#	x11/X11Device.cpp \
#	x11/X11Device.h

#am__append_3 = \
#	$(TS_LIBS) \
#	$(X11_LIBS)

# AM_LDFLAGS = $(CROSS_LDFLAGS)
#am__append_4 = $(PCH_FLAGS)
bin_PROGRAMS = $(am__EXEEXT_1)
check_PROGRAMS = $(am__EXEEXT_2)
#am__append_5 = \
#	 -DFAKEFB=\"$(FAKEFB)\" \
#	$(RAWFB_CFLAGS) \
#	$(TSLIB_CFLAGS)

#am__append_6 = \
#	rawfb/RawFBDevice.cpp \
#	rawfb/RawFBDevice.h

#am__append_7 = \
#	$(TSLIB_LIBS) \
#	$(EXTRA_EGL_LIBS)


# These are used to handle input events from a keyboard, mouse, or
# touchscreen. These are only used by the Framebuffer GUI, as without
# X11, it has no event handling. We do it this way so the optionally
# built source files still get included in the source tarball.
##am__append_8 = events/InputDevice.cpp events/InputDevice.h

# Touchscreen
##am__append_9 = events/TouchDevice.cpp
##am__append_10 = $(TS_LIBS)

# PS/2 Mouse
###am__append_11 = events/MouseDevice.cpp

# Linux input events
##am__append_12 = events/EventDevice.cpp

# The Uinput device is write only, and is used to control the mouse
# movements.
#am__append_13 = events/UinputDevice.cpp
##am__append_14 = evtest

# eglinfo is a utility program that isn't always available. Since it's useful
# when bring up Gnash on a new target, it's included here.
#am__append_15 = eglinfo
#am__append_16 = $(EGL_CFLAGS)
#am__append_17 = \
#	egl/eglDevice.cpp \
#	egl/eglDevice.h \
#	egl/configTemplates.h  \
#	$(NULL)

#am__append_18 = $(EGL_LIBS)
#am__append_19 = $(DIRECTFB_CFLAGS)
#am__append_20 = \
#	directfb/DirectFBDevice.cpp \
#	directfb/DirectFBDevice.h

#am__append_21 = $(DIRECTFB_LIBS)
##am__append_22 = libgnashvaapi.la
###am__append_23 = \
###	$(LIBVA_GLX_CFLAGS) \
###	$(NULL)

###am__append_24 = \
###	$(LIBVA_GLX_LIBS) \
###	$(NULL)

###am__append_25 = \
###	vaapi/VaapiDisplayGLX.h \
###	vaapi/VaapiSurfaceGLX.cpp \
###	vaapi/VaapiSurfaceGLX.h \
###	$(NULL)

#am__append_26 = \
#	vaapi/vaapi_common.h \
#	vaapi/vaapi_utils.h \
#	vaapi/VaapiContext.h \
#	vaapi/VaapiDisplay.h \
#	vaapi/VaapiDisplayX11.h \
#	vaapi/VaapiDisplayGLX.h \
#	vaapi/VaapiException.h \
#	vaapi/VaapiGlobalContext.h \
#	vaapi/VaapiImage.h \
#	vaapi/VaapiImageFormat.h \
#	vaapi/VaapiSubpicture.h \
#	vaapi/VaapiSurface.h \
#	vaapi/VaapiSurfaceGLX.h \
#	vaapi/VaapiSurfaceProxy.h \
#	$(NULL)

#am__append_27 = $(VAAPI_CFLAGS)
# libgnashdevice_la_SOURCES += \
# 	vaapi/VaapiDevice.cpp \
# 	vaapi/VaapiDevice.h
#am__append_28 = $(VAAPI_LIBS)
subdir = libdevice
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/agg.m4 \
	$(top_srcdir)/macros/ax_append_compile_flags.m4 \
	$(top_srcdir)/macros/ax_append_flag.m4 \
	$(top_srcdir)/macros/ax_append_link_flags.m4 \
	$(top_srcdir)/macros/ax_check_compile_flag.m4 \
	$(top_srcdir)/macros/ax_check_link_flag.m4 \
	$(top_srcdir)/macros/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/macros/ax_require_defined.m4 \
	$(top_srcdir)/macros/boost.m4 $(top_srcdir)/macros/curl.m4 \
	$(top_srcdir)/macros/dbus.m4 $(top_srcdir)/macros/docbook.m4 \
	$(top_srcdir)/macros/ffmpeg.m4 $(top_srcdir)/macros/firefox.m4 \
	$(top_srcdir)/macros/freetype.m4 \
	$(top_srcdir)/macros/gconf-2.m4 \
	$(top_srcdir)/macros/gettext.m4 $(top_srcdir)/macros/gles.m4 \
	$(top_srcdir)/macros/glib.m4 \
	$(top_srcdir)/macros/gnashpkgtool.m4 \
	$(top_srcdir)/macros/gtk2.m4 $(top_srcdir)/macros/gtkglext.m4 \
	$(top_srcdir)/macros/haxe.m4 $(top_srcdir)/macros/iconv.m4 \
	$(top_srcdir)/macros/kde3.m4 $(top_srcdir)/macros/kde4.m4 \
	$(top_srcdir)/macros/lib-ld.m4 \
	$(top_srcdir)/macros/lib-link.m4 \
	$(top_srcdir)/macros/lib-prefix.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/ming.m4 $(top_srcdir)/macros/mtasc.m4 \
	$(top_srcdir)/macros/mysql.m4 $(top_srcdir)/macros/nls.m4 \
	$(top_srcdir)/macros/npapi.m4 $(top_srcdir)/macros/opengl.m4 \
	$(top_srcdir)/macros/openvg.m4 $(top_srcdir)/macros/pango.m4 \
	$(top_srcdir)/macros/pkg.m4 $(top_srcdir)/macros/po.m4 \
	$(top_srcdir)/macros/progtest.m4 \
	$(top_srcdir)/macros/pthreads.m4 \
	$(top_srcdir)/macros/python.m4 $(top_srcdir)/macros/qt3.m4 \
	$(top_srcdir)/macros/qt4.m4 $(top_srcdir)/macros/sdl.m4 \
	$(top_srcdir)/macros/swfmill.m4 $(top_srcdir)/macros/x11.m4 \
	$(top_srcdir)/cygnal/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__noinst_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/gnashconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
##am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_6 =  \
#	$(am__DEPENDENCIES_1)
libgnashdevice_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_1)
am__libgnashdevice_la_SOURCES_DIST = GnashDevice.h DeviceGlue.h \
	DeviceGlue.cpp x11/X11Device.cpp x11/X11Device.h \
	rawfb/RawFBDevice.cpp rawfb/RawFBDevice.h \
	events/InputDevice.cpp events/InputDevice.h \
	events/TouchDevice.cpp events/MouseDevice.cpp \
	events/EventDevice.cpp events/UinputDevice.cpp \
	egl/eglDevice.cpp egl/eglDevice.h egl/configTemplates.h \
	directfb/DirectFBDevice.cpp directfb/DirectFBDevice.h
#am__objects_1 = libgnashdevice_la-X11Device.lo
#am__objects_2 =  \
#	libgnashdevice_la-RawFBDevice.lo
##am__objects_3 = libgnashdevice_la-InputDevice.lo
##am__objects_4 = libgnashdevice_la-TouchDevice.lo
###am__objects_5 = libgnashdevice_la-MouseDevice.lo
##am__objects_6 = libgnashdevice_la-EventDevice.lo
#am__objects_7 = libgnashdevice_la-UinputDevice.lo
#am__objects_8 = libgnashdevice_la-eglDevice.lo
#am__objects_9 = libgnashdevice_la-DirectFBDevice.lo
am_libgnashdevice_la_OBJECTS = libgnashdevice_la-DeviceGlue.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9)
libgnashdevice_la_OBJECTS = $(am_libgnashdevice_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libgnashdevice_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libgnashdevice_la_LDFLAGS) \
	$(LDFLAGS) -o $@
###am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
##libgnashvaapi_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_7)
am__libgnashvaapi_la_SOURCES_DIST = vaapi/vaapi_utils.cpp \
	vaapi/VaapiContext.cpp vaapi/VaapiDisplay.cpp \
	vaapi/VaapiGlobalContext.cpp vaapi/VaapiImage.cpp \
	vaapi/VaapiImageFormat.cpp vaapi/VaapiSubpicture.cpp \
	vaapi/VaapiSurface.cpp vaapi/VaapiSurfaceProxy.cpp \
	vaapi/VaapiDisplayGLX.h vaapi/VaapiSurfaceGLX.cpp \
	vaapi/VaapiSurfaceGLX.h
#am__objects_10 =  \
#	libgnashvaapi_la-vaapi_utils.lo \
#	libgnashvaapi_la-VaapiContext.lo \
#	libgnashvaapi_la-VaapiDisplay.lo \
#	libgnashvaapi_la-VaapiGlobalContext.lo \
#	libgnashvaapi_la-VaapiImage.lo \
#	libgnashvaapi_la-VaapiImageFormat.lo \
#	libgnashvaapi_la-VaapiSubpicture.lo \
#	libgnashvaapi_la-VaapiSurface.lo \
#	libgnashvaapi_la-VaapiSurfaceProxy.lo
###am__objects_11 = libgnashvaapi_la-VaapiSurfaceGLX.lo
##am_libgnashvaapi_la_OBJECTS =  \
##	$(am__objects_10) \
##	$(am__objects_11)
libgnashvaapi_la_OBJECTS = $(am_libgnashvaapi_la_OBJECTS)
libgnashvaapi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libgnashvaapi_la_LDFLAGS) \
	$(LDFLAGS) -o $@
##am_libgnashvaapi_la_rpath =  \
##	-rpath $(pkglibdir)
#am__EXEEXT_1 = eglinfo$(EXEEXT)
##am__EXEEXT_2 = evtest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__eglinfo_SOURCES_DIST = egl/eglinfo.c
#am_eglinfo_OBJECTS = eglinfo-eglinfo.$(OBJEXT)
eglinfo_OBJECTS = $(am_eglinfo_OBJECTS)
#eglinfo_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__evtest_SOURCES_DIST = events/evtest.c
##am_evtest_OBJECTS = evtest-evtest.$(OBJEXT)
evtest_OBJECTS = $(am_evtest_OBJECTS)
##evtest_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libgnashdevice_la_SOURCES) $(libgnashvaapi_la_SOURCES) \
	$(eglinfo_SOURCES) $(evtest_SOURCES)
DIST_SOURCES = $(am__libgnashdevice_la_SOURCES_DIST) \
	$(am__libgnashvaapi_la_SOURCES_DIST) \
	$(am__eglinfo_SOURCES_DIST) $(am__evtest_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__noinst_HEADERS_DIST = GnashDevice.h DeviceGlue.h \
	vaapi/vaapi_common.h vaapi/vaapi_utils.h vaapi/VaapiContext.h \
	vaapi/VaapiDisplay.h vaapi/VaapiDisplayX11.h \
	vaapi/VaapiDisplayGLX.h vaapi/VaapiException.h \
	vaapi/VaapiGlobalContext.h vaapi/VaapiImage.h \
	vaapi/VaapiImageFormat.h vaapi/VaapiSubpicture.h \
	vaapi/VaapiSurface.h vaapi/VaapiSurfaceGLX.h \
	vaapi/VaapiSurfaceProxy.h
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/directfb/directfb.am \
	$(srcdir)/egl/egl.am $(srcdir)/events/events.am \
	$(srcdir)/rawfb/rawfb.am $(srcdir)/vaapi/vaapi.am \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/anonymous/Documents/DEV/Gnash/missing aclocal-1.15
AGG_CFLAGS = -I/opt/funkey-toolchain/arm-buildroot-linux-musleabihf/sysroot/usr/include/agg2
AGG_LIBS =  -lagg
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
ANDROID_NDK = 
AR = arm-linux-ar
AS = as
AS3COMPILE = 
ATK_CFLAGS = 
ATK_CONFIG = 
ATK_LIBS = 
AUTOCONF = ${SHELL} /home/anonymous/Documents/DEV/Gnash/missing autoconf
AUTOHEADER = ${SHELL} /home/anonymous/Documents/DEV/Gnash/missing autoheader
AUTOMAKE = ${SHELL} /home/anonymous/Documents/DEV/Gnash/missing automake-1.15
AUTOTRACE = 
AWK = gawk
BOOST_CFLAGS = 
BOOST_CYGNAL_LIBS =  -lboost_serialization -lboost_date_time
BOOST_LIBS =  -lboost_program_options
BOOST_PLUGIN_LIBS =  -lboost_iostreams
BUILDDATE = 20210717
BZ2_LIBS = 
CAIRO_CFLAGS = 
CAIRO_CONFIG = 
CAIRO_LIBS = 
CC = arm-linux-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2          -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wmissing-declarations     -Wmissing-prototypes     -Wstrict-prototypes     
CPP = arm-linux-gcc -E
CPPFLAGS = 
CROSS_CXXFLAGS = 
CROSS_LDFLAGS = 
CSOUND = 
CURL_CFLAGS = /opt/funkey-toolchain/arm-buildroot-linux-musleabihf/sysroot/usr/include -DCURL_STATICLIB
CURL_LIBS = -lcurl
CXX = arm-linux-g++
CXXCPP = arm-linux-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Os -std=gnu++14          -W     -Wall     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wnon-virtual-dtor     -Wunused      -fvisibility-inlines-hidden
CYGPATH_W = echo
DB2X_MAN = 
DB2X_MANXML = 
DB2X_PDF = 
DB2X_TEXI = 
DB2X_TEXIXML = 
DB2X_VERSION = 
DB2X_XSLTPROC = 
DBUS_CFLAGS = 
DBUS_LIBS = 
DEFAULT_FLASH_MAJOR_VERSION = 10
DEFAULT_FLASH_MINOR_VERSION = 1
DEFAULT_FLASH_PLATFORM_ID = LNX
DEFAULT_FLASH_REV_NUMBER = 999
DEFAULT_FLASH_SYSTEM_OS = GNU/Linux
DEFAULT_SOL_SAFEDIR = ~/.gnash/SharedObjects
DEFAULT_STREAMS_TIMEOUT = 60
DEFS = -DHAVE_CONFIG_H
DEJAGNU = 
DEJAGNU_CFLAGS = 
DEJAGNU_CONFIG = 
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = dlltool
DLOPEN = -dlopen
DLPREOPEN = -dlpreopen
DOXYGEN = /bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_CONFIG = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_CONFIG = 
EXPAT_LIBS = -lexpat 
EXTENSIONS_LIST = 
EXTRA_EGL_LIBS = 
FAKEFB = 
FC_MATCH = 
FFMPEG_CFLAGS = -D__STDC_CONSTANT_MACROS -I/opt/funkey-toolchain/arm-buildroot-linux-musleabihf/sysroot/usr/include
FFMPEG_LIBS = -lavformat -lavcodec -lvorbisenc -lavutil -lgsm  -lswscale -lswresample -lavresample
FGREP = /bin/grep -F
FIREFOX_PLUGINS = 
FLTK2_CFLAGS = 
FLTK2_CONFIG = 
FLTK2_LIBS = 
FONTCONFIG_CFLAGS = 
FONTCONFIG_CONFIG = 
FONTCONFIG_LIBS = -lfontconfig 
FOP = 
FREETYPE2_CFLAGS = -I/opt/funkey-toolchain/arm-buildroot-linux-musleabihf/sysroot/usr/include/freetype2
FREETYPE2_LIBS = -lfreetype
GCONFTOOL = 
GCONF_CFLAGS = 
GCONF_LIBS = 
GCONF_SCHEMA_CONFIG_SOURCE = 
GCONF_SCHEMA_FILE_DIR = 
GETTEXT_MACRO_VERSION = 0.18
GIF_CFLAGS = 
GIF_CONFIG = 
GIF_LIBS = -lgif 
GIT = /bin/git
GLES1_CFLAGS = 
GLES1_LIBS = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GLEXT_CFLAGS = 
GLEXT_LIBS = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GMSGFMT = /opt/funkey-toolchain/bin/msgfmt
GMSGFMT_015 = /opt/funkey-toolchain/bin/msgfmt
GREP = /bin/grep
GSTREAMER_APP_CFLAGS = 
GSTREAMER_APP_CONFIG = 
GSTREAMER_APP_LIBS = 
GSTREAMER_CFLAGS = 
GSTREAMER_CONFIG = 
GSTREAMER_LIBS = 
GSTREAMER_PBUTILS_CFLAGS = 
GSTREAMER_PBUTILS_CONFIG = 
GSTREAMER_PBUTILS_LIBS = 
GSTREAMER_PLUGINS_BASE_CFLAGS = 
GSTREAMER_PLUGINS_BASE_CONFIG = 
GSTREAMER_PLUGINS_BASE_LIBS = 
GST_INSPECT = 
GTK2_CFLAGS = 
GTK2_LIBS = 
HAIKU_LIBS = 
HAVE_CXX11 = 
HAXE = 
HAXE_CLASSPATH = 
HTTP_TESTSUITE = 
HWACCEL_CONFIG = none
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_INFO = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JAVA = 
JEMALLOC_CFLAGS = 
JEMALLOC_CONFIG = 
JEMALLOC_LIBS = 
JPEG_CFLAGS = 
JPEG_CONFIG = 
JPEG_LIBS = -ljpeg 
KDE3_APPSDATADIR = 
KDE3_CFLAGS = 
KDE3_CONFIG = 
KDE3_CONFIGDIR = 
KDE3_LIBS = 
KDE3_PLUGINDIR = 
KDE3_SERVICESDIR = 
KDE4_APPSDATADIR = 
KDE4_CFLAGS = 
KDE4_CONFIG = 
KDE4_CONFIGDIR = 
KDE4_LIBS = 
KDE4_PLUGINDIR = 
KDE4_SERVICESDIR = 
KLASH_PLUGIN = 
LC_KEY = 0xcbc384f8
LD = /opt/funkey-toolchain/arm-buildroot-linux-musleabihf/bin/ld
LDFLAGS =  -Wl,--as-needed
LIBAVCODEC_IDENT = 58.134.100
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lspeexdsp -lspeex -lrt -lc 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBVA_CFLAGS = 
LIBVA_CONFIG = 
LIBVA_GLX_CFLAGS = 
LIBVA_GLX_CONFIG = 
LIBVA_GLX_LIBS = 
LIBVA_LIBS = 
LIBVA_X11_CFLAGS = 
LIBVA_X11_CONFIG = 
LIBVA_X11_LIBS = 
LIPO = 
LN_S = ln -s
LTDL_CFLAGS = 
LTDL_CONFIG = 
LTDL_LIBS = -lltdl 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/anonymous/Documents/DEV/Gnash/missing makeinfo
MAKESWF = 
MANIFEST_TOOL = :
MEDIA_CONFIG = ffmpeg 
MING_CFLAGS = 
MING_CONFIG = 
MING_LIBS = 
MING_VERSION = 
MING_VERSION_CODE = 0
MKDIR_P = /bin/mkdir -p
MOC3 = 
MOC4 = 
MSGFMT = /opt/funkey-toolchain/bin/msgfmt
MSGFMT_015 = /opt/funkey-toolchain/bin/msgfmt
MSGMERGE = /opt/funkey-toolchain/bin/msgmerge
MTASC = 
MTASC_CLASSPATH = 
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NETCAT = 
NM = /opt/funkey-toolchain/bin/arm-linux-nm -B
NMEDIT = 
NPAPI_CFLAGS = 
NSPR_CFLAGS = 
NSPR_CONFIG = 
NSPR_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OPENVG_CFLAGS = 
OPENVG_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnash
PACKAGE_BUGREPORT = 
PACKAGE_NAME = gnash
PACKAGE_STRING = gnash 0.8.11dev
PACKAGE_TARNAME = gnash
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.11dev
PANGO_CFLAGS = 
PANGO_LIBS = 
PATH_SEPARATOR = :
PCH_FLAGS = -include all-includes.h -Winvalid-pch
PDFXMLTEX = 
PERL = /bin/perl
PKG_CONFIG = 
PNG_CFLAGS = 
PNG_CONFIG = 
PNG_LIBS = -lpng 
POSUB = 
PTHREAD_CC = arm-linux-gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = arm-linux-g++
PTHREAD_LIBS = -lpthread
PYGOBJECT_CODEGEN = 
PYGTK_CFLAGS = 
PYGTK_CODEGEN = 
PYGTK_DEFSDIR = 
PYGTK_LIBS = 
PYTHON = 
PYTHON_CFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 
QT3_CFLAGS = 
QT3_LIBS = 
QT4_CFLAGS = 
QT4_LIBS = 
RANLIB = arm-linux-ranlib
RED5_HOST = 
RENDERER_CONFIG =  agg
RENDERER_LIBS = 
RTMPY_HOST = 
SCROLLINSTALL = 
SCROLLKEEPER = 
SCROLLUPDATE = 
SDL_CFLAGS = -I/opt/funkey-toolchain/arm-buildroot-linux-musleabihf/sysroot/usr/include/SDL
SDL_CONFIG = /bin/sdl-config
SDL_LIBS = -lSDL
SECURITY_LIST =  localconnection
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOLDIR = /tmp
SPEEXDSP_CFLAGS = 
SPEEXDSP_CONFIG = 
SPEEXDSP_LIBS = -lspeexdsp -lspeex -lrt -lc  
SPEEX_CFLAGS = 
SPEEX_CONFIG = 
SPEEX_LIBS = -lspeex -lrt -lc  
SSH_CFLAGS = 
SSH_CONFIG = 
SSH_LIBS = 
SSL_CFLAGS = 
SSL_CONFIG = 
SSL_LIBS = 
STATISTICS_LIST = 
STRIP = arm-linux-strip
SUPPORTED_GUIS = sdl
SWFC = 
SWFDEC_TESTSUITE = 
SWFMILL = 
SWFMILL_VERSION = 
TS_CFLAGS = 
TS_CONFIG = 
TS_LIBS = 
UIC4 = 
UNGIF_CFLAGS = 
UNGIF_CONFIG = 
UNGIF_LIBS = 
USE_NLS = no
VERSION = 0.8.11dev
WGET = 
WINDRES = 
X11_CFLAGS = 
X11_LIBS = -lX11 -lXinerama -lXext -lSM -lICE
XFT_CFLAGS = 
XFT_CONFIG = 
XFT_LIBS = 
XGETTEXT = /opt/funkey-toolchain/bin/xgettext
XGETTEXT_015 = /opt/funkey-toolchain/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XSLTPROC = 
Z_CFLAGS = 
Z_CONFIG = 
Z_LIBS = -lz 
abs_builddir = /home/anonymous/Documents/DEV/Gnash/libdevice
abs_srcdir = /home/anonymous/Documents/DEV/Gnash/libdevice
abs_top_builddir = /home/anonymous/Documents/DEV/Gnash
abs_top_srcdir = /home/anonymous/Documents/DEV/Gnash
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
curlconfig = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docbook_styles = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnu
host_alias = arm-linux
host_cpu = arm
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/anonymous/Documents/DEV/Gnash/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mconfig = 
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pth_config = 
pthread_config = 
pyexecdir = 
pythonconfig = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = 

# this is where Gnash plugins get installed
pluginsdir = $(libdir)/gnash/plugins
AM_CPPFLAGS = -I.. \
	-I$(srcdir) \
	-I$(top_srcdir) \
	-I$(top_srcdir)/libmedia \
	-I$(top_srcdir)/libbase \
	-I$(top_srcdir)/librender \
	-I$(top_srcdir)/libcore \
	-I$(top_srcdir)/libcore/vm \
	-I$(top_srcdir)/libcore/parser \
	-I$(top_srcdir)/libcore/swf \
	-I$(top_srcdir)/gui \
	$(PTHREAD_CFLAGS) \
	$(SDL_CFLAGS) \
	$(PANGO_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(GTK2_CFLAGS) \
	$(ATK_CFLAGS) \
	$(DMALLOC_CFLAGS) \
	$(PNG_CFLAGS) \
	$(JPEG_CFLAGS) \
	$(OGG_CFLAGS) \
	$(BOOST_CFLAGS) \
	$(OPENGL_CFLAGS) \
	$(AGG_CFLAGS) \
	$(DIRECTFB_CFLAGS) \
	$(CAIRO_CFLAGS) \
	$(NULL)

instdir = $(includedir)/gnash
noinst_HEADERS = GnashDevice.h DeviceGlue.h $(NULL) $(am__append_26)
pkglib_LTLIBRARIES = libgnashdevice.la $(am__append_22)
libgnashdevice_la_CPPFLAGS = $(AM_CPPFLAGS) $(am__append_1) \
	$(am__append_5) $(am__append_16) $(am__append_19) \
	$(am__append_27)
libgnashdevice_la_LIBADD = $(CURL_LIBS) $(LIBVA_LIBS) \
	$(LIBVA_X11_LIBS) $(LIBVA_GLX_LIBS) $(TS_LIBS) $(LTDL_LIBS) \
	$(GNASH_LIBS) $(am__append_3) $(am__append_7) $(am__append_10) \
	$(am__append_18) $(am__append_21) $(am__append_28)
libgnashdevice_la_LDFLAGS = -release $(VERSION) 
libgnashdevice_la_SOURCES = GnashDevice.h DeviceGlue.h DeviceGlue.cpp \
	$(NULL) $(am__append_2) $(am__append_6) $(am__append_8) \
	$(am__append_9) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_17) $(am__append_20)
AM_CXXFLAGS = $(CROSS_CXXFLAGS) $(am__append_4)
##evtest_SOURCES = events/evtest.c
##evtest_CPPFLAGS = $(AM_CPPFLAGS)
##evtest_LDADD = \
##	$(EXTRA_EVENTS_LIBS) \
##	$(TS_LIBS) \
##	$(EVENTS_LIBS) \
##	$(GNASH_LIBS)

#eglinfo_SOURCES = egl/eglinfo.c
#eglinfo_CPPFLAGS = $(AM_CPPFLAGS) $(EGL_CFLAGS)
#eglinfo_LDADD = \
#	$(EXTRA_EGL_LIBS) \
#	$(LTDL_LIBS) \
#	$(EGL_LIBS) \
#	$(NULL)

#SRCS = \
#	vaapi/vaapi_utils.cpp	\
#	vaapi/VaapiContext.cpp \
#	vaapi/VaapiDisplay.cpp \
#	vaapi/VaapiGlobalContext.cpp \
#	vaapi/VaapiImage.cpp \
#	vaapi/VaapiImageFormat.cpp \
#	vaapi/VaapiSubpicture.cpp \
#	vaapi/VaapiSurface.cpp \
#	vaapi/VaapiSurfaceProxy.cpp \
#	$(NULL)

##libgnashvaapi_la_CPPFLAGS = -I$(top_srcdir)/libbase \
##	$(BOOST_CFLAGS) \
##	$(FFMPEG_CFLAGS) \
##	$(LIBVA_CFLAGS) \
##	$(LIBVA_X11_CFLAGS) \
##	$(NULL) \
##	$(am__append_23)
##libgnashvaapi_la_LIBADD =  \
##	$(X11_LIBS) \
##	$(BOOST_LIBS) \
##	$(FFMPEG_LIBS) \
##	$(LIBVA_LIBS) \
##	$(LIBVA_GLX_LIBS) \
##	$(LIBVA_X11_LIBS) \
##	$(NULL) \
##	$(am__append_24)
##libgnashvaapi_la_SOURCES =  \
##	$(SRCS) \
##	$(am__append_25)
##libgnashvaapi_la_LDFLAGS = -release $(VERSION)
#EXTRA_DIST = $(SRCS) $(noinst_HEADERS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/rawfb/rawfb.am $(srcdir)/events/events.am $(srcdir)/egl/egl.am $(srcdir)/directfb/directfb.am $(srcdir)/vaapi/vaapi.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libdevice/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libdevice/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/rawfb/rawfb.am $(srcdir)/events/events.am $(srcdir)/egl/egl.am $(srcdir)/directfb/directfb.am $(srcdir)/vaapi/vaapi.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgnashdevice.la: $(libgnashdevice_la_OBJECTS) $(libgnashdevice_la_DEPENDENCIES) $(EXTRA_libgnashdevice_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgnashdevice_la_LINK) -rpath $(pkglibdir) $(libgnashdevice_la_OBJECTS) $(libgnashdevice_la_LIBADD) $(LIBS)

libgnashvaapi.la: $(libgnashvaapi_la_OBJECTS) $(libgnashvaapi_la_DEPENDENCIES) $(EXTRA_libgnashvaapi_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgnashvaapi_la_LINK) $(am_libgnashvaapi_la_rpath) $(libgnashvaapi_la_OBJECTS) $(libgnashvaapi_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

eglinfo$(EXEEXT): $(eglinfo_OBJECTS) $(eglinfo_DEPENDENCIES) $(EXTRA_eglinfo_DEPENDENCIES) 
	@rm -f eglinfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eglinfo_OBJECTS) $(eglinfo_LDADD) $(LIBS)

evtest$(EXEEXT): $(evtest_OBJECTS) $(evtest_DEPENDENCIES) $(EXTRA_evtest_DEPENDENCIES) 
	@rm -f evtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(evtest_OBJECTS) $(evtest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/eglinfo-eglinfo.Po
include ./$(DEPDIR)/evtest-evtest.Po
include ./$(DEPDIR)/libgnashdevice_la-DeviceGlue.Plo
include ./$(DEPDIR)/libgnashdevice_la-DirectFBDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-EventDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-InputDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-MouseDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-RawFBDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-TouchDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-UinputDevice.Plo
include ./$(DEPDIR)/libgnashdevice_la-X11Device.Plo
include ./$(DEPDIR)/libgnashdevice_la-eglDevice.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiContext.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiDisplay.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiGlobalContext.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiImage.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiImageFormat.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiSubpicture.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiSurface.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiSurfaceGLX.Plo
include ./$(DEPDIR)/libgnashvaapi_la-VaapiSurfaceProxy.Plo
include ./$(DEPDIR)/libgnashvaapi_la-vaapi_utils.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

eglinfo-eglinfo.o: egl/eglinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eglinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT eglinfo-eglinfo.o -MD -MP -MF $(DEPDIR)/eglinfo-eglinfo.Tpo -c -o eglinfo-eglinfo.o `test -f 'egl/eglinfo.c' || echo '$(srcdir)/'`egl/eglinfo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/eglinfo-eglinfo.Tpo $(DEPDIR)/eglinfo-eglinfo.Po
#	$(AM_V_CC)source='egl/eglinfo.c' object='eglinfo-eglinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eglinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o eglinfo-eglinfo.o `test -f 'egl/eglinfo.c' || echo '$(srcdir)/'`egl/eglinfo.c

eglinfo-eglinfo.obj: egl/eglinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eglinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT eglinfo-eglinfo.obj -MD -MP -MF $(DEPDIR)/eglinfo-eglinfo.Tpo -c -o eglinfo-eglinfo.obj `if test -f 'egl/eglinfo.c'; then $(CYGPATH_W) 'egl/eglinfo.c'; else $(CYGPATH_W) '$(srcdir)/egl/eglinfo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/eglinfo-eglinfo.Tpo $(DEPDIR)/eglinfo-eglinfo.Po
#	$(AM_V_CC)source='egl/eglinfo.c' object='eglinfo-eglinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(eglinfo_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o eglinfo-eglinfo.obj `if test -f 'egl/eglinfo.c'; then $(CYGPATH_W) 'egl/eglinfo.c'; else $(CYGPATH_W) '$(srcdir)/egl/eglinfo.c'; fi`

evtest-evtest.o: events/evtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evtest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evtest-evtest.o -MD -MP -MF $(DEPDIR)/evtest-evtest.Tpo -c -o evtest-evtest.o `test -f 'events/evtest.c' || echo '$(srcdir)/'`events/evtest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/evtest-evtest.Tpo $(DEPDIR)/evtest-evtest.Po
#	$(AM_V_CC)source='events/evtest.c' object='evtest-evtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evtest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evtest-evtest.o `test -f 'events/evtest.c' || echo '$(srcdir)/'`events/evtest.c

evtest-evtest.obj: events/evtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evtest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evtest-evtest.obj -MD -MP -MF $(DEPDIR)/evtest-evtest.Tpo -c -o evtest-evtest.obj `if test -f 'events/evtest.c'; then $(CYGPATH_W) 'events/evtest.c'; else $(CYGPATH_W) '$(srcdir)/events/evtest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/evtest-evtest.Tpo $(DEPDIR)/evtest-evtest.Po
#	$(AM_V_CC)source='events/evtest.c' object='evtest-evtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evtest_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evtest-evtest.obj `if test -f 'events/evtest.c'; then $(CYGPATH_W) 'events/evtest.c'; else $(CYGPATH_W) '$(srcdir)/events/evtest.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libgnashdevice_la-DeviceGlue.lo: DeviceGlue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-DeviceGlue.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-DeviceGlue.Tpo -c -o libgnashdevice_la-DeviceGlue.lo `test -f 'DeviceGlue.cpp' || echo '$(srcdir)/'`DeviceGlue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-DeviceGlue.Tpo $(DEPDIR)/libgnashdevice_la-DeviceGlue.Plo
#	$(AM_V_CXX)source='DeviceGlue.cpp' object='libgnashdevice_la-DeviceGlue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-DeviceGlue.lo `test -f 'DeviceGlue.cpp' || echo '$(srcdir)/'`DeviceGlue.cpp

libgnashdevice_la-X11Device.lo: x11/X11Device.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-X11Device.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-X11Device.Tpo -c -o libgnashdevice_la-X11Device.lo `test -f 'x11/X11Device.cpp' || echo '$(srcdir)/'`x11/X11Device.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-X11Device.Tpo $(DEPDIR)/libgnashdevice_la-X11Device.Plo
#	$(AM_V_CXX)source='x11/X11Device.cpp' object='libgnashdevice_la-X11Device.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-X11Device.lo `test -f 'x11/X11Device.cpp' || echo '$(srcdir)/'`x11/X11Device.cpp

libgnashdevice_la-RawFBDevice.lo: rawfb/RawFBDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-RawFBDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-RawFBDevice.Tpo -c -o libgnashdevice_la-RawFBDevice.lo `test -f 'rawfb/RawFBDevice.cpp' || echo '$(srcdir)/'`rawfb/RawFBDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-RawFBDevice.Tpo $(DEPDIR)/libgnashdevice_la-RawFBDevice.Plo
#	$(AM_V_CXX)source='rawfb/RawFBDevice.cpp' object='libgnashdevice_la-RawFBDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-RawFBDevice.lo `test -f 'rawfb/RawFBDevice.cpp' || echo '$(srcdir)/'`rawfb/RawFBDevice.cpp

libgnashdevice_la-InputDevice.lo: events/InputDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-InputDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-InputDevice.Tpo -c -o libgnashdevice_la-InputDevice.lo `test -f 'events/InputDevice.cpp' || echo '$(srcdir)/'`events/InputDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-InputDevice.Tpo $(DEPDIR)/libgnashdevice_la-InputDevice.Plo
#	$(AM_V_CXX)source='events/InputDevice.cpp' object='libgnashdevice_la-InputDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-InputDevice.lo `test -f 'events/InputDevice.cpp' || echo '$(srcdir)/'`events/InputDevice.cpp

libgnashdevice_la-TouchDevice.lo: events/TouchDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-TouchDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-TouchDevice.Tpo -c -o libgnashdevice_la-TouchDevice.lo `test -f 'events/TouchDevice.cpp' || echo '$(srcdir)/'`events/TouchDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-TouchDevice.Tpo $(DEPDIR)/libgnashdevice_la-TouchDevice.Plo
#	$(AM_V_CXX)source='events/TouchDevice.cpp' object='libgnashdevice_la-TouchDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-TouchDevice.lo `test -f 'events/TouchDevice.cpp' || echo '$(srcdir)/'`events/TouchDevice.cpp

libgnashdevice_la-MouseDevice.lo: events/MouseDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-MouseDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-MouseDevice.Tpo -c -o libgnashdevice_la-MouseDevice.lo `test -f 'events/MouseDevice.cpp' || echo '$(srcdir)/'`events/MouseDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-MouseDevice.Tpo $(DEPDIR)/libgnashdevice_la-MouseDevice.Plo
#	$(AM_V_CXX)source='events/MouseDevice.cpp' object='libgnashdevice_la-MouseDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-MouseDevice.lo `test -f 'events/MouseDevice.cpp' || echo '$(srcdir)/'`events/MouseDevice.cpp

libgnashdevice_la-EventDevice.lo: events/EventDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-EventDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-EventDevice.Tpo -c -o libgnashdevice_la-EventDevice.lo `test -f 'events/EventDevice.cpp' || echo '$(srcdir)/'`events/EventDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-EventDevice.Tpo $(DEPDIR)/libgnashdevice_la-EventDevice.Plo
#	$(AM_V_CXX)source='events/EventDevice.cpp' object='libgnashdevice_la-EventDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-EventDevice.lo `test -f 'events/EventDevice.cpp' || echo '$(srcdir)/'`events/EventDevice.cpp

libgnashdevice_la-UinputDevice.lo: events/UinputDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-UinputDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-UinputDevice.Tpo -c -o libgnashdevice_la-UinputDevice.lo `test -f 'events/UinputDevice.cpp' || echo '$(srcdir)/'`events/UinputDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-UinputDevice.Tpo $(DEPDIR)/libgnashdevice_la-UinputDevice.Plo
#	$(AM_V_CXX)source='events/UinputDevice.cpp' object='libgnashdevice_la-UinputDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-UinputDevice.lo `test -f 'events/UinputDevice.cpp' || echo '$(srcdir)/'`events/UinputDevice.cpp

libgnashdevice_la-eglDevice.lo: egl/eglDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-eglDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-eglDevice.Tpo -c -o libgnashdevice_la-eglDevice.lo `test -f 'egl/eglDevice.cpp' || echo '$(srcdir)/'`egl/eglDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-eglDevice.Tpo $(DEPDIR)/libgnashdevice_la-eglDevice.Plo
#	$(AM_V_CXX)source='egl/eglDevice.cpp' object='libgnashdevice_la-eglDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-eglDevice.lo `test -f 'egl/eglDevice.cpp' || echo '$(srcdir)/'`egl/eglDevice.cpp

libgnashdevice_la-DirectFBDevice.lo: directfb/DirectFBDevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashdevice_la-DirectFBDevice.lo -MD -MP -MF $(DEPDIR)/libgnashdevice_la-DirectFBDevice.Tpo -c -o libgnashdevice_la-DirectFBDevice.lo `test -f 'directfb/DirectFBDevice.cpp' || echo '$(srcdir)/'`directfb/DirectFBDevice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashdevice_la-DirectFBDevice.Tpo $(DEPDIR)/libgnashdevice_la-DirectFBDevice.Plo
#	$(AM_V_CXX)source='directfb/DirectFBDevice.cpp' object='libgnashdevice_la-DirectFBDevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashdevice_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashdevice_la-DirectFBDevice.lo `test -f 'directfb/DirectFBDevice.cpp' || echo '$(srcdir)/'`directfb/DirectFBDevice.cpp

libgnashvaapi_la-vaapi_utils.lo: vaapi/vaapi_utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-vaapi_utils.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-vaapi_utils.Tpo -c -o libgnashvaapi_la-vaapi_utils.lo `test -f 'vaapi/vaapi_utils.cpp' || echo '$(srcdir)/'`vaapi/vaapi_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-vaapi_utils.Tpo $(DEPDIR)/libgnashvaapi_la-vaapi_utils.Plo
#	$(AM_V_CXX)source='vaapi/vaapi_utils.cpp' object='libgnashvaapi_la-vaapi_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-vaapi_utils.lo `test -f 'vaapi/vaapi_utils.cpp' || echo '$(srcdir)/'`vaapi/vaapi_utils.cpp

libgnashvaapi_la-VaapiContext.lo: vaapi/VaapiContext.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiContext.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiContext.Tpo -c -o libgnashvaapi_la-VaapiContext.lo `test -f 'vaapi/VaapiContext.cpp' || echo '$(srcdir)/'`vaapi/VaapiContext.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiContext.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiContext.Plo
#	$(AM_V_CXX)source='vaapi/VaapiContext.cpp' object='libgnashvaapi_la-VaapiContext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiContext.lo `test -f 'vaapi/VaapiContext.cpp' || echo '$(srcdir)/'`vaapi/VaapiContext.cpp

libgnashvaapi_la-VaapiDisplay.lo: vaapi/VaapiDisplay.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiDisplay.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiDisplay.Tpo -c -o libgnashvaapi_la-VaapiDisplay.lo `test -f 'vaapi/VaapiDisplay.cpp' || echo '$(srcdir)/'`vaapi/VaapiDisplay.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiDisplay.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiDisplay.Plo
#	$(AM_V_CXX)source='vaapi/VaapiDisplay.cpp' object='libgnashvaapi_la-VaapiDisplay.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiDisplay.lo `test -f 'vaapi/VaapiDisplay.cpp' || echo '$(srcdir)/'`vaapi/VaapiDisplay.cpp

libgnashvaapi_la-VaapiGlobalContext.lo: vaapi/VaapiGlobalContext.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiGlobalContext.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiGlobalContext.Tpo -c -o libgnashvaapi_la-VaapiGlobalContext.lo `test -f 'vaapi/VaapiGlobalContext.cpp' || echo '$(srcdir)/'`vaapi/VaapiGlobalContext.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiGlobalContext.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiGlobalContext.Plo
#	$(AM_V_CXX)source='vaapi/VaapiGlobalContext.cpp' object='libgnashvaapi_la-VaapiGlobalContext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiGlobalContext.lo `test -f 'vaapi/VaapiGlobalContext.cpp' || echo '$(srcdir)/'`vaapi/VaapiGlobalContext.cpp

libgnashvaapi_la-VaapiImage.lo: vaapi/VaapiImage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiImage.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiImage.Tpo -c -o libgnashvaapi_la-VaapiImage.lo `test -f 'vaapi/VaapiImage.cpp' || echo '$(srcdir)/'`vaapi/VaapiImage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiImage.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiImage.Plo
#	$(AM_V_CXX)source='vaapi/VaapiImage.cpp' object='libgnashvaapi_la-VaapiImage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiImage.lo `test -f 'vaapi/VaapiImage.cpp' || echo '$(srcdir)/'`vaapi/VaapiImage.cpp

libgnashvaapi_la-VaapiImageFormat.lo: vaapi/VaapiImageFormat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiImageFormat.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiImageFormat.Tpo -c -o libgnashvaapi_la-VaapiImageFormat.lo `test -f 'vaapi/VaapiImageFormat.cpp' || echo '$(srcdir)/'`vaapi/VaapiImageFormat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiImageFormat.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiImageFormat.Plo
#	$(AM_V_CXX)source='vaapi/VaapiImageFormat.cpp' object='libgnashvaapi_la-VaapiImageFormat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiImageFormat.lo `test -f 'vaapi/VaapiImageFormat.cpp' || echo '$(srcdir)/'`vaapi/VaapiImageFormat.cpp

libgnashvaapi_la-VaapiSubpicture.lo: vaapi/VaapiSubpicture.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiSubpicture.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiSubpicture.Tpo -c -o libgnashvaapi_la-VaapiSubpicture.lo `test -f 'vaapi/VaapiSubpicture.cpp' || echo '$(srcdir)/'`vaapi/VaapiSubpicture.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiSubpicture.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiSubpicture.Plo
#	$(AM_V_CXX)source='vaapi/VaapiSubpicture.cpp' object='libgnashvaapi_la-VaapiSubpicture.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiSubpicture.lo `test -f 'vaapi/VaapiSubpicture.cpp' || echo '$(srcdir)/'`vaapi/VaapiSubpicture.cpp

libgnashvaapi_la-VaapiSurface.lo: vaapi/VaapiSurface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiSurface.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiSurface.Tpo -c -o libgnashvaapi_la-VaapiSurface.lo `test -f 'vaapi/VaapiSurface.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiSurface.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiSurface.Plo
#	$(AM_V_CXX)source='vaapi/VaapiSurface.cpp' object='libgnashvaapi_la-VaapiSurface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiSurface.lo `test -f 'vaapi/VaapiSurface.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurface.cpp

libgnashvaapi_la-VaapiSurfaceProxy.lo: vaapi/VaapiSurfaceProxy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiSurfaceProxy.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceProxy.Tpo -c -o libgnashvaapi_la-VaapiSurfaceProxy.lo `test -f 'vaapi/VaapiSurfaceProxy.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurfaceProxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceProxy.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceProxy.Plo
#	$(AM_V_CXX)source='vaapi/VaapiSurfaceProxy.cpp' object='libgnashvaapi_la-VaapiSurfaceProxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiSurfaceProxy.lo `test -f 'vaapi/VaapiSurfaceProxy.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurfaceProxy.cpp

libgnashvaapi_la-VaapiSurfaceGLX.lo: vaapi/VaapiSurfaceGLX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashvaapi_la-VaapiSurfaceGLX.lo -MD -MP -MF $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceGLX.Tpo -c -o libgnashvaapi_la-VaapiSurfaceGLX.lo `test -f 'vaapi/VaapiSurfaceGLX.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurfaceGLX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceGLX.Tpo $(DEPDIR)/libgnashvaapi_la-VaapiSurfaceGLX.Plo
#	$(AM_V_CXX)source='vaapi/VaapiSurfaceGLX.cpp' object='libgnashvaapi_la-VaapiSurfaceGLX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashvaapi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashvaapi_la-VaapiSurfaceGLX.lo `test -f 'vaapi/VaapiSurfaceGLX.cpp' || echo '$(srcdir)/'`vaapi/VaapiSurfaceGLX.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pkglibLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkglibLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-pkglibLTLIBRARIES

.PRECIOUS: Makefile


# Rebuild with GCC 4.x Mudflap support
mudflap:
	@echo "Rebuilding with GCC Mudflap support"
	$(MAKE) CXXFLAGS="`$(CXXFLAGS) -fmudflap" LDFLAGS="$(LDFLAGS) -lmudflap"

clean-hook:
	-rm -f core.*

# This is for Linux Input Event support

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
