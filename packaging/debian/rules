#!/usr/bin/make -f
# The template for this file was originally written by Joey Hess and Craig Small.
# Developed for Gnash by Miriam Ruiz

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS = -Wall -g -Werror-implicit-function-declaration

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

# shared library versions, option 1
version=2.0.5
major=2
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

# CONFIGURE

configure: configure.ac
	dh_testdir
	for i in debian/patches/*.diff; do \
		test -e "$$i.stamp" || patch -p1 <"$$i" && touch "$$i.stamp"; \
		done
	./autogen.sh

config.status: configure
	dh_testdir
	# Add here commands to configure the package.
	CXXFLAGS="-g" ./configure --host=$(DEB_HOST_GNU_TYPE) \
		--build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info \
		--enable-sdk-install \
		--with-plugindir=\$${prefix}/lib/mozilla/plugins \
		--disable-static --enable-klash

# BUILD

build: build-stamp
build-stamp:  config.status
	dh_testdir
	# Add here commands to compile the package.
	$(MAKE)

	touch build-stamp

# CLEAN

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	-$(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif

	dh_clean 

maintainer-clean:
	dh_testdir
	dh_testroot
	-for i in debian/patches/*.diff; do \
		test -e "$$i.stamp" && patch -p1 -R <"$$i" && rm -f "$$i.stamp"; \
		done
	rm -f build-stamp
ifeq (Makefile,$(wildcard Makefile))
	$(MAKE) maintainer-clean
endif
ifneq ($(wildcard ${AUTO_JUNK}),)
	rm $(wildcard ${AUTO_JUNK})
endif
	find . -name Makefile.in -exec rm {} \;
	dh_clean

# INSTALL

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	install -d $(CURDIR)/debian/tmp/usr/bin
	install -d $(CURDIR)/debian/tmp/usr/lib
	install -d $(CURDIR)/debian/tmp/usr/lib/mozilla/plugins/
	install -d $(CURDIR)/debian/tmp/usr/include/gnash
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp

# CREATE PACKAGES

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
	dh_install --sourcedir=$(CURDIR)/debian/tmp
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
