# 
#   Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

#
# Build a Firefox XPI package
#

# building an xpi is similar to building a binary snapshot, the main difference
# being how it gets configured, and how the bundle of the package gets made.
# for an xpi package, we have to configure with --enable-xpcom, which the plugin
# uses to find the directory where Gnash lives.

# Do the entire process to build an xpi package
xpi: snapshot xpi-configure snapshot-build snapshot-install

# build the xpi package bundle. snapshot-build and snapshot-install need to
# have been run already. If you wish the automatic dependency checking, use
# the 'xpi' target instead, as this is meant only to be called directly when
# debugging package building.
xpi-bundle:
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-${RELEASE}$${now}"; \
	snapshot_dir="gnash-${RELEASE}$${now}"; \
	snapshot_build="$${snapshot_dir}/_build"; \
	snapshot_dest="/tmp/gnash_${RELEASE}$${now}"; \
	snapshot_tmp="/tmp/gnash_${RELEASE}$${now}-xpi"; \
	if ! test -d $${snapshot_dest}/ ; then \
	  mkdir $${snapshot_dest}; \
        else \
          rm -rf $${snapshot_dest}/*; \
	fi; \
	for i in install.rdf; do \
	  cp -fr $(srcdir)/packaging/xpi/$$i $${snapshot_tmp}; \
	done; \
	$(MAKE) $(AM_MAKEFLAGS) -C $${snapshot_build} install-pkglib DESTDIR=$${snapshot_tmp}; \
	mkdir -p $${snapshot_dest}/plugins; \
	cp -fr $${snapshot_dest}/$(bindir)/*gnash $${snapshot_tmp}/plugins; \
	strip $${snapshot_dest}/plugins/gtk-gnash; \
	cp -fr $${snapshot_dest}$(localedir) $${snapshot_tmp}/; \
	cp -fr $${snapshot_dest}/tmp/plugin/libgnashplugin.so $${snapshot_tmp}/plugins; \
	cp -fr $${snapshot_dest}/tmp/plugin/libgnashcomponent.so $${snapshot_tmp}/plugins; \
	(cd $${snapshot_tmp}; $(ZIP) -r /tmp/$${snapshot_dir}.xpi *)
#	cp -fr $${snapshot_dest}/tmp/plugin/extensions/*.xpt $${snapshot_tmp}/plugins;
#	cp -fr $${snapshot_dest}/tmp/plugin/extensions/*.so $${snapshot_tmp}/plugins;

# configure the xpi build. snapshot needs to have been run already. If you wish the
# automatic dependency checking, use the 'xpi' target instead, as this is meant only
# to be called directly when debugging package building.
xpi-configure:
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-${RELEASE}$${now}"; \
	snapshot_dir="$${pkgname}"; \
	snapshot_build="$${snapshot_dir}/_build"; \
	if test ! -d $${snapshot_build}; then \
	  $(MKINSTALLDIRS) $${snapshot_build}; \
	fi; \
	cd $${snapshot_build}; ../configure \
	  --disable-dependency-tracking \
	  --disable-rpath \
	  --disable-testsuite \
	  --enable-xpcom \
	  --enable-media=ffmpeg \
	  --enable-jemalloc \
	  --enable-gui=gtk \
	  --prefix=/usr \
	  --mandir=/usr/share/man \
	  --infodir=/usr/share/info \
	  --with-npapi-plugindir=/usr/lib/mozilla/plugins

# remove files left from package building
xpi-clean:
	rm -fr xpi-* gnash-$(RELEASE)*.xpi

.PHONY : xpi xpi-bundle xpi-configure
