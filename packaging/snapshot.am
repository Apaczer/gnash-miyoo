# 
#   Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

NOW = `date "+%Y%m%d"`
# for snapshots, this should always be something like trunk or head
# for an official release, it should be unset
RELEASE = trunk_

# these is the directories where the snapshot gets built. Sources are
# in the top level, the build goes in a _build subdirectory
SNAPSHOT_DIR = gnash-${RELEASE}${NOW}
SNAPSHOT_BUILD = gnash-${RELEASE}${NOW}/_build
SNAPSHOT_TMP = /tmp/gnash-${RELEASE}$(NOW)

#
# build a binary snapshot from of Gnash for systems we don't have
# packaging support for.
#

# start by creating the initial tarball using the dist-bzip2 target.
# This uses the default version for Gnash. which is 'trunk'. So we
# rename it to the dir we want to stay clear. Then we change the default
# version from 'trunk' to a date stamped version of trunk, like
# '20080202trunk'
snapshot: distdir
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-${RELEASE}$${now}"; \
	snapshot_dir="gnash-${RELEASE}$${now}"; \
	snapshot_tar="$${pkgname}.tar.gz"; \
	if test -d $${snapshot_dir}; then \
	  rm -fr $${snapshot_dir}; \
	fi; \
	mv -f gnash-trunk $${snapshot_dir}; \
	if test ! -f $${snapshot_dir}/configure.ac.orig; then \
	  mv -f $${snapshot_dir}/configure.ac $${snapshot_dir}/configure.ac.orig; \
	  sed -e "s/AC_INIT(gnash, trunk)/AC_INIT(gnash, trunk-$${now})/" \
	    $${snapshot_dir}/configure.ac.orig > $${snapshot_dir}/configure.ac; \
	  cd $${snapshot_dir} ; ./autogen.sh; cd .. ;\
	fi; \
	tar zcvf $${snapshot_tar} --exclude=$${snapshot_dir}/autom4te.cache \
	  --exclude=$${snapshot_dir}/configure.ac.orig $${snapshot_dir}
#	$(RM) -fr $${snapshot_dir}

snapshot-configure: snapshot
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-${RELEASE}$${now}"; \
	snapshot_dir="$${pkgname}"; \
	snapshot_build="$${snapshot_dir}/_build"; \
	if test ! -d $${snapshot_build}; then \
	  $(MKINSTALLDIRS) $${snapshot_build}; \
	fi; \
	if test -d /usr/local/mozilla-firefox/plugins; then \
          plugindir=/usr/local/mozilla-firefox/plugins; \
	else \
	  plugindir=/usr/lib/mozilla/plugins; \
        fi; \
	cd $${snapshot_build}; ../configure \
	$(SNAPSHOT_CONFIGURE_FLAGS) \
	  --disable-dependency-tracking\
	  --disable-rpath \
	  --prefix=/usr \
	  --mandir=/usr/share/man \
	  --infodir=/usr/share/info \
	  --with-plugindir=$${plugindir} \
	  --disable-static \
	  --enable-shared
#	  --with-extensions=all 
#	  --enable-gui=all 

snapshot-build: # snapshot-configure
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-${RELEASE}$${now}"; \
	snapshot_dir="$${pkgname}"; \
	snapshot_build="$${snapshot_dir}/_build"; \
	$(MAKE) $(AM_MAKEFLAGS) -C $${snapshot_build}; \
	$(MAKE) $(AM_MAKEFLAGS) -C $${snapshot_build}/doc/C info man html

# Install a package. Afterwards we link to the prebuilt man pages incase
# DocBook and DocBook2X aren't installed on this machine.
snapshot-install: #snapshot-build
	now=`date "+%Y%m%d"`; \
	snapshot_dir="gnash-${RELEASE}$${now}"; \
	snapshot_build="$${snapshot_dir}/_build"; \
	snapshot_tmp="/tmp/gnash_${RELEASE}$${now}-tmp"; \
	$(MAKE) $(AM_MAKEFLAGS) -C $${snapshot_build} install install-plugins DESTDIR=$${snapshot_tmp}

# We only want to bundle an installed gnash, so all the linker paths are
# correct
snapshot-bundle: snapshot snapshot-build snapshot-install
	-@now=`date "+%Y%m%d"`; \
	pkgname="gnash-trunk_$${now}"; \
	snapshot_dest="/tmp/$${pkgname}"; \
	snapshot_tmp="/tmp/$${pkgname}-tmp"; \
	snapshot_tar="$${snapshot_tmp}-$(host_cpu)-$(host_os).tar.gz"; \
	if test ! -d $${snapshot_tmp}; then \
	  $(MKINSTALLDIRS) $${snapshot_tmp}; \
	fi; \
	rm -f $${snapshot_dest}/usr/lib/*.la; \
	cp @srcdir@/COPYING $${snapshot_tmp}; \
	cp @srcdir@/config.guess $${snapshot_tmp}; \
	cp @srcdir@/packaging/install-gnash.sh $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/bin $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/share $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib/mozilla/plugins $${snapshot_tmp}; \
	cp -rp $${snapshot_dest}/usr/lib/kde3 $${snapshot_tmp}; \
	strip $${snapshot_tmp}/bin/*-gnash; \
	strip $${snapshot_tmp}/bin/gprocessor; \
	strip $${snapshot_tmp}/bin/dumpshm; \
	strip $${snapshot_tmp}/bin/flvdumper; \
	strip $${snapshot_tmp}/bin/rtmpget; \
	tar zcvCf /tmp $${snapshot_tar} $${pkgname}


snapshot-clean:
	-@rm -fr snapshot-* $(SNAPSHOT_BUILD) $(SNAPSHOT_TMP) gnash*$(VERSION)*.ipk

# .PHONY : snapshot

