<?xml version="1.0" encoding="utf-8"?>
<sect1 id="gnashrc">
  <title>User Configuration File</title>

  <para>
Individual user preferences may be set by editing variables with the <filename>.gnashrc</filename> file:
<programlisting>
~/.gnashrc
</programlisting>
</para>

<para>
The values in this configuration file apply only to an individual user, and become the default settings of the standalone player and the plugin.  Note that any command line options take precedence over <filename>.gnashrc</filename> settings.
</para>

<para>
The variables in the <filename>.gnashrc</filename> file support three types of arguments: on/off, numeric values, or in the case of the
    whitelist and blacklist, a list of hostnames as ASCII text.
  </para>


      <table id="tb-config-variables">
<title>User Configuration Variables</title>
<tgroup cols='3' align='left' colsep='1' rowsep='1'>
<colspec colname='Variable' />
<colspec colname='Value' />
<colspec colname='Function' />
<thead>
<row>
<entry>Variable</entry>
<entry>Value</entry>
<entry>Function</entry>
</row>
</thead>
<tbody>
<row>
<entry>localdomain</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls the loading of
	    external Flash movies over a network. This option
	    tells Gnash to only load Flash movies from the existing domain.</entry>
</row>
<row>
<entry>localhost</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls the loading of
	    external Flash movies over a network. This is a stricter
	    version of the <emphasis>localdomain</emphasis> setting as
	    this allows the loading of Flash movies to the same host
	    that is running &app;.</entry>
</row>
<row>
<entry>whitelist</entry>
<entry>hostnames</entry>
<entry>This is a list of hostnames, separated by spaces. If this list is populated, &app; will only load external Flash movies from the specified hosts.  The whitelist takes precedence over the blacklist.</entry>
</row>
<row>
<entry>blacklist</entry>
<entry>hostnames</entry>
<entry>This is a list of hostnames, separated by spaces.
	    External flash movies from these
            domains are never allowed to load. If whitelist is present
	    and not empty, blacklist is not used.</entry>
</row>
<row>
<entry>delay</entry>
<entry>Number</entry>
<entry>&app; uses a timer-based event mechanism to advance frames
	    at a steady rate. This option overrides the default
	    setting in Gnash to play a movie slower or faster.</entry>
</row>
<row>
<entry>verbosity</entry>
<entry>Number</entry>
<entry>This is a numeric value which defines the default level of
	    verbosity from the player.</entry>
</row>
<row>
<entry>MalformedSWFVerbosity</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls whether malformed SWF errors should
	    be printed. If set to true, verbosity level is automatically incremented.
	    Set <option>verbosity</option> to 0 afterwards to hush.</entry>
</row>
<row>
<entry>ASCodingErrorsVerbosity</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls whether ActionScript coding
	    errors should be printed. If set to true, verbosity level is
	    automatically incremented.  Set <option>verbosity</option> to 0 afterwards to hush.</entry>
</row>
<row>
<entry>debuglog</entry>
<entry>Absolute path</entry>
<entry>This is the full path and name of debug logfile as
	produced by &app;. On systems with a UNIX-type shell,
        a tilde prefix (~) will be expanded as by Posix shell requirements
        (see http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_01).</entry>
</row>
<row>
<entry>writelog</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls whether a debug log
	    is always written by Gnash, or not at all.</entry>
</row>
<row>
<entry>sound</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls the sound of the
	    standalone player. By default Gnash enables playing the
	    sound in any Flash movie.</entry>
</row>
<row>
<entry>pluginsound</entry>
<entry>on/off</entry>
<entry>This value can be set to either <emphasis>on</emphasis> or
	    <emphasis>off</emphasis>, and controls the sound of the
	    player when running as a browser plugin. By default, sound
	    is enabled when using Gnash as a browser plugin.</entry>
</row>
<row>
<entry>EnableExtensions</entry>
<entry>on/off</entry>
<entry>Set to <emphasis>on</emphasis> to enable extensions. This option is <emphasis>off</emphasis> by default</entry>
</row>
<row>
<entry>StartStopped</entry>
<entry>on/off</entry>
<entry>Set to <emphasis>on</emphasis> to have the GUI start in "stop" mode. This is useful in particular
	    for the plugin, so you have to explicitly start any movie on a webpage. This option is <emphasis>off</emphasis> by default.
	  </entry>
</row>
<row>
<entry>flashVersionString</entry>
<entry>string</entry>
<entry>Set the string returned by $version and System.capabilities.version.
       Useful to get around some flash version detection movies.
       Note that the version advertised by the plugin is NOT affected by this setting,
       instead you need to set the GNASH_FLASH_VERSION environment variable for
       the latter (which doesn't affect $version and System.capabilities.version).</entry>
</row>
<row>
<entry>StartStopped</entry>
<entry>on/off</entry>
<entry>Set to <emphasis>on</emphasis> to have the GUI start in "stop" mode. This is useful in particular
	    for the plugin, so you have to explicitly start any movie on a webpage. This option is <emphasis>off</emphasis> by default.
	  </entry>
</row>
</tbody>
</tgroup>
</table>

    
  <para>
The following example <filename>.gnashrc</filename> file allows a user to only play Flash files saved locally to the machine on which &app; is running.  It also specifically forbids content from doubleclick.com and mochibot.com.  &app;'s error output is set to be fairly verbose, with the debug log placed in a location convenient for the user.  Finally, sound is turned on for both the standalone player and the plugin.
</para>

  <programlisting>
  
    #
    # Gnash client options
    #

    # Only access remote content from our local domain
    set localdomain on

    # Only access content from our local host
    set localhost on

    # These sites are OK
    # uncommenting the following line will allow load of external
    # movies *only* from the specified hosts.
    #set whitelist www.doonesbury.com www.cnn.com www.9news.com

    # Don't access content from these sites
    set blacklist www.doubleclick.com mochibot.com

    # The delay between timer interrupts
    set delay 50

    # The default verbosity level
    set verbosity 1

    # Be verbose about malformed SWF
    set MalformedSWFVerbosity true

    # Be verbose about AS coding errors
    set ASCodingErrorsVerbosity true

    # The full path to the debug log
    set debuglog ~/gnash-dbg.log

    # Write a debug log to disk
    set writelog on

    # Enable or Disable sound for the standalone player
    set sound on

    # Enable or Disable sound for the standalone player
    set pluginsound on

  </programlisting>


</sect1>
  
