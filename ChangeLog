2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.{cpp,h}: cleanups: 
	  drop resetDisplayList, _frame0 and replace_if_depth_is_occupied
	  parameter of add_display_object.
	* server/swf/PlaceObject2Tag.cpp: update call to add_display_object

2007-08-30 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/Makefile.am: don't try to build
	  DefineEditTextVariableNameTest2-Runner from an non-existent .c
	  file (fixes 'make dist').
	* server/: character.{cpp,h}, edit_text_character.{cpp,h},
	  sprite_instance.{cpp,h}: change signature of character::unload()
	  to return a boolean value stating wheter any onUnload event was
	  queued due to removal.

2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/character.h: add const for removed clips depth offset.
	* testsuite/actionscript.all/MovieClip.as: test for depth shift when
	  onUnload method is defined and a clip is removed.
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: expect
	  gnash failures.
	* testsuite/actionscript.all/: Makefile.am, AsBroadcaster.as:
	  new test for AsBroadcaster.

2007-08-30 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: testcase about
	  movieclip destruction, also action execution order related.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	  
2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/array.h: document the push method, use some typedefs for
	  semplicity (iterators).
	* server/vm/fn_call.h: add string-returning dump_args().

2007-08-30 Markus Gothe <nietzsche@lysator.liu.se>

	* configure.ac, libbase/utility.h, server/asobj/Date.cpp,
	backend/render_handler_agg.cpp: Unified trunc() and added
	checking.
	* configure.ac, macros/libexe.m4, macros/kde.m4: 
	keep bourne-sh, /bin/sh, happy.
	* macros/boost.m4: Fixed issue with lib-checking.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/: Key.as, Mouse.as, Selection.as,
	  Stage.as, TextField.as: check elements supposedly created
	  by implicit call to ASBroadcaster.initialize().
	  See bug #20832.
	  NOTE: for TextField.as also fixed a wrong expected result for
	  targets SWF8+

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/MovieTester.cpp (initTestingRenderers): add ARGB32 and
	  ABGR32 renderers.

2007-08-29 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* configure.ac: added pixel formats ARGB32 and ABGR32; allow "all" value for
	  --with-pixelformat
	* backend/render_handler_agg.cpp: implement the two new pixel formats and
	  check for the host endianess; some initial changes in AGG cache class which
          currently is not used, however
	* backend/render_handler_agg.h, gui/fb.cpp: updated comments
	
2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/as_environment.cpp (get_variable): more verbosity in
	  debugging messages.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/as_value.cpp (to_sprite): use original target, not current
	  one, for dereferencing danglign MOVIECLIP refs; add TODO item about
	  the onUnload problem.
	* server/sprite_instance.{h,cpp}: add a getOrigTarget() to return original
	  target of a sprite (the target it got when first constructed, immune
	  from _name changes).
	* testsuite/misc-swfc.all/soft_reference_test1.sc: xcheck => check

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/soft_reference_test1.sc: add some
	  comments as to why Gnash fails.

2007-08-29 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/soft_reference_test1.sc: new focused
	  testcase about soft reference, still got an xcheck.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	  
2007-08-29 Chad Musick <chadmusick@msbx.net>

	* server/asobj/BlurFilter_as.cpp,.h
	* server/asobj/ColorMatrixFilter_as.cpp,.h
	* server/asobj/ConvolutionFilter_as.cpp,.h
	* server/asobj/DropShadowFilter_as.cpp,.h
	* server/asobj/GlowFilter_as.cpp,.h
	* server/asobj/GradientBevelFilter_as.cpp,.h
	* server/asobj/GradientGlowFilter_as.cpp,.h
	* server/asobj/BevelFilter_as.cpp,.h
	* server/asobj/BitmapFilter_as.cpp,.h
	  Change to use multiple inheritance for adaptation
	* server/BevelFilter.h,.cpp
	* server/BlurFilter.h,.cpp
	* server/ColorMatrixFilter.h,.cpp
	* server/ConvolutionFilter.h,.cpp
	* server/DropShadowFilter.h,.cpp
	* server/GlowFilter.h,.cpp
	* server/GradientBevelFilter.h,.cpp
	* server/GradientGlowFilter.h,.cpp
	  Changing to use multiple inheritance for adaptation
	* server/asobj/prophelper.h Update for using multiple inheritance
	* server/parser/filter_factory.cpp
	  Change to use correct type of operator for array pushes.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* libbase/utility.h: fix the frnd() function to behave as
	  intended by original author. Fixed bug #20920.

2007-08-29 Markus Gothe <nietzsche@lysator.liu.se>

	* libbase/component_hackery.cpp: Removed crufty file.
	* backend/render_handler_agg.cpp: Made trunc() uniform with the
	  one in Date.cpp.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* Makefile.am: distribute old ChangeLog files.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/text.h: fix signature of setFont(font*):
	  return void.

2007-08-28 Sandro Santilli <strk@keybit.net>

	* libbase/: image.{cpp,h}, jpeg.{cpp,h}: extend interface
	  for jpeg creators taking tu_file to specify
	  ownership of the input stream.
	* server/swf/tag_loaders.cpp: substitute calls to
	  stream::get_underlying_stream with use of a quick&dirty
	  tu_file adpater using stream underneath.
	* server/stream.h: remove get_underlying_stream method.

2007-08-28 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* server/stream.h: documented some functions
	
2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp: remove all bug jpeg-related
	  calls to stream::get_underlying_stream.

2007-08-28 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* server/sprite_instance.cpp: comment unused parameter 	

2007-08-28 Sandro Santilli <strk@keybit.net>

	* libbase/jpeg.{cpp,h}: cleanups, aimed at eventually implement
	  different inputs then tu_file (stream, buffer).

2007-08-28 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/actionscript.all/case.as: more tests.
	* server/swf_function.h: set function args to lower case when needed.
	  fix bug #20833.
	  
2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/: Makefile.am, BitsReader.{cpp,h}: new memory bits reader.
	* testsuite/server/: Makefile.am, BitsReaderTest.cpp: unit testing
	  for the new bits reader.

2007-08-28 Deanna Phillips <deanna>

	* libbase/utility.h: define exp2 and log2 if not available
	  based on HAVE_LOG2 and HAVE_EXP2
	* configure.ac: detect availability of log2 and exp2

2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/stream.{cpp,h}: inlined align(), cleanups in read_uint().

2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): use ints for twips
	  values, convert to float only when needed (construction of the
	  edges and paths). [last patch was bogus]

2007-08-28 Chad Musick <chadmusick@msbx.net>

	* server/asobj/BlurFilter_as.cpp,.h
	* server/asobj/ColorMatrixFilter_as.cpp,.h
	* server/asobj/ConvolutionFilter_as.cpp,.h
	* server/asobj/DropShadowFilter_as.cpp,.h
	* server/asobj/GlowFilter_as.cpp,.h
	* server/asobj/GradientBevelFilter_as.cpp,.h
	* server/asobj/GradientGlowFilter_as.cpp,.h
	* server/asobj/BevelFilter_as.cpp,.h
	* server/asobj/BitmapFilter_as.cpp,.h
	  Make ActionScript compatible filters
	* server/BevelFilter.h,.cpp
	* server/BlurFilter.h,.cpp
	* server/ColorMatrixFilter.h,.cpp
	* server/ConvolutionFilter.h,.cpp
	* server/DropShadowFilter.h,.cpp
	* server/GlowFilter.h,.cpp
	* server/GradientBevelFilter.h,.cpp
	* server/GradientGlowFilter.h,.cpp
	  Changes necessary for adapter compatibility
	* server/asobj/prophelper.h
	  File to make writing AS classes easier using an adapter
	* server/asobj/Makefile.am
	  Add new files
	 
2007-08-27 Sandro Santilli <strk@keybit.net>

	* libbase/utility.h: don't define exp2(), it's going to clash
	  with existing symbol on most systems (except some BSDen)...
	  Please provide a better patch for BSD.

2007-08-27 Deanna Phillips <deanna>

	* testsuite/misc-ming.all/NetStream-SquareTestRunner.cpp: include
	  <unistd.h>

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): make effective
	  use of the SHAPE_LOG compile-time macro, by removing any overhead
	  associated with it, when set to something != 0.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): use ints for twips
	  values, convert to float only when needed (construction of the
	  edges and paths).

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.cpp (read_sint): remove useless assertion.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.cpp (read_uint): optimize multi-byte reads:
	  less read_byte(), more read_bytes().
	* testsuite/server/StreamTest.cpp: more read_uint() tests.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/cxform.cpp, server/font.cpp, server/matrix.cpp,
	  server/stream.h, server/parser/button_character_def.cpp,
	  server/parser/edit_text_character_def.cpp,
	  server/parser/filter_factory.cpp,
	  server/parser/sound_definition.cpp,
	  server/parser/video_stream_def.cpp,
	  server/swf/PlaceObject2Tag.cpp, server/swf/tag_loaders.cpp,
	  utilities/parser.cpp: read_uint(1) => read_bit();
	* server/stream.cpp (read_uint): htf_sweet.swf aborts if we
	  assert bit_count <= 24, so change this base to <= 32 (will
	  inspect later).

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.{cpp,h}: add read_bit(), optimize read_uint()
	  a little-bit (there are likely more optimization options).
	* server/parser/shape_character_def.cpp (read): use read_bit()
	  instead of read_uint(1).
	* testsuite/server/StreamTest.cpp: more tests for read_bit().

2007-08-27 Markus Gothe <nietzsche@lysator.liu.se>

	* libbase/utility.h: defined exp2() as it's missing on some BSDen.
	* libbase/math.h OS X has got xF().
	* configure.ac check for exp2() and log2().

2007-08-27 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c,
	  testsuite/misc-ming.all/Makefile.am:  more tests, finished
	  deduction, testcase now enabled.	  
	
2007-08-27 Sandro Santilli <strk@keybit.net>

	* testsuite/server/: Makefile.am, StreamTest.cpp:
	  gnash::stream testing (for now it's just bit streaming, as a tool
	  for optimization of the read_uint)

2007-08-27 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/actionscript.all/ops.as: more tests about NaN.
	* testsuite/actionscript.all/toString_valueOf.as: more tests for deduction.
	  
2007-08-27 Chad Musick <chadmusick@msbx.net>

	* server/BevelFilter.cpp,.h: Fuller conversion to AS compatible
	* server/BitmapFilter.h: Fuller conversion to AS compatible
	* server/stream.cpp: Remove dead code from read_fixed
	* server/asobj/Makefile.am Add new files
	* server/parser/filter_factory.cpp: Removed typo bug pointed out by
	  Zou.
	* server/vm/ASHandlers.cpp,.h: Remove use of variable sized array.
	* server/asobj/BevelFilter_as.cpp,.h: Adapter pattern object for using
	  BevelFilter inside of ActionScript (not yet put in global)
	* server/asobj/BitmapFilter_as.cpp,.h: Adapater pattern object for
	  using BitmapFilter inside of ActionScript (not yet put in global)

2007-08-26 Deanna Phillips <deanna>

	* doc/gnash.1: Updated.

2007-08-26 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp, gui/gtksup.h: Add treeview to Movie Properties
          ready for InfoTree display.

2007-08-26 Chad Musick <chadmusick@msbx.net>

	* server/Makefile.am: Add new files, remove obsolete ones.
	* server/BevelFilter.h,.cpp: A Bevel display object filter
	* server/BitmapFilter.h: Base class for other filters
	* server/BlurFilter.h,.cpp: A Blur display object filter
	* server/ColorMatrixFilter.h,.cpp: A color matrix display filter
	* server/ConvolutionFilter.h,.cpp: A convolution display filter
	* server/DropShadowFilter.h,.cpp: A drop shadow display filter
	* server/GlowFilter.h,.cpp: A glow display filter
	* server/GradientBevelFilter.h,.cpp: A gradient bevel filter
	* server/GradientGlowFilter.h,.cpp: A gradient glow filter
	* server/filters.h,.cpp: Removed (split to other files)
	* server/stream.h,stream.cpp: Added read_float, read_short_ufixed,
	  fixed calculation of value in read_short_fixed, added read_ufixed
	* server/parser/filter_factory.h,.cpp: parsing code of filters
	* server/swf/PlaceObject2Tag.cpp: Changed to use new filters

2007-08-26 Sandro Santilli <strk@keybit.net>

	* configure.ac: keep mit-shm enabled by default (use --disable-mit-shm
	  to disable).
	* doc/C/usermanual/installation/feature_configuration.xml: update
	  documentation about --disable-mit-shm.

2007-08-26 Lauri Myllari    <lauri.myllari@gmail.com>

	* gui/gtk_glue_agg.cpp: fix expose events with mit-shm, by
	  disabling double buffering for _drawing_are

2007-08-26 Sandro Santilli <strk@keybit.net>

	* server/asobj/string.cpp (string_split): correctly handle some more
	  corner cases.
	* testsuite/swfdec/PASSING: string-split-empty-*.swf tests succeed.
	* testsuite/actionscript.all/String.as: some more testing for
	  String.split

2007-08-25 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/toString_valueOf.as: note that any
	  function is equal to any other in SWF5...
	* testsuite/actionscript.all/ops.as: more tests about isNaN(x) when
	  x != NaN (odd)

2007-08-25 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (ActionNewLessThan): convert operands to
	  primitive value before proceeding.
	* testsuite/actionscript.all/ops.as: xcheck => check

2007-08-25 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (ActionNewAdd): convert operands to
	  primitive value before proceeding.
	* server/as_value.h: make to_primitive() public
	* server/as_value.cpp (to_number): if valueOf returned a string value
	  call to_number() again on it; (equals): if one operand is a string
	  and the other is a number, don't compare unless the string converts
	  to a non-infinite number.
	* testsuite/actionscript.all/Number.as: add test for 'string'
	  convertion to number returning NaN
	* testsuite/actionscript.all/ops.as: xcheck => check
	* testsuite/actionscript.all/toString_valueOf.as xcheck => check

2007-08-24 Sandro Santilli <strk@keybit.net>

	* server/dlist.{h,cpp} (replace_character): call unload() on replaced
	  character and document the fact.
	* server/as_value.cpp: undefine the MOVIECLIP_AS_SOFTREF macro, tweak
	  equalSameType() and to_sprite() to use MOVIECLIP targets only when 
	  they are unloaded.
	* testsuite/misc-ming.all/displaylist_depths_test2.c: xcheck => check
	  (no more failures from this test)
	* testsuite/actionscript.all/MovieClip.as: xcheck => check
	  (soft-references related)
	* testsuite/actionscript.all/case.as: xcheck => check (soft refs).

2007-08-24 Miriam Ruiz <little_miry@yahoo.es>

        * plugin/klash/klash_part.cpp: Patch for GNASHEXE.

2007-08-24 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: more test for 
	  soft references.
	* server/as_value.cpp: fix build when MOVIECLIP_AS_SOFTREF is
	  undefined.
	* server/swf/PlaceObject2Tag.cpp (loader): remove unused variable.
	* server/as_environment.{cpp,h}: use a static const for expressing
	  number of global registers.

2007-08-24 Sandro Santilli <strk@keybit.net>

	* libbase/: tree.hpp => tree.hh: don't change original name of
	  external source code.
	* libbase/Makefile.am: distribute tree.hh

2007-08-24 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: test that '_root' and
	  '_level0' can be accessed as members of a movieclip, while 'this'
	  cannot.
	* testsuite/actionscript.all/delete.as: add TODO request for testing
	  variable access by path
	* testsuite/actionscript.all/getvariable.as: add test for accessing
	  slash-based paths starting with 'this'
	* server/sprite_instance.cpp (get_member): don't consider 'this' as
	  a member.
	* server/as_environment.cpp (find_object_{slash,dot}syntax): handle
	  paths starting with 'this'.

2007-08-24 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c: add a new 
	  testcase for EditText variables, not enabled yet, need review.
	  
2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/swf/PlaceObject2Tag.cpp,h: Add support for the
	  PlaceObject3 tag.  This immediately improves some SWF 8
	  support.  The tag still needs to do something with the
	  filters which it loads.
	* server/impl.cpp: Add a loader for PlaceObject3, remove
	  loaders for DefineShape4, which isn't yet functional.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/swf.h: Add FOCAL_GRADIENT to fill styles.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/stream.cpp,h: Add read_short_fixed() function for
	  what short fixed values (16 bits) are needed rather than
	  long fixed values (32 bits) from the SWF stream.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/filters.cpp,h: Effect filters for PlaceObject3 and
	  for buttons. No current effect, but it parses correctly from SWF.
	* Makefile.am: Add the filters files.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* server/as_environment.h: document case-sensitiveness of
	  find_target.
	* server/character.{h,cpp} (get_relative_target_common):
	  document and fix case-sensitiveness.
	* server/vm/ASHandlers.cpp (ActionSetProperty): log a actionscript
	  error if trying to set the property of an unknown target.
	* server/sprite_instance.cpp (get_member, get_relative_target): be
	  case sensitive/insensitive based on SWF target version.
	* testsuite/actionscript.all/case.as: more tests; some unexpected
	  successes, some unexpected failures.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_agg.cpp: remove need_shape_bounds()
	
2007-08-23 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.{cpp,h}: document
	  the read function; compute bound when not available
	  in the SWF (glyphs in DEFINEFONT*).

2007-08-23 Sandro Santilli <strk@keybit.net>

	* libamf/amf.{cpp,h}: fixed a bunch of memory errors, added
	  some dox, first pass to interface clean ups.
	* testsuite/libamf.all/Makefile.am: add testsuite/ to the 
	  include dir, to allow for using our check_equals functions.
	* testsuite/libamf.all/: test_object.cpp, test_string.cpp,
	  test_variable.cpp: fixed new[]/delete mismatches.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_agg.cpp: Initial support for glyphs
	  with known bounds

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/case.as: reduce alpha of clips used
	  for visual checking, to avoid hiding the visual traces; don't
	  print totals twice.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler.h, backend/render_handler_agg.cpp, 
	  backend/render_handler_tri.{cpp,h}, server/edit_text_character.cpp,
	  server/render.cpp, server/render.h: add parameter "masked" to 
    draw_poly(), adjust calls to this function and implement (un)masked
    polygons in AGG renderer (see bug #20655).
	* backend/render_handler_agg.cpp: draw_line_strip() now applies masks 

2007-08-23 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: expandPath called on non-POSIX systems
	  for other path operations. Whitelist and blacklist now space
          not colon separated. NOTE: old lists still work, but should
          be deprecated. Made private: extractSetting, extractNumber.
          Minor code cleanups.
	* docs/C/usermanual/usage/gnashrc.xml: add info about black-
          and whitelists.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* configure.ac: move BOOST macro detector invocation after
	  PTHREAD one, as the former requires the latter.

2007-08-23 Deanna Phillips <deanna>

	* macros/pthreads.m4: set pthread flags to -pthread for openbsd.
	* libbase/rc.cpp: include unistd.h for getuid()

2007-08-23 Markus Gothe <nietzsche@lysator.liu.se>

	* libamf/amf.cpp: memcpy -> strncpy, since it does a memory 
	access violation on Darwin (and porbably other OSes).

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/Makefile.am: specify input language 
	  in MTASC_CPP, so we can use a filename again (rather then
	  get meaningless <stdin> printed for __FILE__).
	* gui/gui.{cpp,h}: Use kasper's tree class for getMovieInfo
	  (InfoTable is now an InfoTree)
	* gui/gtk.cpp (menuitem_movieinfo_callback): fix to use
	  an InfoTree - just a leaf-iteration.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* libbase/tree.hh: include generic tree class by
	  Kasper Peeters <kasper.peeters@aei.mpg.de>

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/exception.as: more tests for
	  try/catch/finally.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* server/swf.h: add version and reference url to
	  ACTION_TRY and ACTION_THROW
	* server/parser/action_buffer.h: add read_uint8() method.
	* server/vm/ASHandlers.cpp: stub ACTION_TRY handler
	  (parsed the tag, doesn't do anything with the info yet).
	* testsuite/misc-mtasc.all/exception.as: more tests for
	  try/catch/finally.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/DrawingApiTestRunner.cpp:
	  Try another work-around to gcc-4.1.2 bug, commented
	  this time.
	* testsuite/actionscript.all/MovieClip.as:
	  Modify syntax used to test for functions availability
	  to cope with a bug in Ming < 00040005.
	  Should fix bug #20867.

2007-08-22 Chad Musick <chadmusick@msbx.net>

	* server/font.h, server/font.cpp: Define
	  m_display_name and m_copyright_name for the
	  DefineFontName tag (88) of SWF 9, reader
	  for the tag.
	* server/swf.h Add DEFINEFONTNAME tag to list.
	* server/impl.cpp Set loader for DefineFontName
	* server/swf/tag_loaders.h,.cpp Add loader for
	  DefineFontName tag.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* configure.ac: bail out if kde gui or kparts plugin are
	  requested but kde/qt deps are not met. Should fix bug
	  #20848.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* configure.ac: bail out if boost_thread is not set to yes.
	* macros/boost.m4: check for boost/thread.hpp. Should fix
	  bug #20847.

2007-08-22 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/masks_test2.c, 
	  testsuite/misc-ming.all/masks_test2runner.cpp, 
	  testsuite/misc-ming.all/Makefile.am: new testcase for nested masks.
	  
2007-08-22 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/dlist.cpp, server/sprite_instance.cpp: handle hiden characters
	  as masks, passed UdoG's test files.
	
2007-08-22 Chad Musick <chadmusick@msbx.net>

	* server/impl.cpp: Add tag loaders (default loaders)
	  for SWF9 opcodes, plus some older opcodes which were
	  not present.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp: rename View->MovieInfo to View->Properties,
	  make layout nicer and labels selectable.

2007-08-21 Sandro Santilli <strk@keybit.net>

	* libbase/embedVideoDecoderGst.cpp (createDecoder): don't
	  abort if outputFormat is NONE (renderer missing).
	  Fixes bug bug #20852.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: look for getpwnam
	* libbase/rc.cpp (expandPath): don't try to use getpwnam
	  if not provided by OS.

2007-08-21 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* gui/gui.cpp: Introduce FORCE_REDRAW macro

2007-08-21 Sandro Santilli <strk@keybit.net>

	* server/text.h: documentation bits for text_glyph_record
	* server/edit_text_character.{cpp,h}: Add support for dynamic 
	  wordWrap setting and initial autoSize handling.
	* server/parser/edit_text_character_def.h: style & cleanups.
	* testsuite/actionscript.all/TextField.as: more successes.

2007-08-21 Chad Musick <chadmusick@msbx.net>

        * testsuite/misc-ming.all/DrawingApiTestRunner.cpp
	  Add a . output to stderr to fix a problem with make check in some
	  versions of gcc.

2007-08-21 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_tri.cpp: fix world_to_pixel() so that OpenGL
	  works again 	

2007-08-21 Chad Musick <chadmusick@msbx.net>

	* server/swf.h: Add new tag values for SWF 9 support.

2007-08-21 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/dlist.cpp: update display(), for masks, please check.
	
2007-08-21 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.cpp (add_invalidated_bounds): use
	  instance bounds, not definition ones; reformat text when _width
	  or _height changes.
	* testsuite/misc-swfc.all/Makefile.am: use an absolute
	  path for MEDIADIR to make swfc happy; don't do anything
	  on make check if SWFC is not enabled.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: Fixes a typo, matches the whole username if
	  there's no slash (following POSIX) and makes expandPath
	  (not expandTilde) private.

2007-08-20 Chad Musick <chadmusick@msbx.net>

	* server/vm/ASHandlers.h: Add helper function for multi-byte
	  string handling
	* server/vm/ASHandlers.cpp: Implement helper function for multi-
	  byte strings and implement multi-byte versions of strlen,
	  substr, and chr

2007-08-20 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: look for the pwd.h header
	* doc/C/usermanual/usage/gnashrc.xml: add info about tilde expansion.
	* libbase/rc.{cpp,h}: add support for tilde expansion in debugLog
	  value.

2007-08-20 Sandro Santilli <strk@keybit.net>

	* libbase/log.{cpp,h}: print an error on stderr of the debug log file
	  can not be opened for writing. Minor cleanups (including dox).

2007-08-20 Sandro Santilli <strk@keybit.net>

	* server/vm/ExecutableCode.h (FunctionCode::markReachableResources):
	  Don't mark the function twice, and most importantly don't forget
	  to mark the target character !!

2007-08-20 Asger Ottar Alstrup <asger@area9.dk>

	* testsuite/misc-mtasc.all/: Makefile.am, exception.as:
	  Test for try/catch (gnash fails).

2007-08-20 Sandro Santilli <strk@keybit.net>

	* testsuite/libbase/: TCXXRc.cpp, gnashrc.in:
	  Test 'set debuglog' directive.

2007-08-20 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/log.cpp: fix 'set debuglog' directive.

2007-08-19 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/ops.as: test that NaN and undefined are
	  not less one other.
	* server/vm/ASHandlers.cpp (ActionGetVariables): simplify debugging
	  output.

2007-08-19 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (CommonGetUrl): check for _level#
	  loading even when loadTargetFlag is clear.
	* server/FreetypeGlyphsProvider.cpp: remove compiler warnings.
	* doc/C/usermanual/usage/gnashrc.xml: document
	  flashVersionString variable.

2007-08-19 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: Avoid string copies in inspectors;
	  add getFlashVersionString (support for
	  "set flashVersionString Bla bla bla" in gnashrc).
	* server/vm/VM.cpp (getPlayerVersion): Query RcInit for version
	  string
	* testsuite/libbase/: TCXXRc.cpp, gnashrc.in:
	  Add test for 

2007-08-19 Markus Gothe <nietzsche@lysator.liu.se>

	* testsuite/libbase/Makefile.am, 
	testsuite/libamf.all/Makefile.am: Added DEJAGNU_CFLAGS.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp (define_bits_lossless_2_loader):
	  ensure bytes, not bits!
	* server/vm/ASHandlers.cpp (CommonGetUrl): always check
	  for URL (security). Give precedence to loadVariable calls
	  even if target is _level#. Fixes load of uptoten.com.
	* plugin/plugin.cpp: Use the environmental variable
	  GNASH_PLUGIN_DESCRIPTION for the plugin description
	  (when set).

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/video_stream_instance.cpp: mark characters created
	  using new Video as dynamic.
	* server/character.h (isDynamic): remove bogus assertion
	  failing for dynamically-loaded movies.

2007-08-18 Petr Pisar <petr.pisar@atlas.cz>

	* po/cs.po: updated to version of 20070804

2007-08-18 Sandro Santilli <strk@keybit.net>

	* libbase/log.cpp: change the log_unimpl label to UNIMPLEMENTED.
	* server/text.cpp (resolve_font): fix missing return.
	* server/parser/text_character_def.cpp: fix compiler warnings.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* gui/gui.{cpp,h}: add a getMovieInfo() function as a quick hack
	  to print movie information.
	* gui/: gtk.cpp, gtksup.h: add a View->movieInfo menu item.

2007-08-18 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: define flash player version macros
	  for compatibility detectors.
	* plugin/plugin.cpp: build the flash player version
	  using provided macros.
	* server/vm/VM.cpp: buil flash player version using
	  provided macros.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/as_object.h (ensureType): fix printing of *source* type
	  name.
	* macros/firefox.m4: don't substitute GNASHEXE at all, it's not
	  used anymore.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/text.{cpp,h}: make text_style class store only the font
	  pointer, w/out the font_id, provide setFont and getFont
	  methods, the former always performing a lookup.
	* server/parser/text_character_def.cpp (read): use
	  text_style::setFont() to set the font this properly updates
	  the actual font pointer in the text_format, fixing bug #20812.
	* server/edit_text_character.cpp: use text_style::setFont() to
	  set font by pointer.
	* server/parser/: movie_definition.h, movie_def_impl.{h,cpp},
	  sprite_definition.h: const-correct get_font() method.
	* server/parser/movie_def_impl.{h,cpp}: const-corrected
	  in_import_table(), made private and re-activated assertion
	  checking temporarly removed during to GC layout changes.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/parser/text_character_def.cpp: use symbolic names for
	  tag types, more verbose parsing.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* libbase/jpeg.cpp (jpeg_error_exit): only print SWF errors if
	  configured to do so; (input_impl): throw an exception if
	  jpeg_read_header detected errors.
	* server/swf/tag_loaders.cpp (jpeg_tables_loader,
	  define_bits_jpeg_loader): early exception checking to avoid
	  parser interruption on malformed embedded jpeg.

2007-08-18 Felix Eckhofer <felix@tribut.de>

	* plugin/klash/klash_part.cpp: use the -u switch when invoking
	  the standalone gnash. Fixes youtube playback for konqueror.
	  Still missing -U and -P switches.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* macros/firefox.m4: drop --with-gnashexe and GNASHEXE macro
	* plugin/Makefile.am: define GNASHBINDIR based on ${bindir}
	* plugin/klash/Makefile.am: define GNASHBINDIR based on ${bindir}

2007-08-17 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (setVariables):
	  Convert variable names to lowercase when needed.
	* testsuite/misc-ming.all/: Makefile.am, FlashVarsTest.{as,html}:
	  Test that parameter names are converted to lowercase when target
	  SWF is < 7.

2007-08-17 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/vm/VM.cpp (getPlayerVersion): define FLASH_VERSION as
	  a compatibility version for use by $version or
	  System.capabilities.version based version detection kits.
	  (TODO items added for a cleaner handling of this).
	* plugin/plugin.cpp: define FLASH_VERSION as a compatibility version
	  for use by javascript-based flash version detection kits.

2007-08-17 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/as_function.cpp: initialize '__proto__' instead of 'constructor'.
	* testsuite/actionscript.all/Inheritance.as: more passes.

2007-08-17  Alfred M. Szmidt  <ams@gnu.org>

	* configure.ac: State that a <= 2.4 version of AGG is an error.

2007-08-16 Takashi Iwai <tiwai@suse.de>

	* libbase/network.cpp (Network::createServer): fix a bug making
	  the test for DEFAULTPROTO == "udp" always fail.

2007-08-16 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: have a Range2d member to express
	  current TextField boundary (_width,_height). Implement _width and
	  _height setters. Add compile-time macro for debugging (still doesn't
	  work as expected).
	* server/gnash.h: add more descriptions, a set() method and TODO items
	  for the 'point' class.
	* testsuite/actionscript.all/TextField.as: more passes.

2007-08-16 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-ming.all/registerClassTest2.c, Makefile.am: new testcase
	  for Object.registerClass.
	* testsuite/misc-ming.all/registerClassTest.c, 
	  testsuite/actionscript.all/Object.as, toString_valueOf.as: testcases review,
	  minor comments or changes.
	* testsuite/actionscript.all/Inheritance.as: more tests. testing for inheritance
	  never stops:)
	
2007-08-15 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/TextField.as: a few more tests for
	  interaction between _width, autoSize and wordWrap (more needed).

2007-08-15 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/actionscript.all/Object.as: more tests and new failures.
	  
2007-08-14 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* backend/sound_handler_sdl.cpp: Also count sounds who stops
	  because the reached the end. Fixes random eventSoundTest1
	  failures.

2007-08-14 Ivor Blockley <meteoryte@yahoo.com.au>

	* server/array.cpp: replace VLAs with std containers.
	  
2007-08-13 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/TextField.as: add more tests for
	  background, backgroundColor and interaction between _width and
	  autoSize.

2007-08-13 Zou Lunkai <zoulunkai@gmail.com>

	* server/sprite_instance.{h,cpp}: deprecate clone_display_object(), use 
	  duplicateMovieClip() instead.
	* testsuite/actionscript.all/ops.as: more tests.
	* testsuite/samples/gotoFrameOnKeyEvent-TestRunner.cpp: finish the test runner.

2007-08-12 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: add autoSize getter/setter
	  (still not used)
	* testsuite/actionscript.all/TextField.as: add tests for autoSize
	  member.
	* testsuite/misc-ming.all/DefineEditTextTest.c: add TODO items.

2007-08-12 Sandro Santilli <strk@keybit.net>

	* server/as_value.h: add is_bool()
	* server/edit_text_character.h (getBounds): add TODO item
	  (I belive is a fix for bug #20760)

2007-08-10 Sandro Santilli <strk@keybit.net>

	* backend/sound_handler_sdl.cpp: fix build for MAD media handler.
	* server/shape.cpp: remove useless include of hash_wrapper.h
	* gui/Makefile.am: fix build of sdl/cairo
	* configure.ac: abort if a requested renderer/gui combination
	  isn't supported (checked for gtk/kde/sdl/fb/fltk)

2007-08-10 Sandro Santilli <strk@keybit.net>

	* gui/Makefile.am: typo preventing gtk/cairo combination from building
	* server/FreetypeGlyphsProvider.{cpp,h}: add a destructor getting
	  rid of the resources associated with a face.
	* configure.ac: FLTK/OGL isn't supported, while SDL/OGL is !
	* testsuite/media/: README, sound1.wav:
	  Moved sound1.wav data from swfc dir to media dir,
	  add some info about it and sound1.mp3.
	* testsuite/misc-swfc.all/sound.wav: moved to
	  media/sound1.wav
	* testsuite/misc-swfc.all/Makefile.am: define MEDIADIR
	* testsuite/misc-swfc.all/check.sc: define a MEDIA
	  macro
	* testsuite/misc-swfc.all/sound.sc: use the MEDIA macro
	  to find media stuff.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* Makefile.am, configure.ac, testsuite/Makefile.am,
	  testsuite/misc-swfc.all/Makefile.am:
	  Enable swfc testsuite if 'swfc' is found on the system.

2007-08-10 David Rorex  <drorex@gmail.com>

	* server/FreetypeGlyphsProvider.cpp: minor change to print the
	  freetype glyph format in human readable form. patch #6148.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.{cpp,h}: refactor the check for call stack
	  depth at end of execution to take depth at *start* of execution
	  into account.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.cpp (cleanupAfterRun): don't assume the call
	  stack should be empty at the end of global code execution. Still
	  print an error as we need further investigation about it. Fixes
	  bug #20740.

2007-08-10 Paul Smedley <paul@smedley.info>

	* libbase/URL.cpp, libbase/container.h, libbase/network.cpp,
	  libbase/network.h, libbase/tu_config.h, libbase/tu_timer.cpp,
	  server/shm.cpp, server/shm.h, server/vm/ASHandlers.cpp,
	  utilities/dumpshm.cpp: Build support for OS/2.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/parser/Timeline.h (getFrameDepths): lock the mutex, as
	  documented in method description.

2007-08-10 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* backend/sound_handler.h, backend/sound_handler_{sdl,gst}.{h,cpp},
	  server/swf/tag_loaders.cpp: Introduce the SoundInfo class which 
	  contains the properties of the sound (format, samplerate, etc.).
	  When parsing a sound-tag the SoundInfo-object is created and
	  passed to the soundhandler along with the audio data, and the
	  parser can later ask for the SoundInfo-object for a specific
	  sound, which is needed when parsing sound-streams.

2007-08-10 Alexander Sack <asac@jwsdot.com>

	* backend/Makefile.am, libamf/Makefile.am, libbase/Makefile.am,
	  libgeometry/Makefile.am, plugin/mozilla-sdk/Makefile.am,
	  server/Makefile.am: use $pkglibdir for unversioned libs.

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp (sound_stream_block_loader): don't
	  discard the first 4 bytes if not reading an MP3. Makes ADPCM
	  sound better for the feed.swf case (but ADPCM decoder needs
	  lot more work to be correct)

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/FreetypeGlyphsProvider.cpp (getGlyph): don't abort if
	  FT_Load_Char doesn't return an outline glyph, rather print
	  an UNIMPLEMENTED message and the type of glyph you got.
	* server/swf/tag_loaders.cpp (ADPCMDecoder::adpcm_expand):
	  Rather then throwing a ParseException, just print an error
	  as it's much likely the error is in Gnash parser, rather
	  then in a malformed SWF, and tests show we do a better
	  job like that then by stopping the parser.
	  Also, print an error if the bytesNeeded computation doesn't
	  match the actual number of bytes read.

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp: move all ADPCM-related code in an
	  ADPCMDecoder class.
	* README_CVS: minimum version of automake is 1.9.6. 1.7 and 1.8 have
	  been tried w/out success. Might be a regression, but that is...
	* server/button_character_instance.cpp (construct): properly construct
	  all button child characters. Fixes bug #20729.
	* server/swf/tag_loaders.cpp (adpcm_expand): another try at fixing the
	  needed bytes count for compressed adpcm samples. Also, remove call
	  to ceil.

2007-08-09 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/character.h: add a constant 'noRatioValue'.
	* server/dlist.cpp: In function move_display_object(), don't set ratio
	  to zero when no ratio value provided by the displaylist tags; In function
	  reset(), remove all none-referenceable characters.
	* server/parser/timeline.h: revert to 1.3, keep strk's design, use std::set
	  instead of std::map.
	* server/parser/movie_def_impl.h, movie_definition.h, sprite_definition.h:
	  update interface of getTimelineDepths().
	* server/parser/morph2_character_def.cpp: set ratio value to zero at rendering 
	  time when no one is provided. 
	* server/sprite_instance.h: add a member variable is_jumping_back.
	* server/sprite_instance.cpp: reimplement add_display_object(); cleanup 
	  goto_frame(); wipe out timeline design 1,2,3; deprecate resetDisplayList();
	  ready to deprcate 'replace_if_depth_is_occupied '.
	* server/swf/placeObject2Tag.cpp: set ratio to character::NoRatioValue instead of
	  zero when no ratio provided.
	* testsuite/misc-ming.all/place_and_remove_object_insane_test.c: xchecks to checks.
	  should fix bug 20504. All in all, hopefully improved the old timeline design.
	
2007-08-09 David Rorex  <drorex@gmail.com>

	* testsuite/misc-swfc.all: new directory for testcases.
	* testsuite/misc-swfc.all/check.sc, Dejagnu.sc, sound.sc, hello.sc,
	  sound.wav, Makefile.am: new test framework by using swfc.

