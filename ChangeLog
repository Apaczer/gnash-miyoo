2007-09-20 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.cpp (set_variable_name): create
	  the new variable if it doesn't exist in registering sprite.
	* testsuite/misc-swfc.all/edittext_test1.sc: no more failures
	  here, but I'm sure it would be easy to break gnash more.
	  Zou, good luck :)

2007-09-20 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: add an updateText method
	  intended to be called by sprite_instance when a registered
	  text variable is updated; have set_text_value forward the 
	  text change back to the sprite_instance where any 
	  variable name is registered, for proper distribution of
	  the new text to any other TextField registered with the
	  same variable.
	* server/sprite_instance.cpp (set_text_value): use the new
	  updateText to update TextField text when variable name is
	  updated.
	* testsuite/misc-swfc.all/edittext_test1.sc: more successes.

2007-09-20 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: define a private method
	  to parse the text variable into a sprite_instance and property name
	  components, to be used later to update the state of a registered
	  variable when text is updated otherwise and to unregister the
	  variable name when unloaded or when variable name changes.

2007-09-20 Chad Musick <chadmusick@msbx.net>

	* libbase/string_table.h: Doxygen documentation.

2007-09-20 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/sprite_instance.cpp: goto_frame(), revert a few changes, 
	  which I believe caused the infinite loop when executing get_frame_number_test.swf
	
2007-09-20 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/asobj/Key.cpp: use key::codeMap instead of key::code.
		
2007-09-20 Zou Lunkai <zoulunkai@gmail.com>

	* server/gnash.h: drop key::gnashKey, reorganize key::code.
	* server/event_id.h: make the constructor	to take an unsigned char type.
	* server/movie_root.cpp, server/button_character_instance.cpp,
	  server/asobj/Key.cpp: use key::codeMap instead of key::code, fix getAscii().
	* gui/gtk.cpp, gui/kde.cpp: update a few key names.
	* testsuite/misc-ming.all/key_event_testrunner.cpp: fix bogus tests about
	  Key.getAscii().	   
	
2007-09-19 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (goto_frame): fix blind jump to target
	  frame when > frame count. We still want to ensure_frame_loaded
	  instead. 
	* server/parser/movie_def_impl.{cpp,h}: mutex-protect access to named
	  frames map.

2007-09-19 Sandro Santilli <strk@keybit.net>

	* extensions/mysql/mysql_db.cpp: use init_member, not set_member, when
	  initializing symbols (should fix use in SWF6 or lower versions -
	  untested but pretty sure).

2007-09-19 Chad Musick <chadmusick@msbx.net>

	* libbase/string_table.cpp,.h: Make member functions non-static and
	  add a facility to pre-load some strings.
	* server/PropertyList.cpp array.cpp as_environment.cpp as_function.cpp
	  as_object.cpp as_object.h as_value.cpp character.cpp
	  edit_text_character.cpp impl.cpp movie_root.cpp sprite_instance.cpp
	  swf_function.cpp textformat.cpp timers.cpp: Convert string table usage
	  to enum + instance use.
	* server/asobj/AsBroadcaster.cpp ContextMenu.cpp LoadVars.cpp
	  MovieClipLoader.cpp NetStream.cpp Object.cpp Stage.cpp prophelper.h
	  xml.cpp xmlsocket.cpp: Convert string table usage to enum + instance
	* server/vm/ASHandlers.cpp ActionExec.cpp: Convert string table usage
	* server/vm/VM.cpp VM.h: Add pre-load of common property names, convert
	  string table usage, add string table member.
	* server/vm/action.cpp action.h: Remove enumeration of standard properties
	  with the special handler, use string table enumeration instead. Unifies
	  handling.
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c: Success
	* testsuite/misc-ming.all/KeyTest-Runner.cpp Makefile.am
	  attachMovieTestRunner.cpp intervalTestRunner.cpp
	  key_event_test2runner.cpp key_event_test3runner.cpp
	  key_event_test5runner.cpp key_event_testrunner.cpp: Convert string table
	  usage
	* testsuite/movies.all/Makefile.am gravity_embedded-TestRunner.cpp:
	  Convert string table usage
	* testsuite/server/GetterSetterTest.cpp PropertyListTest.cpp: Convert
	  string table usage

2007-09-19 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.cpp (set_variable_name): reinitialize
	  text to default value.
	* testsuite/misc-swfc.all/edittext_test1.sc: more successes.

2007-09-19 Sandro Santilli <strk@keybit.net>

	* gui/gtk.cpp (setInterval): add a note about the fact that the 
	  current way of setting up the FPS timer is bogus. Note that the
	  problem is related to A/V syncing...

2007-09-19 Sandro Santilli <strk@keybit.net>

	* server/character.{cpp,h}: provide a generic
	  _name getter-setter.
	* server/sprite_instance.cpp: use character's version
	  for _name and _target getter/setter.
	* server/edit_text_character.cpp: use character's
	  _name and _target getter/setter.
	* testsuite/actionscript.all/TextField.as: successes
	  on _name and _target accesses, minor failures.
	* testsuite/misc-swfc.all/edittext_test1.sc: successes
	  on _name and _target access.

2007-09-19 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/TextField.as: add tests
	  for effects of changing _name.

2007-09-19 Zou Lunkai <zoulunkai@gmail.com>

	* server/gnash.h: more enums for extended ascii characters.

2007-09-19 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-swfc.all/edittext_test1.sc, Makefile.am: new testcase for 
	  TextField using swfc. Clearer then Ming based tests. TextField variable
	  still need some work.

2007-09-19 Sandro Santilli <strk@keybit.net>

	* gui/kde_glue_agg.cpp: fix initialization order warning.
	* gui/gui.{cpp,h}: draft an attempt at skipping rendering
	  when late of fps timer. It's experimental, and disabled
	  by default. Define SKIP_RENDERING_IF_LATE in gui.h to
	  try it out.

2007-09-19 Markus Gothe <nietzsche@lysator.liu.se>

	* configure.ac: Fixed typo.

2007-09-18 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.{cpp,h}: allow multiple edit_text_character
	  to be registered with a single variable name.
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c:
	  success in most tests (one still fails).

2007-09-18 Sandro Santilli <strk@keybit.net>

	* server/dlist.cpp (unload): don't unload again already-unloaded
	  characters. Fixes the assertion failure in
	  action_execution_order_test12.sc.

2007-09-18 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-swfc.all/action_execution_order_test12.sc, Makefile.am:
	  add new testcase, caught an assertion here. Disable it if it blocks your
	  work.
	
2007-09-18 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (execute_frame_tags): execute
	  init actions *after* DLIST tags. 
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc:
	  No more failures in this case.
	* testsuite/misc-ming.all/init_action_test.c: a single
	  failure was introduced by this comit, for known reason.
	  We decided to accept the failure and take care of it later.

2007-09-18 Sandro Santilli <strk@keybit.net>

	* server/array.{cpp,h}: Implement enumerateNonProperties().
	  Still not 100% correct but fixes youtube controls positioning
	  (bug #20469).
	* testsuite/actionscript.all/array.as: tests for enumeration
	  of array properties.

2007-09-18 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc:
	  Add visual traces of actions while being executed; add
	  comment about other finding.

2007-09-18 Sandro Santilli <strk@keybit.net>

	* server/swf/DoActionTag.h (doInitActionLoader): pass 'cid' value
	  to add_init_action().
	* server/parser/movie_definition.h (add_init_action): add support for
	  a 'cir' parameter, to ignore duplicated init actions for the same
	  character id.
	* server/parser/sprite_definition.h: update add_init_action signature
	* server/parser/movie_def_impl.{cpp,h}: update add_init_action
	  signature, use a std::set to keep note of character id for which
	  init actions have been added already, discarding the rest.
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: more
	  successes.

2007-09-18 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc:
	  Add test to verify init actions have been executed
	  in the correct order.

2007-09-17 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h} (format_text): get text alignment
	  using a new private function, which checks for _autoSize settings too.
	  Fixes bug #20760.
	* server/swf/tag_loaders.cpp (define_bits_jpeg3_loader): fix compiler
	  warning (signed vs. unsigned comparison).

2007-09-17 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* libbase/string_table.h: Fixed compilation for non-32 bit platforms.
	* server/parser/video_stream_def.{cpp,h}: Use CapitalCase for types.

2007-09-17 Lauri Myll√§ri <rez>

	* server/swf/tag_loaders.cpp: Also parse DelaySeek field for MP3 
	  in DEFINESOUND, fixes bug #21094.

2007-09-17 Sandro Santilli <strk@keybit.net>

	* server/parser/movie_definition.h: changed signature of get_playlist:
	  rename to getPlaylist, return by pointer, have the default
	  implementation return 0.
	* server/parser/BitmapMovieDefinition.{cpp,h}: don't build a dummy
	  PlayList just for implementing the get_playlist abstract method, 
	  it's not needed anymore (the default implementation does fine).
	* server/parser/movie_def_impl.{cpp,h}: use a std::map instead of a
	  std::vector to contain PlayList of each frame. This reduced memory
	  use for movies that don't have actions in *each* frame and removes
	  race conditions due to unexpected growth of frames while parsing
	  (when number of frames advertised in header doesn't match number
	  of SHOWFRAME found in the stream); (add_frame_name): don't insist
	  in _frames_loaded being less then advertised frame count.
	* server/parser/sprite_definition.{cpp,h}: use a std::map instead
	  of a std::vector for PlayList of frames. Cleanup construction
	  of dynamic sprite definitions now that we don't need to create
	  a fake PlayList only to store a dummy execute tag.
	* server/sprite_instance.cpp: update calls to getPlaylist.

2007-09-17 Zou Lunkai <zoulunkai@gmail.com>

	* server/gnash.h: another code map for proper key handling.
	
2007-09-16 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Number.as: more tests for Number()
	  returning a primitive number rather then an object. I suspect
	  most builtin functions will need to support both invocation as
	  constructor *and* simple invocation.
	* testsuite/actionscript.all/ops.as: more tests for comparison between
	  "different" nan values... :/

2007-09-16 Bastiaan Jacques <bastiaan@bjacques.org>

	* plugin/klash/klash_part.{cpp,h}: Properly add URL arguments to
	the Klash commandline. This enables Youtube playback in Konqueror.

2007-09-16 Chad Musick <chadmusick@msbx.net>

	* libbase/string_table.cpp,.h: A string table to cut down on memory
	  usage and lookup time for properties, particularly in inheritance.
	  Preparation for AS3.
	* libbase/Makefile.am: Add string_table to list of files which the
	  Makefile knows about.
	* server directory:
	*  PropertyList.cpp,.h array.cpp,.h as_environment.cpp as_function.cpp
	   as_object.cpp,.h as_value.cpp character.cpp edit_text_character.cpp,.h
	   movie_root.cpp sprite_instance.cpp,.h swf_function.cpp textformat.cpp
	   timers.cpp: Update to use string table.
	* server/asobj directory:
	   AsBroadcaster.cpp ContextMenu.cpp LoadVars.cpp MovieClipLoader.cpp
	   NetStream.cpp Object.cpp Stage.cpp prophelper.h xml.cpp xml.h
	   xmlsocket.cpp: Update to use string table.
	* server/parser/action_buffer.h: Update to use string table.
	* server/vm directory:
	   ASHandlers.cpp ActionExec.cpp action.cpp action.h: Update to use string
	   table.
	* testsuite/misc-ming.all directory:
	   KeyTest-Runner.cpp attachMovieTestRunner.cpp intervalTestRunner.cpp
	   key_event_test2runner.cpp key_event_test3runner.cpp
	   key_event_test5runner.cpp key_event_testrunner.cpp: Update to use
	   string table
	* testsuite/movies.all/gravity_embedded-TestRunner.cpp: Update to use
	  string table
	* testsuite/server/GetterSetterTest.cpp PropertyListTest.cpp: Update to
	  use string table
	* server/swf.h: More notes about AS3 operations.

2007-09-16 Zou Lunkai <zoulunkai@gmail.com>

	* server/gnash.h: add gnashCharacter code for proper key handling.
	
2007-09-15  Rob Savoye  <rob@ripple.welcomehome.org>

	* libbase/test.as: Only execute tests if the Lirc extension is
	installed. Check return codes for a clean exit.
	* libbase/lirc.cpp: Reduce debugging verbosity. Return a pointer
	with real memory behind it instead of by acident.
	* libbase/lirc.h: Add a field to contain the button name.
	* libbase/network.cpp: Don't just see if fd is set, make sure it's
	greater than zero to avoid problems!

	* extensions/lirc/test.as: Test case for Lirc extension.

2007-09-14  Rob Savoye  <rob@ripple.welcomehome.org>

	* extensions/lirc/Makefile.am: Chnage from lirc.* to lirc_ext.* to
	avoid name collisions. 
	* libbase/lirc.h, lirc.cpp: New files for lirc interface for
	remote control.
	* extensions/lirc_ext.h, lirc_ext.cpp: Renamed from lirc.*.
	* libbase/extensions.cpp: Change how extraneous directories get
	ignored.
	* Makefile.am: Add debug info for lirc.
	* backend/Makefile.am: Wrap conditionals around building the
	libraries. 
	* extensions/Makefile.am: Add Lirc extension.
	* extensions/dejagnu/dejagnu.cpp: Change debug support to log_*().
	* gui/Makefile.am: Add LIRC flags to build.
	* libbase/Makefile.am: Add lirc.cpp and lirc.h, new files for lirc
	support.
	* libbase/network.cpp, network.h: Add connectSocket() for talking
	to named pipes. 

2007-09-14 Sandro Santilli <strk@keybit.net>

	* server/DynamicShape.cpp: optimized bounds computation by the
	  drawing API.
	* testsuite/misc-ming.all/DrawingApiTest.as: add bounds tests.
	* server/shape.{cpp,h}: add path::expandBounds to compute bounds
	  of a path locally.
	* server/parser/shape_character_def.cpp (compute_bound): delegate
	  computation of path bounds to the new path method.

2007-09-14 Sandro Santilli <strk@keybit.net>

	* server/FreetypeGlyphsProvider.{cpp,h}: use USE_FREETYPE instead
	  of HAVE_FREETYPE2 ..
	* macros/freetype.m4: don't miss to add a -I to cflags; add a note
	  about the non-sense of the way we check for /usr/include.

2007-09-14 Markus Gothe <nietzsche@lysator.liu.se>

	* configure.ac: Look for broken -fvisibility-inlines-hidden.
	* macros/mtasc.m4: Added fallback path to /usr/share/ocaml/mtasc/std.

2007-09-14 Markus Gothe <nietzsche@lysator.liu.se>

	* server/asobj/BevelFilter_as.cpp, server/asobj/BitMapFilter_as.cpp,
	server/asobj/BlurFilter_as.cpp, server/asobj/ColorMatrixFilter_as.cpp,
	server/asobj/ConvolutionFilter_as.cpp,
	server/asobj/DropShadowFilter_as.cpp, server/asobj/GlowFilter_as.cpp,
	server/asobj/GradientBevelFilter_as.cpp,
	server/asobj/GradientGlowFilter_as.cpp,
	server/vm/ASHandlers.cpp, libbase/tree.hh

	Fixes for compilation with --enable-strict.

2007-09-13 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* server/parser/video_stream_def.{h,cpp}: Tie embedded video
	  frames to the swf-frame it is embedded in. The containers the
	  video frame is stored in was merged into one.

2007-09-13  Rob Savoye  <rob@ripple.welcomehome.org>

	* libbase/extension.cpp: Change alorithm for which files to ignore
	when scanning.

	* macros/lirc.m4: Search for lirc files, so we can support a
	remote control.

2007-09-13 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac, testsuite/misc-ming.all/Makefile.am: add conditional
	  for Ming version at least 0.4 before building get_frame test.
	* libbase/rc.cpp: set writelog off by default (bug #21037).


2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (restart): don't call construct again, to
	  avoid re-registering with the global instance list.
	* server/movie_root.h (addLiveChar): assert the character being
	  registered is not already in the list
	* server/button_character_instance.{cpp,h}: remove dead code
	  (restart_characters); (construct): don't call restart right
	  after construct.

2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/movie_root.cpp: cleanup debugging of ever growing list

2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/button_character_instance.{cpp,h}: implement unload() in an
	  attempt to properly mark as unloaded any character registered in the
	  global instance list (could happen for child sprites).
	* server/movie_root.cpp (markReachableResources): mark all characters
	  in the _liveChars. This makes Gnash more robust, but hides a problem
	  with the global instance list always growing. A proper fix would be
	  making sure that for *all* characters removed from a displaylist the
	  character::unload() is called, which marks the character as unloaded
	  and thus removes it from the global instance list. The change above
	  to button_character_instance seems not enough. I left debugging
	  output here so you can see how the list keeps growing.


2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/movie_root.{cpp,h} (restart): properly cleanup
	  action queue and instances list, reset levels so that
	  only _level0 is kept. Still not 100% correct but fixes
	  bug #21068.

2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: drop the second list only used for
	  chils advancement (_timelineChars) and associated accessors
	  (visitAllByReversePlacement).
	* server/movie_root.{cpp,h}: Add a global "advanceable" characters
	  list, used for advancement (in ::advance); provide an addLiveChar()
	  method to add characters that are willing to be advanced there.
	* server/button_character_instance.cpp (construct): register as
	  live character with the movie_root.
	* server/video_stream_instance.{cpp,h}: add a ::construct() method
	  to properly register as live character with the movie_root
	* server/sprite_instance.cpp (advance_sprite): forget about advancing
	  childs, movie_root will take care of that; (construct): register
	  self as a live character with the movie_root.
	* testsuite/misc-ming.all/action_execution_order_test11.c: no more
	  expected failures here.

2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.{cpp,h}: drop obsoleted oldDisplayList.

2007-09-13 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (sprite_create_text_field):
	  fix log_aserror calls (too few, too many args and
	  log_error to log_aserror).

2007-09-13 Sandro Santilli <strk@keybit.net>

	* gui/Makefile.am, gui/NullGui.cpp, libbase/Makefile.am,
	  libbase/triangulate_impl.h, libbase/tu_timer.cpp,
	  libbase/tu_timer.h, server/timers.h, server/asobj/NetStream.h,
	  server/asobj/NetStreamFfmpeg.cpp, server/vm/VM.cpp,
	  utilities/processor.cpp:
	  Revert Markus changes, as they introduce too many obvious failures.
	  Please avoid commits triggering failures on 'make check' and do
	  your best to have 'make check' run as many tests as possible.

2007-09-13 Markus Gothe <nietzsche@lysator.liu.se>

	* gui/NullGui.cpp libbase/Makefile.am libbase/triangulate_impl.h 
	server/timers.h server/asobj/NetStream.h 
	server/asobj/NetStreamFfmpeg.cpp 
	server/vm/VM.cpp utilities/processor.cpp
       
	* Removed Files:
        libbase/tu_timer.cpp libbase/tu_timer.h

	Overhauled tu_timer with the se of std::clock and boost/timer.hpp.
	Might, break things, but it better get fixed this way.

2007-09-12 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Inheritance.as: more tests for 'super'.

2007-09-12 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: Use the average of X and Y scaling
	to determine the proper line thickness.

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (sprite_create_text_field): check for
	  negative dimensions. Fixes bug #21021.
	* testsuite/actionscript.all/TextField.as: Add test for negative
	  dimensions given to createTextField().

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/asobj/AsBroadcaster.cpp: add support for passing arguments
	  for broadcasted message handlers.
	* testsuite/actionscript.all/AsBroadcaster.as: add tests for arguments
	  passed to broadcasted messages.

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/as_function.{cpp,h}: make 'prototype' a proper property,
	  change getPrototype() to return by intrusive_ptr.
	* server/sprite_instance.cpp: update call to getPrototype().

2007-09-12 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: Make sure we don't try to use
	a line width of 0: normalize the width.

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/as_environment.cpp (parse_path): revert zou change as it
	  breaks callFunction_testrunner (assertion failure).

2007-09-12 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: Implement getPixel().

2007-09-12 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Inheritance.as: more tests for double
	  inheritance.

2007-09-12 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp, gui/gui.{cpp,h},server/movie_root{cpp,h}
	* server/event_id.h, server/asobj/Key.{cpp,h}
	* server/edit_text_character.cpp
	* testsuite/MovieTester.cpp: Revert changes because
	  it causes too many problems. There is a better way.	  

2007-09-12 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Inheritance.as: few more tests (maybe
	  redundant) for constructor and __constructor__

2007-09-12 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: Add a debugging function
	called check_error(), enabled by toggling the DEBUG_OPENGL
	macro. Don't bother setting variables to their defaults.

2007-09-12 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/MovieTester{cpp,h}: remove utf8 from keypress,
	  pass default value.
	* gui/kde.cpp: Add default value to utf8.

2007-09-12 Zou Lunkai <zoulunkai@gmail.com>

	* server/as_environment.cpp: parse_path() cleanups.
	
2007-09-12 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp: pass unicode of key event when notifying gui.
	* gui/gui.{cpp,h}: pass unicode to movie_root.
	* server/movie_root{cpp,h}: notify key listeners of unicode.
	* server/event_id.h: add m_unicode.
	* server/asobj/Key.{cpp,h}: fix getAscii().
	* server/edit_text_character.cpp: read unicode, not swf keycode.
	* testsuite/MovieTester{cpp,h}: update notify_key_event test.

2007-09-12 Chad Musick <chadmusick@msbx.net>

	* server/as_value.cpp: Move test to silence compiler warnings.

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (construct): properly initialize
	  the '__constructor__' and 'constructor' members when a class
	  was registered with our definition.
	* testsuite/misc-ming.all/registerClassTest2.c: no more failures here.

2007-09-12 Chad Musick <chadmusick@msbx.net>

	* server/as_value.cpp: Make sure that exceptions don't
	  cause asserts, even if they escape into the wild.
	  (This escape is an error, but perhaps it should not
	  be fatal.)

2007-09-12 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.cpp: cleanup variables initialization
	  order.
	* testsuite/actionscript.all/MovieClip.as: minor tests for
	  removeMovieClip

2007-09-12 Zou Lunkai <zoulunkai@gmail.com>

	* server/vm/ASHandlers.cpp: drop parse_path for ActionCallFunction, it's
	  unnecessary and has case sensitiviness issue.
	* testsuite/misc-ming.all/callFunction_test.c: two more passes.
	
2007-09-12 Chad Musick <chadmusick@msbx.net>

	* server/as_value.cpp,h: Add exception types to as_value.
	* server/vm/ASHandlers.cpp: Implement try and throw
	* server/vm/ActionExec.cpp,h: Support for try and throw
	* testsuite/misc-mtasc.all/exception.as: Exceptions now work.

2007-09-11 Sandro Santilli <strk@keybit.net>

	* server/as_object.{cpp,h} (copyProperties): don't copy __proto__.

2007-09-11 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/AsBroadcaster.as: a couple more tests
	  for return from broadcastMessage.
	* server/asobj/AsBroadcaster.cpp: fix return from broadcastMessage.
	* testsuite/swfdec/PASSING: asbroadcaster-broadcastMessage-retval-*.swf 
	  all pass now.
	* server/as_value.cpp (to_debug_string): fix debug print for movieclip
	  values.

2007-09-11 Sandro Santilli <strk@keybit.net>

	* server/array.{cpp,h}: add removeFirst and visitAll methods.
	* server/as_object.{cpp,h}: add getMember and callMethod memebers
	  for ActionScript-like coding.
	* server/asobj/: Makefile.am, Global.cpp, AsBroadcaster.{cpp,h}:
	  First draft at AsBroadcaster. NOTE: this is not 100% compatible
	  but contains some special code to handle corner cases for compatbility
	  sake (mostly to avoid breaking swfdec testcases). The normal case
	  will still be faster then the average one.

2007-09-11 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/gnash.h: add more keycodes.
	* gui/gtk.cpp: pass more keystrokes.
	* server/edit_text_character.cpp: do not add character to string
	  when shift pressed.

2007-09-11 Sandro Santilli <strk@keybit.net>

	* testsuite/swfdec/PASSING: super-this-5.swf passes (probably since
	  zou commit).
	* testsuite/anaylse-results.sh: fix print of unexpected successes.

2007-09-11 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: Disable polygon smoothing for now as
	it has some unwanted side effects.

2007-09-11 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/render_handler_ogl.cpp: GL_MODELVIEW is the default matrix
	mode, so don't bother setting it at every opportunity. Rather, reset it
	to the standard value after it is changed to something else. Round
	lines by drawing a round point on the end of every line (fixes
	#18014). Enable pologon smoothing (anti-aliasing).

2007-09-11 Zou Lunkai <zoulunkai@gmail.com>

	* server/asobj/Global.cpp: don't initialize Function class for SWF < 6.
	* testsuite/actionscript.all/Inheritance.as, 
	  testsuite/actionscript.all/Function.as: disable a few confusing
	  and duplicated(but correct) tests for SWF5. more passes.
	* testsuite/actionscript.all/Number.as, 
	  testsuite/actionscript.all/toString_valueOf.as: more passes.
	  
2007-09-10  Rob Savoye  <rob@ripple.welcomehome.org>

	* macros/curl.m4: sed any "-L/usr/lib" off the output of
	curl-config. This breaks some 64 bit systems.
	* macros/kde.m4: Do an ls instead of a test to find kde libraries.
	* macros/pango.m4, gtk2.m4, gnashpkgtool.m4, ffmpeg.m4: Use
	--libs-only-l with pkg-config as sometimes the path is wrong for
	64bit systems.

2007-09-10 Sandro Santilli <strk@keybit.net>

	* server/parser/morph2_character_def.cpp (read):
	  Set shapes bounds *after* calling ::read() on them.
	  Fixes bug #21020.

2007-09-10 Sandro Santilli <strk@keybit.net>

	* server/bitmap_info.h: drop OGL-specific members.
	* libbase/image.{cpp,h}: cleanup the image_base interface:
	  - make more members private to reduce chaces of buffer size
	    and associated size-describing members mismatch (still more
	    to do)
	  - add more methods from statics which do not have access
	    to now-private members 
	* backend/render_handler_ogl.cpp: add OGL-specific members
	  to bitmap_info_ogl, update uses of image_base.
	* backend/render_handler_agg.cpp, libbase/embedVideoDecoderFfmpeg.cpp,
	  libbase/embedVideoDecoderGst.cpp, libbase/image_filters.cpp,
	  server/FreetypeGlyphsProvider.cpp, fill_style.cpp,
	  server/fontlib.{cpp,h}, server/parser/BitmapMovieDefinition.cpp,
	  server/swf/tag_loaders.cpp, server/asobj/NetStream.cpp,
	  server/asobj/NetStreamFfmpeg.cpp, backend/render_handler_cairo.cpp:
	  Update uses of image_base

2007-09-10 Sandro Santilli <strk@keybit.net>

	* server/asobj/NetStreamGst.cpp (GstInstallPluginsResultCb): comment
	  out unused parameter and garbage message.
	* server/parser/video_stream_def.cpp (dtor): delete [] since we
	  allocated with new [].
	* libbase/Makefile.am: drop image_filters.cpp (seems unused)
	* server/dlist.cpp (reset): remove unused variable.
	
2007-09-10 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-ming.all/Makefile.am: enable tow old testcases.
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: one more
	  test about init actions.
	  
2007-09-10 Chad Musick <chadmusick@msbx.net>

	* server/fill_style.cpp: Correct handling of morph fills.
	* server/styles.cpp: Correct handling of morph colors.
	* server/parser/morph2_character_def.cpp: Remove @@hack
	  line, and fix underlying problem instead. Should fix
	  bug #19085. Morph and Morph2 shapes now work correctly.
	* server/parser/shape_character_def.cpp: Be sure to read
	  on alignment where needed.

2007-09-08 Sandro Santilli <strk@keybit.net>

	* server/parser/video_stream_def.h: document class members,
	  add some notes or todo items
	* server/parser/video_stream_def.cpp (read): add a TODO item
	  as I think we're misreading the VIDEOFRAME tag.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/video_stream_instance.h: keep definition by 
	  intrusive_ptr (just for consistency with other
	  character instances)
	* server/parser/video_stream_def.cpp (get_frame_data):
	  always set output parameters to 0 if requested frame
	  number is not available.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: change signature of .reset() to
	  take a sprite_instance for calling set_invalidated() when
	  needed.
	* server/sprite_instance.cpp (restoreDisplayList): update
	  call to DisplayList::reset() - this optimizes loop-backs
	  and fixes a failure introduced by previous commit
	  (it's nice to see that performance issues are also tested
	  by our testsuite - we'd just need some more)

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (restoreDisplayList): don't use
	  a copy of the display_list to optimize the call to set_invalidated.
	  Removing characters from the copy would shift unloaded characters
	  to a different depth, which in turn would fail an assertion
	  (which is *needed* or set_invalidated would not include invalidated
	  bounds of just-unloaded characters).
	  BTW, this suggests me we need a lot of tests for inv.bounds. as the
	  latest changes for depth swap on unload did likely break a few
	  cases.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp: disable the too many debugging
	  prints left over from the big action order commit.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* testsuite/anaylse-results.sh: add detailed report
	  of unexpected successes and failures.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Makefile.am,
	  testsuite/misc-ming.all/Makefile.am,
	  testsuite/misc-mtasc.all/Makefile.am,
	  testsuite/misc-swfc.all/Makefile.am,
	  testsuite/misc-swfmill.all/Makefile.am,
	  testsuite/swfdec/Makefile.am:
	  Don't have 'make check' fail here, rely
	  on analyzer to tell if something went unexpected.
	  This is to help with intermittent failures forcing
	  running the expensinve check over and over again.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* testsuite/anaylse-results.sh: exit with a failure if any real
	  failure or unexpected success is found in the logs. Cleanup
	  presentation code and output (the latter to now which subdirs have
	  failures or unexpected successes).

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/dlist.cpp (output operator): don't compare iterators from
	  different sequences !
	* server/movie_instance.cpp (advance): don't invoke ONLOAD event
	  handler, the event will be queued by ::construct instead
	* server/movie_root.cpp (setRootMovie): process actions
	  queued by effect of root movie construction.
	* server/sprite_instance.{cpp,h}:
	  - Drop do_action(), m_action_list and m_on_event_load_called members.
	  - Make ::construct virtual so it can be overridden by movie_instance.
	  - Have add_action_buffer queue globally or execute actions immediately depending
	    on a new (misnamed) _callingFrameActions flag (I want to cleanup this part next).
	    Basically, all actions are queued to the global list, with two
	    exceptions:  init actions and callFrame actions.
	  - Expose a new public queueAction(action_buf&) method, currenly
	    unused but possibly for use in a cleanup of the preceding queue-or-execute
	    actions handling.
	  - Move registration as core broadcaster listener code into its own
	    function (registerAsListener).
	  - Refactor restoreDisplayList() to also execute *action* tags of
	    target frame, so to get order right.
	  - Far cleaner advance_sprite() implementation.
	* testsuite/MovieTester.cpp (ctor): properly construct root movie,
	  and render after construction.
	* testsuite/swfdec/swfdec_gnash_tester: advance 10 times as intended
	  by swfdec testsuite, not 11 as we needed to do due to gnash bugs.
	* testsuite/misc-ming.all/: action_execution_order_extend_test.c,
	  action_execution_order_test2.c, action_execution_order_test4.c,
	  action_execution_order_test5.c, action_execution_order_test7.c,
	  action_execution_order_test9.c, action_execution_order_test10.sc:
	  SUCCESSES !
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc: SUCCESSES !
	* testsuite/swfdec/PASSING: SUCCESSES !

2007-09-07 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/: level5.as, level99.as: check
	  that at time of first-frame actions execution for loaded movies,
	  _currentframe is set to 1.
	* server/sprite_instance.cpp (loadMovie): don't use
	  movie_root::setRootMovie for loading external movies,
	  as that method is meant for kick-start only.
	* server/vm/action.cpp: remove dead code.

2007-09-07 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/action_execution_order_test10.sc:
	  check that _currentframe is 1 when actions in first frame of
	  _root are executed
	* server/movie_instance.{cpp,h}: add overridden ::construct
	  method, taking care of ensuring frame1 is completely loaded
	  and calling the superclass version of it. 
	* server/movie_root.cpp (setLevel): call ::construct on newly
	  added levels (including level0).

2007-09-07 Sandro Santilli <strk@keybit.net>

	* server/vm/VM.{cpp,h}: change the VM::init() functionality
	  to NOT instantiate the movie definition. This is propedeutic
	  for a cleanup in movie_instance construction, which will be
	  performed by movie_root::setLevel in next patch.
	* gui/Player.cpp, testsuite/MovieTester.cpp,
	  testsuite/server/DisplayListTest.cpp,
	  testsuite/server/GetterSetterTest.cpp,
	  testsuite/server/PropertyListTest.cpp,
	  utilities/processor.cpp:
	  Update VM & stage (movie_root) initialization calls
	  to take into account VM::init() semantic change.

2007-09-06 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/action_execution_order_test4.c: more
	  explicit test showing that defining onLoad for _root in first
	  frame works, while doesn't work for child sprites.
	* server/sprite_instance.cpp (add_display_object): only syntetize 
	  and instance name when actually placing a new character (simplifies
	  the code and fixes a case related to ratio compatibility).

2007-09-06 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* libbase/FLVParser.cpp: Made it more robust by accepting empty
	   tags, fixing bug #20889.
	* server/video_stream_instance.cpp: Check for data being NULL.
	* server/asobj/NetStreamFfmpeg.cpp: A few changes to make it
	  work better with only video or audio - not complete yet.

2007-09-06 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/: Dejagnu.sc, check.sc:
	  Also print expression being tested with {x}check_equals 
	* testsuite/misc-ming.all/action_execution_order_test1.c: Add tests
	  showing that onClipLoad event can reference self and characters placed 
	  either before or after the character carrying that event.

2007-09-06 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-ming.all/action_execution_order_test3.c: Reorganize and recomment
	  the source file, please make sure you know the tags order of produced swf file 
	  after your update.
	  
2007-09-05 Sandro Santilli <strk@keybit.net>

	* server/dlist.cpp (removeUnloaded): also remove from _timelineChars.

2007-09-05 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/action_execution_order_test3.c: attempt
	  to test REMOVEOBJECT before DOACTION (failed though, as Ming seems
	  to keep placing REMOVEOBJECT tags adjacent instead).
	  This test is reported as an evidence of behaviour 2 in
	  ActionsExecutionOrder#Verified_behaviour wiki page, so we either
	  need another or that behaviour is not verified !!

2007-09-05 Ivor Blockley <meteoryte@yahoo.com.au>

	* server/vm/action.{cpp,h}: add htmlText property to 
	as_standard_member ENUM
	* server/edit_text_character.{cpp,h}: add html property and cleanup
	handling of htmlText (note: still just strips tags at the moment).
	* testsuite/actionscript.all/TextField.as: 5 new passes, 1 new failure

2007-09-05 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: also maintain a list of characters by
	  placement and provide a visitByPlacement for visiting them.
	* server/sprite_instance.cpp: (advance_sprite): visit DisplayList
	  in reverse-placement order when advancing old and newly added
	  characters.
	* testsuite/misc-ming.all/action_execution_order_test2.c: one success
	  in action execution order.

2007-09-05 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* backend/sound_handler_{sdl,gst}.cpp: Remove primitive
	  audio syncing code. Fixes bug #20866 and #20851, but reopens
	  #20681.

2007-09-05 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: add ::unload method for taking
	  care of unloads triggered by parent unload.
	* server/sprite_instance.cpp (unload): use DisplayList::unload
	* testsuite/misc-swfc.all/movieclip_destruction_test4.sc: fix
	  destruction of childs w/out onUnload event handler defined.

2007-09-05 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: more tests about 
	  initactions, gnash fails by not respecting the actions order.
	* testsuite/misc-swfc.all/movieclip_destruction_test4.sc: more tests for 
	  catching unloaded character bug, got a xcheck.
	
2007-09-05 Markus Gothe <nietzsche@lysator.liu.se>

	* server/asobj/MovieClipLoader.cpp: iterator -> const_iterator.
	* libbase/timer.cpp: Added commentary.
	* backend/sound_handler_sdl.cpp: Fixed conflict with namespaces from
	 booost/cstdint.hpp.
	* utilities/*.cpp: #ifdef ENABLE_NLS.
	* testsuit/libamf.all/*.cpp: Fixed GNUisms.

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp: always check if we've been unloaded
	  by effect of a call to on_event(). Fixes bug #20974.

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/parser/sprite_definition.cpp (read): simplify handling of
	  malformed sprite definition (last SHOWFRAME not followed by END).
	  Fixes high CPU use and inresponsiveness while playing
	  gnashcrash.swf.

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/character.{cpp,h}: add hasEventHandler() and queueEvent()
	  methods. Implement ::unload by queuing the UNLOAD event (not its
	  handlers
	* server/vm/ExecutableCode.h: Add QueuedEvent "executable code", for
	  queuing events rather then handlers.

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.h: make execute_action() public, for use
	  by DoActionTag (for init actions).
	* server/swf/DoActionTag.h: execute init actions by directly
	  execute them (opposed to use add_action_buffer which queues them)
	* server/sprite_instance.cpp (execute_frame_tags): simplify execution
	  of init tag (simply execute them rather then have them queue and
	  then execute the queue).

2007-09-04 Sandro Santilli <strk@keybit.net>

	* NEWS: updated by copying from 0.8.1
	* server/edit_text_character.cpp: support case-insensitive
	  htmlText property (for SWF6).
	* testsuite/actionscript.all/TextField.as: fix expected results
	  (more successes, one failure which only worked by luck before).
	* testsuite/anaylse-results.sh: print also unexpected successes.

2007-09-04 Asger Ottar Alstrup <asger@area9.dk>

	* server/edit_text_character.cpp: add minimal support for htmlText.

2007-09-04 Chad Musick <chadmusick@msbx.net>

	* server/fill_style.cpp,.h: Let fill style know how to read
	  morph (2) type styles as well, to avoid duplicating lots
	  of code.
	* server/styles.cpp,.h: Fill line style know how to read
	  morph2 tags for the same reason.
	* server/impl.cpp: Change MORPHSHAPE2 loader to activate it.
	* server/parser/morph2_character_def.cpp: Parse MorphShape2
	  tags as well as MorphShape.
	* server/swf/tag_loaders.cpp: Recognize MorphShape2 tags.

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.{cpp,h}: add an _abortOnUnload flag
	  for premature abortion of action buffers being executed,
	  always false for functions and true by default for
	  global code (overridable by a third optional constructor
	  argument). Check target for being unloaded (if _abortOnUnload)
	  at opcode-level.
	* server/vm/ExecutableCode.h (EventCode): set _abortOnUnload
	  to false when constructing ActionExec for event code.
	* testsuite/misc-swfc.all/: movieclip_destruction_test1.sc,
	  movieclip_destruction_test3.sc: successes with premature
	  abortion of action buffers.

2007-09-04 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: make kde development package advice
	  accurate (see bug #20908).

2007-09-04 Sandro Santilli <strk@keybit.net>

	* server/dlist.cpp (reset): don't ::unload() again
	  on already unloaded characters. They might still be
	  in the list (and not in the removed zone) due to their
	  having an onUnload handler to be invoked when their parent
	  was unloaded. Fixes last assertion failure in bug #20949
	  (copter.swf)

2007-09-04 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-swfc.all/movieclip_destruction_test{1,3,4}.sc: more tests.
	* testsuite/misc-swfc.all/Makefile.am: enable new tests.
	
2007-09-04 Chad Musick <chadmusick@msbx.net>

	* backend/render_handler_tri.cpp: Enabling focal gradient fills on
	  renderers other than AGG.
	  	  
2007-09-04 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: fix some bogus tests
	  caused by bogus compiler convertion, and a few more tests, all passed.
	  
2007-09-03 Sandro Santilli <strk@keybit.net>

	* server/character.cpp (unload): call queueEventHandler before setting
	  _unloaded to true.
	* server/dlist.cpp (wherever characters are unloaded): call unload() after
	  removing the character.

2007-09-04 Chad Musick <chadmusick@msbx.net>

	* server/font.cpp,.h: Add is_subpixel_font flag for DefineFont3 tag.
	* server/text.cpp: Size SWF8, SWF9 fonts correctly -- they use subpixel
	  shapes, so they need to be scaled when displayed.

2007-09-03 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (advance_sprite): don't use
	  DisplayList::advance against DisplayList copies, for which
	  invariant is not maintained.

2007-09-03 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* render_handler_agg_style.h: focal gradients now render correctly

2007-09-03 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (advance_sprite): don't call
	  removeUnloaded on DisplayList copies (their ::advance will skip
	  unloaded elements, anyway).
	* server/as_value.cpp (to_sprite): make the dangling reference a
	  debugging info, not an error.

2007-09-03 Zou Lunkai <zoulunkai@gmail.com>

	* server/dlist.cpp: don't abort for unloaded characters in DisplayList::advance().
	  fixd a case in bug #20076.
	  
2007-09-03 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* render_handler_agg_style.h: Some fixes for focal gradients

2007-09-03 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.cpp (unload): don't forget to call
	  the base class version of the method (properly setting _unload
	  flag).

2007-09-03 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* doc/C/usermanual/usage/gnashrc.xml: Warn in docs about including
	  protocols in black- and whitelists.

2007-09-03 Sandro Santilli <strk@keybit.net>

	* server/character.h: Add depthInRemovedZone() methods.
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc:
	  Additional tests, and a typo fix.

2007-09-03 Chad Musick <chadmusick@msbx.net>

	* backend/render_handler_agg_style.h Correct(maybe) the placement of the
	  focal point for focal gradient fills.
	* server/fill_style.cpp Read focal gradient fills in the right place
	  (after gradient records, not before), also added focal gradients to
	  known bitmap transforms.

2007-09-03 Markus Gothe <nietzsche@lysator.liu.se> 

	* macros/boost.m4: Commented out bogus check and improved the
	  checking of BOOST_CFLAGS.
	* libbase/tu_types.h: Use boost/cstdint.hpp instead of inttypes.h
	* server/vm/action.h: __SGI_LIBC_USING_FROM_STD(va_list)
	* gui/gnash.cpp: setlocale() IFF #ENABLE_NLS.

2007-09-03 Chad Musick <chadmusick@msbx.net>

	* server/fill_style.h,.cpp -- Add recording of focal point for focal
	  gradient fill.
	* backend/render_handler_agg.cpp, backend/render_handler_agg_style.h
	  Adding gradient focal fill. I'm not sure if I've done this correctly,
	  but it didn't break anything.

2007-09-02 Chad Musick <chadmusick@msbx.net>

	* server/fill_style.cpp -- Update the allow focal gradient fill style,
	  and to accomodate some format changes for SWF8+ tags.  Focal
	  gradients are not implemented yet -- I don't yet know how to do this.
	* server/impl.cpp -- Update DefineShape4 loader function from fixme_loader
	  to shape loader.
	* server/styles.h -- Change signature of read function to include the
	  movie definition since it may be part of a fill style, which needs this.
	* server/styles.cpp -- Change read function to read new line styles
	  allowed in newer SWF files.
	* server/parser/shape_character_def.cpp -- Change loader to know how
	  to read a DefineShape4 tag.
	* server/swf/tag_loaders.cpp -- Let the shape_loader be able to load
	  a DefineShape4 tag.

2007-09-02 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc: one more test.
	* testsuite/misc-swfc.all/action_execution_order_test10.sc: another testcase
	  about actions order. If any questions, please add to the wiki.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	
2007-09-01 Sandro Santilli <strk@keybit.net>

	* server/as_object.{h,cpp}: handle __proto__ has a normal property.
	* server/sprite_instance.cpp (replace_display_object): log an error
	  if the character to be replaced is not found.
	* server/dlist.cpp (replace_character): don't restart the character
	  being added (fixes a problem with the ::restart function itself, in
	  that it also cleans up all properties, which now include the
	  __proto__ member).
	* testsuite/actionscript.all/toString_valueOf.as: more successes.
	* testsuite/actionscript.all/Object.as: more successes.

2007-09-01 Markus Gothe <nietzsche@lysator.liu.se> 

	* macros/boost.m4: push/pop CXXFLAGS/CPPFLAGS.
	* libbase/utility.h: Fixed a C++98/C99 incompt. error
	* libbase/utility.cpp: Use boost/cstdint.hpp instead of stdint.h.
	* libbase/zlib_adapter.cpp: Added 'using namespace gnash;'

2007-09-01 Sandro Santilli <strk@keybit.net>

	* server/asobj/Object.cpp (attachObjectInterface): remove
	  useless call to set_member_flags (init_member does it).
	* server/as_object.{cpp,h}: removed dead code (clear)

2007-09-01 Sandro Santilli <strk@keybit.net>

	* server/swf_function.cpp (ctor): make sure user-defined
	  function's initial prototype inherits from Object.
	* server/asobj/Object.cpp (getObjectInterface): really
	  end the inheritance chain (ie: don't override __proto__).
	* testsuite/actionscript.all/Inheritance.as: a couple tests
	  added.
	* testsuite/actionscript.all/Object.as: more successes, and 
	  an additional (still failing due to non-proper __proto__ member)
	  test.
	* testsuite/actionscript.all/toString_valueOf.as: one more success.

2007-09-01 Ivor Blockley <meteoryte@yahoo.com.au>

	* server/array.cpp: make to_number calls environment-aware.
	* testsuite/actionscript.all/array.as: success in invalid array.sort()
	  calls

2007-09-01 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: when unloaded character's unload() method
	  returns true (character or any of its childs has onUnload methods to
	  be run) don't really remove it from the list, but just shift it
	  down to the "removed" zone. Advance and display only non-removed
	  characters (depth-zone based for now, possibly too weak).
	  Add lots of paranoid invariant testing (not enough, missing the
	  one for no unloaded characters out of "removed" depth zone).
	* server/character.{cpp,h}: more info about removedDepthOffset,
	  assertion preveing double unload of a character (this can be 
	  probably easily broken by a focused testcase using removeMovieClip
	  on a removed but still-reachable character).
	* server/movie_root.{cpp,h}: added cleanupDisplayList() method, and
	  call it at the end of actions execution to properly cleanup removed
	  but still-reachable characters.
	* server/sprite_instance.{cpp,h}: implement a cleanupDisplayList, to
	  be called by movie_root, make sure to not include unloaded
	  characters when visiting the DisplayList for bounds extractions and
	  similar.
	* testsuite/actionscript.all/MovieClip.as: soft-references successes
	* testsuite/misc-ming.all/: loop_test7.c, loop_test8.c:
	  keep-alive-for-onUnload successes
	* testsuite/misc-ming.all/unload_movieclip_test1.c: successes
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc: successes
	* testsuite/swfdec/PASSING: remove-depths-*.swf successes

2007-08-31 Sandro Santilli <strk@keybit.net>

	* server/asobj/gen-asclass.sh: add the getObjectInterface call.
	  (btw, gen-asclass.pl is being left behind).

2007-08-31 Sandro Santilli <strk@keybit.net>

	* server/as_object.{cpp,h}: changed get_prototype to always return
	  the actual prototype (rather then returning the Object prototype
	  if unset).
	* server/: array.cpp, as_function.cpp, edit_text_character.cpp,
	  sprite_instance.cpp, video_stream_instance.cpp:
	  Initialize AS class interfaces (prototype) as being subclasses of
	  the Object class.
	* server/asobj/: Boolean.cpp, Camera.cpp, Color.cpp,
	  ContextMenu.cpp, CustomActions.cpp, Date.cpp, Error.cpp, Key.cpp,
	  LoadVars.cpp, Microphone.cpp, Mouse.cpp, MovieClipLoader.cpp,
	  NetConnection.cpp, NetStream.cpp, Number.cpp, Object.cpp,
	  Selection.cpp, SharedObject.cpp, Sound.cpp, Stage.cpp, System.cpp,
	  TextSnapshot.cpp, string.cpp, xmlnode.cpp, xmlsocket.cpp
	  Initialize AS class interfaces (prototype) as being subclasses of
	  the Object class.
	* testsuite/actionscript.all/Global.as: more successes.
	* testsuite/actionscript.all/Function.as: one more test for
	  Function.prototype.__proto__
	* testsuite/actionscript.all/MovieClip.as: more tests for
	  MovieClip.prototype.__proto__
	* testsuite/actionscript.all/TextField.as: more tests for
	  TextField.prototype.__proto__
	* testsuite/actionscript.all/Video.as: more tests for
	  Video.prototype.__proto__
	* testsuite/actionscript.all/array.as: more tests for
	  Array.prototype.__proto__
	* testsuite/swfdec/PASSING: successes from latest swfdec
	  testsuite.

2007-08-31 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Object.as: add test for
	  Object.prototype.__proto__ expected to be undefined (bad bug
	  in Gnash!).
	* server/array.cpp (array_length): handle attempts to set a negative
	  length as if length=0 was set, and log an AS error.
	  Still not correct, but saves a memory fill with swfdec testsuite.
	* testsuite/actionscript.all/array.as: add test for setting a negative
	  length.

2007-08-31 Sandro Santilli <strk@keybit.net>

	* server/character.cpp (unload): assert the character wasn't already
	  unloaded.
	* macros/boost.m4: don't trash user-defined CXXFLAGS, and don't
	  provide one if not user-specified initially.
	* testsuite/misc-swfc.all/check.sc: ops, last totals() define
	  was buggy, this one is good.

2007-08-31 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp: removed more dead code.
	* server/dlist.cpp (swapDeptsh): don't swap to depths in the
	  deleted characters zone.
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc:
	  less failures, few more tests.
	* testsuite/misc-swfc.all/Dejagnu.sc: include file:line info
	  in xpass too...
	* testsuite/misc-swfc.all/check.sc: define totals().

2007-08-31 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: few more tests.
	
2007-08-31 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/movieclip_destruction_test2.sc: testcase about
	  movieclip destruction and soft references, more failures.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	  
2007-08-31 Zou Lunkai <zoulunkai@gmail.com>
	
	* libbase/image.cpp: don't ommit the default parameter, should fix 
	  the building, please check.
	
2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/dlist.{cpp,h}: drop unused methods and optional args.

2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.{cpp,h}: cleanups: 
	  drop resetDisplayList, _frame0 and replace_if_depth_is_occupied
	  parameter of add_display_object.
	* server/swf/PlaceObject2Tag.cpp: update call to add_display_object

2007-08-30 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/Makefile.am: don't try to build
	  DefineEditTextVariableNameTest2-Runner from an non-existent .c
	  file (fixes 'make dist').
	* server/: character.{cpp,h}, edit_text_character.{cpp,h},
	  sprite_instance.{cpp,h}: change signature of character::unload()
	  to return a boolean value stating wheter any onUnload event was
	  queued due to removal.

2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/character.h: add const for removed clips depth offset.
	* testsuite/actionscript.all/MovieClip.as: test for depth shift when
	  onUnload method is defined and a clip is removed.
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: expect
	  gnash failures.
	* testsuite/actionscript.all/: Makefile.am, AsBroadcaster.as:
	  new test for AsBroadcaster.

2007-08-30 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/movieclip_destruction_test1.sc: testcase about
	  movieclip destruction, also action execution order related.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	  
2007-08-30 Sandro Santilli <strk@keybit.net>

	* server/array.h: document the push method, use some typedefs for
	  semplicity (iterators).
	* server/vm/fn_call.h: add string-returning dump_args().

2007-08-30 Markus Gothe <nietzsche@lysator.liu.se>

	* configure.ac, libbase/utility.h, server/asobj/Date.cpp,
	backend/render_handler_agg.cpp: Unified trunc() and added
	checking.
	* configure.ac, macros/libexe.m4, macros/kde.m4: 
	keep bourne-sh, /bin/sh, happy.
	* macros/boost.m4: Fixed issue with lib-checking.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/: Key.as, Mouse.as, Selection.as,
	  Stage.as, TextField.as: check elements supposedly created
	  by implicit call to ASBroadcaster.initialize().
	  See bug #20832.
	  NOTE: for TextField.as also fixed a wrong expected result for
	  targets SWF8+

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/MovieTester.cpp (initTestingRenderers): add ARGB32 and
	  ABGR32 renderers.

2007-08-29 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* configure.ac: added pixel formats ARGB32 and ABGR32; allow "all" value for
	  --with-pixelformat
	* backend/render_handler_agg.cpp: implement the two new pixel formats and
	  check for the host endianess; some initial changes in AGG cache class which
          currently is not used, however
	* backend/render_handler_agg.h, gui/fb.cpp: updated comments
	
2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/as_environment.cpp (get_variable): more verbosity in
	  debugging messages.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/as_value.cpp (to_sprite): use original target, not current
	  one, for dereferencing danglign MOVIECLIP refs; add TODO item about
	  the onUnload problem.
	* server/sprite_instance.{h,cpp}: add a getOrigTarget() to return original
	  target of a sprite (the target it got when first constructed, immune
	  from _name changes).
	* testsuite/misc-swfc.all/soft_reference_test1.sc: xcheck => check

2007-08-29 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-swfc.all/soft_reference_test1.sc: add some
	  comments as to why Gnash fails.

2007-08-29 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-swfc.all/soft_reference_test1.sc: new focused
	  testcase about soft reference, still got an xcheck.
	* testsuite/misc-swfc.all/Makefile.am: enable testcase.
	  
2007-08-29 Chad Musick <chadmusick@msbx.net>

	* server/asobj/BlurFilter_as.cpp,.h
	* server/asobj/ColorMatrixFilter_as.cpp,.h
	* server/asobj/ConvolutionFilter_as.cpp,.h
	* server/asobj/DropShadowFilter_as.cpp,.h
	* server/asobj/GlowFilter_as.cpp,.h
	* server/asobj/GradientBevelFilter_as.cpp,.h
	* server/asobj/GradientGlowFilter_as.cpp,.h
	* server/asobj/BevelFilter_as.cpp,.h
	* server/asobj/BitmapFilter_as.cpp,.h
	  Change to use multiple inheritance for adaptation
	* server/BevelFilter.h,.cpp
	* server/BlurFilter.h,.cpp
	* server/ColorMatrixFilter.h,.cpp
	* server/ConvolutionFilter.h,.cpp
	* server/DropShadowFilter.h,.cpp
	* server/GlowFilter.h,.cpp
	* server/GradientBevelFilter.h,.cpp
	* server/GradientGlowFilter.h,.cpp
	  Changing to use multiple inheritance for adaptation
	* server/asobj/prophelper.h Update for using multiple inheritance
	* server/parser/filter_factory.cpp
	  Change to use correct type of operator for array pushes.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* libbase/utility.h: fix the frnd() function to behave as
	  intended by original author. Fixed bug #20920.

2007-08-29 Markus Gothe <nietzsche@lysator.liu.se>

	* libbase/component_hackery.cpp: Removed crufty file.
	* backend/render_handler_agg.cpp: Made trunc() uniform with the
	  one in Date.cpp.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* Makefile.am: distribute old ChangeLog files.

2007-08-29 Sandro Santilli <strk@keybit.net>

	* server/text.h: fix signature of setFont(font*):
	  return void.

2007-08-28 Sandro Santilli <strk@keybit.net>

	* libbase/: image.{cpp,h}, jpeg.{cpp,h}: extend interface
	  for jpeg creators taking tu_file to specify
	  ownership of the input stream.
	* server/swf/tag_loaders.cpp: substitute calls to
	  stream::get_underlying_stream with use of a quick&dirty
	  tu_file adpater using stream underneath.
	* server/stream.h: remove get_underlying_stream method.

2007-08-28 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* server/stream.h: documented some functions
	
2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp: remove all bug jpeg-related
	  calls to stream::get_underlying_stream.

2007-08-28 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* server/sprite_instance.cpp: comment unused parameter 	

2007-08-28 Sandro Santilli <strk@keybit.net>

	* libbase/jpeg.{cpp,h}: cleanups, aimed at eventually implement
	  different inputs then tu_file (stream, buffer).

2007-08-28 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/actionscript.all/case.as: more tests.
	* server/swf_function.h: set function args to lower case when needed.
	  fix bug #20833.
	  
2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/: Makefile.am, BitsReader.{cpp,h}: new memory bits reader.
	* testsuite/server/: Makefile.am, BitsReaderTest.cpp: unit testing
	  for the new bits reader.

2007-08-28 Deanna Phillips <deanna>

	* libbase/utility.h: define exp2 and log2 if not available
	  based on HAVE_LOG2 and HAVE_EXP2
	* configure.ac: detect availability of log2 and exp2

2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/stream.{cpp,h}: inlined align(), cleanups in read_uint().

2007-08-28 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): use ints for twips
	  values, convert to float only when needed (construction of the
	  edges and paths). [last patch was bogus]

2007-08-28 Chad Musick <chadmusick@msbx.net>

	* server/asobj/BlurFilter_as.cpp,.h
	* server/asobj/ColorMatrixFilter_as.cpp,.h
	* server/asobj/ConvolutionFilter_as.cpp,.h
	* server/asobj/DropShadowFilter_as.cpp,.h
	* server/asobj/GlowFilter_as.cpp,.h
	* server/asobj/GradientBevelFilter_as.cpp,.h
	* server/asobj/GradientGlowFilter_as.cpp,.h
	* server/asobj/BevelFilter_as.cpp,.h
	* server/asobj/BitmapFilter_as.cpp,.h
	  Make ActionScript compatible filters
	* server/BevelFilter.h,.cpp
	* server/BlurFilter.h,.cpp
	* server/ColorMatrixFilter.h,.cpp
	* server/ConvolutionFilter.h,.cpp
	* server/DropShadowFilter.h,.cpp
	* server/GlowFilter.h,.cpp
	* server/GradientBevelFilter.h,.cpp
	* server/GradientGlowFilter.h,.cpp
	  Changes necessary for adapter compatibility
	* server/asobj/prophelper.h
	  File to make writing AS classes easier using an adapter
	* server/asobj/Makefile.am
	  Add new files
	 
2007-08-27 Sandro Santilli <strk@keybit.net>

	* libbase/utility.h: don't define exp2(), it's going to clash
	  with existing symbol on most systems (except some BSDen)...
	  Please provide a better patch for BSD.

2007-08-27 Deanna Phillips <deanna>

	* testsuite/misc-ming.all/NetStream-SquareTestRunner.cpp: include
	  <unistd.h>

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): make effective
	  use of the SHAPE_LOG compile-time macro, by removing any overhead
	  associated with it, when set to something != 0.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.cpp (read): use ints for twips
	  values, convert to float only when needed (construction of the
	  edges and paths).

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.cpp (read_sint): remove useless assertion.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.cpp (read_uint): optimize multi-byte reads:
	  less read_byte(), more read_bytes().
	* testsuite/server/StreamTest.cpp: more read_uint() tests.

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/cxform.cpp, server/font.cpp, server/matrix.cpp,
	  server/stream.h, server/parser/button_character_def.cpp,
	  server/parser/edit_text_character_def.cpp,
	  server/parser/filter_factory.cpp,
	  server/parser/sound_definition.cpp,
	  server/parser/video_stream_def.cpp,
	  server/swf/PlaceObject2Tag.cpp, server/swf/tag_loaders.cpp,
	  utilities/parser.cpp: read_uint(1) => read_bit();
	* server/stream.cpp (read_uint): htf_sweet.swf aborts if we
	  assert bit_count <= 24, so change this base to <= 32 (will
	  inspect later).

2007-08-27 Sandro Santilli <strk@keybit.net>

	* server/stream.{cpp,h}: add read_bit(), optimize read_uint()
	  a little-bit (there are likely more optimization options).
	* server/parser/shape_character_def.cpp (read): use read_bit()
	  instead of read_uint(1).
	* testsuite/server/StreamTest.cpp: more tests for read_bit().

2007-08-27 Markus Gothe <nietzsche@lysator.liu.se>

	* libbase/utility.h: defined exp2() as it's missing on some BSDen.
	* libbase/math.h OS X has got xF().
	* configure.ac check for exp2() and log2().

2007-08-27 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c,
	  testsuite/misc-ming.all/Makefile.am:  more tests, finished
	  deduction, testcase now enabled.	  
	
2007-08-27 Sandro Santilli <strk@keybit.net>

	* testsuite/server/: Makefile.am, StreamTest.cpp:
	  gnash::stream testing (for now it's just bit streaming, as a tool
	  for optimization of the read_uint)

2007-08-27 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/actionscript.all/ops.as: more tests about NaN.
	* testsuite/actionscript.all/toString_valueOf.as: more tests for deduction.
	  
2007-08-27 Chad Musick <chadmusick@msbx.net>

	* server/BevelFilter.cpp,.h: Fuller conversion to AS compatible
	* server/BitmapFilter.h: Fuller conversion to AS compatible
	* server/stream.cpp: Remove dead code from read_fixed
	* server/asobj/Makefile.am Add new files
	* server/parser/filter_factory.cpp: Removed typo bug pointed out by
	  Zou.
	* server/vm/ASHandlers.cpp,.h: Remove use of variable sized array.
	* server/asobj/BevelFilter_as.cpp,.h: Adapter pattern object for using
	  BevelFilter inside of ActionScript (not yet put in global)
	* server/asobj/BitmapFilter_as.cpp,.h: Adapater pattern object for
	  using BitmapFilter inside of ActionScript (not yet put in global)

2007-08-26 Deanna Phillips <deanna>

	* doc/gnash.1: Updated.

2007-08-26 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp, gui/gtksup.h: Add treeview to Movie Properties
          ready for InfoTree display.

2007-08-26 Chad Musick <chadmusick@msbx.net>

	* server/Makefile.am: Add new files, remove obsolete ones.
	* server/BevelFilter.h,.cpp: A Bevel display object filter
	* server/BitmapFilter.h: Base class for other filters
	* server/BlurFilter.h,.cpp: A Blur display object filter
	* server/ColorMatrixFilter.h,.cpp: A color matrix display filter
	* server/ConvolutionFilter.h,.cpp: A convolution display filter
	* server/DropShadowFilter.h,.cpp: A drop shadow display filter
	* server/GlowFilter.h,.cpp: A glow display filter
	* server/GradientBevelFilter.h,.cpp: A gradient bevel filter
	* server/GradientGlowFilter.h,.cpp: A gradient glow filter
	* server/filters.h,.cpp: Removed (split to other files)
	* server/stream.h,stream.cpp: Added read_float, read_short_ufixed,
	  fixed calculation of value in read_short_fixed, added read_ufixed
	* server/parser/filter_factory.h,.cpp: parsing code of filters
	* server/swf/PlaceObject2Tag.cpp: Changed to use new filters

2007-08-26 Sandro Santilli <strk@keybit.net>

	* configure.ac: keep mit-shm enabled by default (use --disable-mit-shm
	  to disable).
	* doc/C/usermanual/installation/feature_configuration.xml: update
	  documentation about --disable-mit-shm.

2007-08-26 Lauri Myllari    <lauri.myllari@gmail.com>

	* gui/gtk_glue_agg.cpp: fix expose events with mit-shm, by
	  disabling double buffering for _drawing_are

2007-08-26 Sandro Santilli <strk@keybit.net>

	* server/asobj/string.cpp (string_split): correctly handle some more
	  corner cases.
	* testsuite/swfdec/PASSING: string-split-empty-*.swf tests succeed.
	* testsuite/actionscript.all/String.as: some more testing for
	  String.split

2007-08-25 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/toString_valueOf.as: note that any
	  function is equal to any other in SWF5...
	* testsuite/actionscript.all/ops.as: more tests about isNaN(x) when
	  x != NaN (odd)

2007-08-25 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (ActionNewLessThan): convert operands to
	  primitive value before proceeding.
	* testsuite/actionscript.all/ops.as: xcheck => check

2007-08-25 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (ActionNewAdd): convert operands to
	  primitive value before proceeding.
	* server/as_value.h: make to_primitive() public
	* server/as_value.cpp (to_number): if valueOf returned a string value
	  call to_number() again on it; (equals): if one operand is a string
	  and the other is a number, don't compare unless the string converts
	  to a non-infinite number.
	* testsuite/actionscript.all/Number.as: add test for 'string'
	  convertion to number returning NaN
	* testsuite/actionscript.all/ops.as: xcheck => check
	* testsuite/actionscript.all/toString_valueOf.as xcheck => check

2007-08-24 Sandro Santilli <strk@keybit.net>

	* server/dlist.{h,cpp} (replace_character): call unload() on replaced
	  character and document the fact.
	* server/as_value.cpp: undefine the MOVIECLIP_AS_SOFTREF macro, tweak
	  equalSameType() and to_sprite() to use MOVIECLIP targets only when 
	  they are unloaded.
	* testsuite/misc-ming.all/displaylist_depths_test2.c: xcheck => check
	  (no more failures from this test)
	* testsuite/actionscript.all/MovieClip.as: xcheck => check
	  (soft-references related)
	* testsuite/actionscript.all/case.as: xcheck => check (soft refs).

2007-08-24 Miriam Ruiz <little_miry@yahoo.es>

        * plugin/klash/klash_part.cpp: Patch for GNASHEXE.

2007-08-24 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: more test for 
	  soft references.
	* server/as_value.cpp: fix build when MOVIECLIP_AS_SOFTREF is
	  undefined.
	* server/swf/PlaceObject2Tag.cpp (loader): remove unused variable.
	* server/as_environment.{cpp,h}: use a static const for expressing
	  number of global registers.

2007-08-24 Sandro Santilli <strk@keybit.net>

	* libbase/: tree.hpp => tree.hh: don't change original name of
	  external source code.
	* libbase/Makefile.am: distribute tree.hh

2007-08-24 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: test that '_root' and
	  '_level0' can be accessed as members of a movieclip, while 'this'
	  cannot.
	* testsuite/actionscript.all/delete.as: add TODO request for testing
	  variable access by path
	* testsuite/actionscript.all/getvariable.as: add test for accessing
	  slash-based paths starting with 'this'
	* server/sprite_instance.cpp (get_member): don't consider 'this' as
	  a member.
	* server/as_environment.cpp (find_object_{slash,dot}syntax): handle
	  paths starting with 'this'.

2007-08-24 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/DefineEditTextVariableNameTest2.c: add a new 
	  testcase for EditText variables, not enabled yet, need review.
	  
2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/swf/PlaceObject2Tag.cpp,h: Add support for the
	  PlaceObject3 tag.  This immediately improves some SWF 8
	  support.  The tag still needs to do something with the
	  filters which it loads.
	* server/impl.cpp: Add a loader for PlaceObject3, remove
	  loaders for DefineShape4, which isn't yet functional.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/swf.h: Add FOCAL_GRADIENT to fill styles.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/stream.cpp,h: Add read_short_fixed() function for
	  what short fixed values (16 bits) are needed rather than
	  long fixed values (32 bits) from the SWF stream.

2007-08-24 Chad Musick <chadmusick@msbx.net>

	* server/filters.cpp,h: Effect filters for PlaceObject3 and
	  for buttons. No current effect, but it parses correctly from SWF.
	* Makefile.am: Add the filters files.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* server/as_environment.h: document case-sensitiveness of
	  find_target.
	* server/character.{h,cpp} (get_relative_target_common):
	  document and fix case-sensitiveness.
	* server/vm/ASHandlers.cpp (ActionSetProperty): log a actionscript
	  error if trying to set the property of an unknown target.
	* server/sprite_instance.cpp (get_member, get_relative_target): be
	  case sensitive/insensitive based on SWF target version.
	* testsuite/actionscript.all/case.as: more tests; some unexpected
	  successes, some unexpected failures.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_agg.cpp: remove need_shape_bounds()
	
2007-08-23 Sandro Santilli <strk@keybit.net>

	* server/parser/shape_character_def.{cpp,h}: document
	  the read function; compute bound when not available
	  in the SWF (glyphs in DEFINEFONT*).

2007-08-23 Sandro Santilli <strk@keybit.net>

	* libamf/amf.{cpp,h}: fixed a bunch of memory errors, added
	  some dox, first pass to interface clean ups.
	* testsuite/libamf.all/Makefile.am: add testsuite/ to the 
	  include dir, to allow for using our check_equals functions.
	* testsuite/libamf.all/: test_object.cpp, test_string.cpp,
	  test_variable.cpp: fixed new[]/delete mismatches.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_agg.cpp: Initial support for glyphs
	  with known bounds

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/case.as: reduce alpha of clips used
	  for visual checking, to avoid hiding the visual traces; don't
	  print totals twice.

2007-08-23 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler.h, backend/render_handler_agg.cpp, 
	  backend/render_handler_tri.{cpp,h}, server/edit_text_character.cpp,
	  server/render.cpp, server/render.h: add parameter "masked" to 
    draw_poly(), adjust calls to this function and implement (un)masked
    polygons in AGG renderer (see bug #20655).
	* backend/render_handler_agg.cpp: draw_line_strip() now applies masks 

2007-08-23 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: expandPath called on non-POSIX systems
	  for other path operations. Whitelist and blacklist now space
          not colon separated. NOTE: old lists still work, but should
          be deprecated. Made private: extractSetting, extractNumber.
          Minor code cleanups.
	* docs/C/usermanual/usage/gnashrc.xml: add info about black-
          and whitelists.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* configure.ac: move BOOST macro detector invocation after
	  PTHREAD one, as the former requires the latter.

2007-08-23 Deanna Phillips <deanna>

	* macros/pthreads.m4: set pthread flags to -pthread for openbsd.
	* libbase/rc.cpp: include unistd.h for getuid()

2007-08-23 Markus Gothe <nietzsche@lysator.liu.se>

	* libamf/amf.cpp: memcpy -> strncpy, since it does a memory 
	access violation on Darwin (and porbably other OSes).

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/Makefile.am: specify input language 
	  in MTASC_CPP, so we can use a filename again (rather then
	  get meaningless <stdin> printed for __FILE__).
	* gui/gui.{cpp,h}: Use kasper's tree class for getMovieInfo
	  (InfoTable is now an InfoTree)
	* gui/gtk.cpp (menuitem_movieinfo_callback): fix to use
	  an InfoTree - just a leaf-iteration.

2007-08-23 Sandro Santilli <strk@keybit.net>

	* libbase/tree.hh: include generic tree class by
	  Kasper Peeters <kasper.peeters@aei.mpg.de>

2007-08-23 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/exception.as: more tests for
	  try/catch/finally.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* server/swf.h: add version and reference url to
	  ACTION_TRY and ACTION_THROW
	* server/parser/action_buffer.h: add read_uint8() method.
	* server/vm/ASHandlers.cpp: stub ACTION_TRY handler
	  (parsed the tag, doesn't do anything with the info yet).
	* testsuite/misc-mtasc.all/exception.as: more tests for
	  try/catch/finally.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/DrawingApiTestRunner.cpp:
	  Try another work-around to gcc-4.1.2 bug, commented
	  this time.
	* testsuite/actionscript.all/MovieClip.as:
	  Modify syntax used to test for functions availability
	  to cope with a bug in Ming < 00040005.
	  Should fix bug #20867.

2007-08-22 Chad Musick <chadmusick@msbx.net>

	* server/font.h, server/font.cpp: Define
	  m_display_name and m_copyright_name for the
	  DefineFontName tag (88) of SWF 9, reader
	  for the tag.
	* server/swf.h Add DEFINEFONTNAME tag to list.
	* server/impl.cpp Set loader for DefineFontName
	* server/swf/tag_loaders.h,.cpp Add loader for
	  DefineFontName tag.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* configure.ac: bail out if kde gui or kparts plugin are
	  requested but kde/qt deps are not met. Should fix bug
	  #20848.

2007-08-22 Sandro Santilli <strk@keybit.net>

	* configure.ac: bail out if boost_thread is not set to yes.
	* macros/boost.m4: check for boost/thread.hpp. Should fix
	  bug #20847.

2007-08-22 Zou Lunkai <zoulunkai@gmail.com>
	
	* testsuite/misc-ming.all/masks_test2.c, 
	  testsuite/misc-ming.all/masks_test2runner.cpp, 
	  testsuite/misc-ming.all/Makefile.am: new testcase for nested masks.
	  
2007-08-22 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/dlist.cpp, server/sprite_instance.cpp: handle hiden characters
	  as masks, passed UdoG's test files.
	
2007-08-22 Chad Musick <chadmusick@msbx.net>

	* server/impl.cpp: Add tag loaders (default loaders)
	  for SWF9 opcodes, plus some older opcodes which were
	  not present.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp: rename View->MovieInfo to View->Properties,
	  make layout nicer and labels selectable.

2007-08-21 Sandro Santilli <strk@keybit.net>

	* libbase/embedVideoDecoderGst.cpp (createDecoder): don't
	  abort if outputFormat is NONE (renderer missing).
	  Fixes bug bug #20852.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: look for getpwnam
	* libbase/rc.cpp (expandPath): don't try to use getpwnam
	  if not provided by OS.

2007-08-21 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* gui/gui.cpp: Introduce FORCE_REDRAW macro

2007-08-21 Sandro Santilli <strk@keybit.net>

	* server/text.h: documentation bits for text_glyph_record
	* server/edit_text_character.{cpp,h}: Add support for dynamic 
	  wordWrap setting and initial autoSize handling.
	* server/parser/edit_text_character_def.h: style & cleanups.
	* testsuite/actionscript.all/TextField.as: more successes.

2007-08-21 Chad Musick <chadmusick@msbx.net>

        * testsuite/misc-ming.all/DrawingApiTestRunner.cpp
	  Add a . output to stderr to fix a problem with make check in some
	  versions of gcc.

2007-08-21 Udo Giacomozzi <udo.gnu@nova-sys.net>

	* backend/render_handler_tri.cpp: fix world_to_pixel() so that OpenGL
	  works again 	

2007-08-21 Chad Musick <chadmusick@msbx.net>

	* server/swf.h: Add new tag values for SWF 9 support.

2007-08-21 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/dlist.cpp: update display(), for masks, please check.
	
2007-08-21 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.cpp (add_invalidated_bounds): use
	  instance bounds, not definition ones; reformat text when _width
	  or _height changes.
	* testsuite/misc-swfc.all/Makefile.am: use an absolute
	  path for MEDIADIR to make swfc happy; don't do anything
	  on make check if SWFC is not enabled.

2007-08-21 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: Fixes a typo, matches the whole username if
	  there's no slash (following POSIX) and makes expandPath
	  (not expandTilde) private.

2007-08-20 Chad Musick <chadmusick@msbx.net>

	* server/vm/ASHandlers.h: Add helper function for multi-byte
	  string handling
	* server/vm/ASHandlers.cpp: Implement helper function for multi-
	  byte strings and implement multi-byte versions of strlen,
	  substr, and chr

2007-08-20 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: look for the pwd.h header
	* doc/C/usermanual/usage/gnashrc.xml: add info about tilde expansion.
	* libbase/rc.{cpp,h}: add support for tilde expansion in debugLog
	  value.

2007-08-20 Sandro Santilli <strk@keybit.net>

	* libbase/log.{cpp,h}: print an error on stderr of the debug log file
	  can not be opened for writing. Minor cleanups (including dox).

2007-08-20 Sandro Santilli <strk@keybit.net>

	* server/vm/ExecutableCode.h (FunctionCode::markReachableResources):
	  Don't mark the function twice, and most importantly don't forget
	  to mark the target character !!

2007-08-20 Asger Ottar Alstrup <asger@area9.dk>

	* testsuite/misc-mtasc.all/: Makefile.am, exception.as:
	  Test for try/catch (gnash fails).

2007-08-20 Sandro Santilli <strk@keybit.net>

	* testsuite/libbase/: TCXXRc.cpp, gnashrc.in:
	  Test 'set debuglog' directive.

2007-08-20 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/log.cpp: fix 'set debuglog' directive.

2007-08-19 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/ops.as: test that NaN and undefined are
	  not less one other.
	* server/vm/ASHandlers.cpp (ActionGetVariables): simplify debugging
	  output.

2007-08-19 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (CommonGetUrl): check for _level#
	  loading even when loadTargetFlag is clear.
	* server/FreetypeGlyphsProvider.cpp: remove compiler warnings.
	* doc/C/usermanual/usage/gnashrc.xml: document
	  flashVersionString variable.

2007-08-19 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{cpp,h}: Avoid string copies in inspectors;
	  add getFlashVersionString (support for
	  "set flashVersionString Bla bla bla" in gnashrc).
	* server/vm/VM.cpp (getPlayerVersion): Query RcInit for version
	  string
	* testsuite/libbase/: TCXXRc.cpp, gnashrc.in:
	  Add test for 

2007-08-19 Markus Gothe <nietzsche@lysator.liu.se>

	* testsuite/libbase/Makefile.am, 
	testsuite/libamf.all/Makefile.am: Added DEJAGNU_CFLAGS.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp (define_bits_lossless_2_loader):
	  ensure bytes, not bits!
	* server/vm/ASHandlers.cpp (CommonGetUrl): always check
	  for URL (security). Give precedence to loadVariable calls
	  even if target is _level#. Fixes load of uptoten.com.
	* plugin/plugin.cpp: Use the environmental variable
	  GNASH_PLUGIN_DESCRIPTION for the plugin description
	  (when set).

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/video_stream_instance.cpp: mark characters created
	  using new Video as dynamic.
	* server/character.h (isDynamic): remove bogus assertion
	  failing for dynamically-loaded movies.

2007-08-18 Petr Pisar <petr.pisar@atlas.cz>

	* po/cs.po: updated to version of 20070804

2007-08-18 Sandro Santilli <strk@keybit.net>

	* libbase/log.cpp: change the log_unimpl label to UNIMPLEMENTED.
	* server/text.cpp (resolve_font): fix missing return.
	* server/parser/text_character_def.cpp: fix compiler warnings.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* gui/gui.{cpp,h}: add a getMovieInfo() function as a quick hack
	  to print movie information.
	* gui/: gtk.cpp, gtksup.h: add a View->movieInfo menu item.

2007-08-18 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* configure.ac: define flash player version macros
	  for compatibility detectors.
	* plugin/plugin.cpp: build the flash player version
	  using provided macros.
	* server/vm/VM.cpp: buil flash player version using
	  provided macros.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/as_object.h (ensureType): fix printing of *source* type
	  name.
	* macros/firefox.m4: don't substitute GNASHEXE at all, it's not
	  used anymore.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/text.{cpp,h}: make text_style class store only the font
	  pointer, w/out the font_id, provide setFont and getFont
	  methods, the former always performing a lookup.
	* server/parser/text_character_def.cpp (read): use
	  text_style::setFont() to set the font this properly updates
	  the actual font pointer in the text_format, fixing bug #20812.
	* server/edit_text_character.cpp: use text_style::setFont() to
	  set font by pointer.
	* server/parser/: movie_definition.h, movie_def_impl.{h,cpp},
	  sprite_definition.h: const-correct get_font() method.
	* server/parser/movie_def_impl.{h,cpp}: const-corrected
	  in_import_table(), made private and re-activated assertion
	  checking temporarly removed during to GC layout changes.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* server/parser/text_character_def.cpp: use symbolic names for
	  tag types, more verbose parsing.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* libbase/jpeg.cpp (jpeg_error_exit): only print SWF errors if
	  configured to do so; (input_impl): throw an exception if
	  jpeg_read_header detected errors.
	* server/swf/tag_loaders.cpp (jpeg_tables_loader,
	  define_bits_jpeg_loader): early exception checking to avoid
	  parser interruption on malformed embedded jpeg.

2007-08-18 Felix Eckhofer <felix@tribut.de>

	* plugin/klash/klash_part.cpp: use the -u switch when invoking
	  the standalone gnash. Fixes youtube playback for konqueror.
	  Still missing -U and -P switches.

2007-08-18 Sandro Santilli <strk@keybit.net>

	* macros/firefox.m4: drop --with-gnashexe and GNASHEXE macro
	* plugin/Makefile.am: define GNASHBINDIR based on ${bindir}
	* plugin/klash/Makefile.am: define GNASHBINDIR based on ${bindir}

2007-08-17 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (setVariables):
	  Convert variable names to lowercase when needed.
	* testsuite/misc-ming.all/: Makefile.am, FlashVarsTest.{as,html}:
	  Test that parameter names are converted to lowercase when target
	  SWF is < 7.

2007-08-17 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/vm/VM.cpp (getPlayerVersion): define FLASH_VERSION as
	  a compatibility version for use by $version or
	  System.capabilities.version based version detection kits.
	  (TODO items added for a cleaner handling of this).
	* plugin/plugin.cpp: define FLASH_VERSION as a compatibility version
	  for use by javascript-based flash version detection kits.

2007-08-17 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/as_function.cpp: initialize '__proto__' instead of 'constructor'.
	* testsuite/actionscript.all/Inheritance.as: more passes.

2007-08-17  Alfred M. Szmidt  <ams@gnu.org>

	* configure.ac: State that a <= 2.4 version of AGG is an error.

2007-08-16 Takashi Iwai <tiwai@suse.de>

	* libbase/network.cpp (Network::createServer): fix a bug making
	  the test for DEFAULTPROTO == "udp" always fail.

2007-08-16 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: have a Range2d member to express
	  current TextField boundary (_width,_height). Implement _width and
	  _height setters. Add compile-time macro for debugging (still doesn't
	  work as expected).
	* server/gnash.h: add more descriptions, a set() method and TODO items
	  for the 'point' class.
	* testsuite/actionscript.all/TextField.as: more passes.

2007-08-16 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/misc-ming.all/registerClassTest2.c, Makefile.am: new testcase
	  for Object.registerClass.
	* testsuite/misc-ming.all/registerClassTest.c, 
	  testsuite/actionscript.all/Object.as, toString_valueOf.as: testcases review,
	  minor comments or changes.
	* testsuite/actionscript.all/Inheritance.as: more tests. testing for inheritance
	  never stops:)
	
2007-08-15 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/TextField.as: a few more tests for
	  interaction between _width, autoSize and wordWrap (more needed).

2007-08-15 Zou Lunkai <zoulunkai@gmail.com>

	* testsuite/actionscript.all/Object.as: more tests and new failures.
	  
2007-08-14 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* backend/sound_handler_sdl.cpp: Also count sounds who stops
	  because the reached the end. Fixes random eventSoundTest1
	  failures.

2007-08-14 Ivor Blockley <meteoryte@yahoo.com.au>

	* server/array.cpp: replace VLAs with std containers.
	  
2007-08-13 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/TextField.as: add more tests for
	  background, backgroundColor and interaction between _width and
	  autoSize.

2007-08-13 Zou Lunkai <zoulunkai@gmail.com>

	* server/sprite_instance.{h,cpp}: deprecate clone_display_object(), use 
	  duplicateMovieClip() instead.
	* testsuite/actionscript.all/ops.as: more tests.
	* testsuite/samples/gotoFrameOnKeyEvent-TestRunner.cpp: finish the test runner.

2007-08-12 Sandro Santilli <strk@keybit.net>

	* server/edit_text_character.{cpp,h}: add autoSize getter/setter
	  (still not used)
	* testsuite/actionscript.all/TextField.as: add tests for autoSize
	  member.
	* testsuite/misc-ming.all/DefineEditTextTest.c: add TODO items.

2007-08-12 Sandro Santilli <strk@keybit.net>

	* server/as_value.h: add is_bool()
	* server/edit_text_character.h (getBounds): add TODO item
	  (I belive is a fix for bug #20760)

2007-08-10 Sandro Santilli <strk@keybit.net>

	* backend/sound_handler_sdl.cpp: fix build for MAD media handler.
	* server/shape.cpp: remove useless include of hash_wrapper.h
	* gui/Makefile.am: fix build of sdl/cairo
	* configure.ac: abort if a requested renderer/gui combination
	  isn't supported (checked for gtk/kde/sdl/fb/fltk)

2007-08-10 Sandro Santilli <strk@keybit.net>

	* gui/Makefile.am: typo preventing gtk/cairo combination from building
	* server/FreetypeGlyphsProvider.{cpp,h}: add a destructor getting
	  rid of the resources associated with a face.
	* configure.ac: FLTK/OGL isn't supported, while SDL/OGL is !
	* testsuite/media/: README, sound1.wav:
	  Moved sound1.wav data from swfc dir to media dir,
	  add some info about it and sound1.mp3.
	* testsuite/misc-swfc.all/sound.wav: moved to
	  media/sound1.wav
	* testsuite/misc-swfc.all/Makefile.am: define MEDIADIR
	* testsuite/misc-swfc.all/check.sc: define a MEDIA
	  macro
	* testsuite/misc-swfc.all/sound.sc: use the MEDIA macro
	  to find media stuff.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* Makefile.am, configure.ac, testsuite/Makefile.am,
	  testsuite/misc-swfc.all/Makefile.am:
	  Enable swfc testsuite if 'swfc' is found on the system.

2007-08-10 David Rorex  <drorex@gmail.com>

	* server/FreetypeGlyphsProvider.cpp: minor change to print the
	  freetype glyph format in human readable form. patch #6148.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.{cpp,h}: refactor the check for call stack
	  depth at end of execution to take depth at *start* of execution
	  into account.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/vm/ActionExec.cpp (cleanupAfterRun): don't assume the call
	  stack should be empty at the end of global code execution. Still
	  print an error as we need further investigation about it. Fixes
	  bug #20740.

2007-08-10 Paul Smedley <paul@smedley.info>

	* libbase/URL.cpp, libbase/container.h, libbase/network.cpp,
	  libbase/network.h, libbase/tu_config.h, libbase/tu_timer.cpp,
	  server/shm.cpp, server/shm.h, server/vm/ASHandlers.cpp,
	  utilities/dumpshm.cpp: Build support for OS/2.

2007-08-10 Sandro Santilli <strk@keybit.net>

	* server/parser/Timeline.h (getFrameDepths): lock the mutex, as
	  documented in method description.

2007-08-10 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* backend/sound_handler.h, backend/sound_handler_{sdl,gst}.{h,cpp},
	  server/swf/tag_loaders.cpp: Introduce the SoundInfo class which 
	  contains the properties of the sound (format, samplerate, etc.).
	  When parsing a sound-tag the SoundInfo-object is created and
	  passed to the soundhandler along with the audio data, and the
	  parser can later ask for the SoundInfo-object for a specific
	  sound, which is needed when parsing sound-streams.

2007-08-10 Alexander Sack <asac@jwsdot.com>

	* backend/Makefile.am, libamf/Makefile.am, libbase/Makefile.am,
	  libgeometry/Makefile.am, plugin/mozilla-sdk/Makefile.am,
	  server/Makefile.am: use $pkglibdir for unversioned libs.

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp (sound_stream_block_loader): don't
	  discard the first 4 bytes if not reading an MP3. Makes ADPCM
	  sound better for the feed.swf case (but ADPCM decoder needs
	  lot more work to be correct)

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/FreetypeGlyphsProvider.cpp (getGlyph): don't abort if
	  FT_Load_Char doesn't return an outline glyph, rather print
	  an UNIMPLEMENTED message and the type of glyph you got.
	* server/swf/tag_loaders.cpp (ADPCMDecoder::adpcm_expand):
	  Rather then throwing a ParseException, just print an error
	  as it's much likely the error is in Gnash parser, rather
	  then in a malformed SWF, and tests show we do a better
	  job like that then by stopping the parser.
	  Also, print an error if the bytesNeeded computation doesn't
	  match the actual number of bytes read.

2007-08-09 Sandro Santilli <strk@keybit.net>

	* server/swf/tag_loaders.cpp: move all ADPCM-related code in an
	  ADPCMDecoder class.
	* README_CVS: minimum version of automake is 1.9.6. 1.7 and 1.8 have
	  been tried w/out success. Might be a regression, but that is...
	* server/button_character_instance.cpp (construct): properly construct
	  all button child characters. Fixes bug #20729.
	* server/swf/tag_loaders.cpp (adpcm_expand): another try at fixing the
	  needed bytes count for compressed adpcm samples. Also, remove call
	  to ceil.

2007-08-09 Zou Lunkai <zoulunkai@gmail.com>
	
	* server/character.h: add a constant 'noRatioValue'.
	* server/dlist.cpp: In function move_display_object(), don't set ratio
	  to zero when no ratio value provided by the displaylist tags; In function
	  reset(), remove all none-referenceable characters.
	* server/parser/timeline.h: revert to 1.3, keep strk's design, use std::set
	  instead of std::map.
	* server/parser/movie_def_impl.h, movie_definition.h, sprite_definition.h:
	  update interface of getTimelineDepths().
	* server/parser/morph2_character_def.cpp: set ratio value to zero at rendering 
	  time when no one is provided. 
	* server/sprite_instance.h: add a member variable is_jumping_back.
	* server/sprite_instance.cpp: reimplement add_display_object(); cleanup 
	  goto_frame(); wipe out timeline design 1,2,3; deprecate resetDisplayList();
	  ready to deprcate 'replace_if_depth_is_occupied '.
	* server/swf/placeObject2Tag.cpp: set ratio to character::NoRatioValue instead of
	  zero when no ratio provided.
	* testsuite/misc-ming.all/place_and_remove_object_insane_test.c: xchecks to checks.
	  should fix bug 20504. All in all, hopefully improved the old timeline design.
	
2007-08-09 David Rorex  <drorex@gmail.com>

	* testsuite/misc-swfc.all: new directory for testcases.
	* testsuite/misc-swfc.all/check.sc, Dejagnu.sc, sound.sc, hello.sc,
	  sound.wav, Makefile.am: new test framework by using swfc.

