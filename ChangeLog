2006-07-27 Sandro Santilli <strk@keybit.net>

	* macros/glib.m4: Fix the fix of --with-glib-lib.

2006-07-27  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/glib.m4: Fix --with-glib-incl and --with-glib-lib options
	to actually work.

2006-07-27 Tomas Groth Christensen <tomasgroth@yahoo.dk>

        * backend/sound_handler_gst.cpp: Made the log messages more informative.


2006-07-27 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: Allow us to specify --enable-sound=none. Default to
	-pedantic -Wno-long-long for GCC.
	* backend/render_handler_ogl.cpp: Remove unneeded #includes.
	* gui/gtk_glue_cairo{.cpp, h}: Move an include to the .cpp file, where
	it's actually used.
	* libbase/jpeg.cpp: Don't let jpeglib.h redefine HAVE_STDLIB_H.
	* libbase/Makefile.am: Remove ogl{.cpp,h} from the build.
	* macros/cairo.m4: Add -lcairo to the Cairo LDFLAGS, if needed.
	* plugin/plugin.cpp: trivially fix warnings.
	* server/shm.cpp: Remove an unused variable.
	* server/asobj/Date.cpp: Make sure the recipient buffer size matches the size
	parameter passed to snprintf(), to prevent overflows.

2006-07-27 Sandro Santilli <strk@keybit.net>

	* macros/gstreamer.m4: fixed handling of --with-gst-lib,
	  big cleanups
	* utilities/Makefile.am: added GSTREAMER_LIBS
	* doc/C/gnash.xml: updated doc for -r switch
	* gui/gnash.cpp: changed semantic of -r switch:
		0: disable both rendering and sound
		1: enable rendering only (changed!)
		2: enable sound only (as before)
		3: enable both (new, previously done by 2)

2006-07-27 Bastiaan Jacques <bastiaan@bjacques.org>

	* all over the place: Facilitate the use of -pedantic in combination
	with -ansi by avoiding non-ISO C++. Avoid extra semicolons. Use the
	`l' instead of the `z' length modifier in printf-style sequences.

2006-07-27 Ivor Blockley <meteoryte@yahoo.com.au>

	* gui/{gtk.cpp, gui.cpp, gui.h, sdl.cpp}, server/{movie.h,
	movie_interface.h, movie_root.cpp, movie_root.h}: Make sure that no
	mouse events are ignored by handling them outside of the advance_movie
	loop.

2006-07-27 Sebasti√† Annonygmouse <annonygmouse@yahoo.co.uk>

	* plugin/plugin.cpp: Don't assume anything about the value of
	string::npos.

2006-07-26 Tomas Groth Christensen <tomasgroth@yahoo.dk>

	* gnash.vcproj: Added backend/sound_handler_gst.cpp.
	* backend/sound_handler_gst.cpp: Use of more gstreamer plugins.
	* backend/gnash.cpp, backend/sound_handler_sdl.cpp, 
	plugin/player.cpp, plugin/klash/klash.cpp, server/gnash.h, 
	server/sound.cpp: Use SOUND_GST and SOUND_SDL to select which
	soundbackend to use.
	* server/swf/ASHandlers.cpp: Stop soundplayback when gotoframe
	and stop is called.

2006-07-26 Sandro Santilli <strk@keybit.net>

	* gui/gnash.cpp: use SOUND_GST and SOUND_SDL to switch
	  between sound handlers.
	* utilities/Makefile.am: add CAIRO_LIBS.
	* macros/gtk2.m4: fixed typo
	* libbase/Makefile.am: don't build ogl.cpp when not using OPENGL
	  rendered. Don't build tu_file_SDL.cpp if HAS_SDL is not set.
	* configure.ac: don't complain about missing SDL_Mixer
	  if Gstreamer sound is requested

2006-07-26 Vitaly Alexeev <tishka92@yahoo.com>

	* server/movie_def_impl.cpp: fixing bug #17110
	* server/sprite_instance.cpp: xscale & yscale may be > 100

2006-07-26 Vitaly Alexeev <tishka92@yahoo.com>

	* server/AutoExec.cpp: small optimization is done

2006-07-26 Sandro Santilli <strk@keybit.net>

	* configure.ac: print GSTREAMER flags if gst sound is enabled
	  (also abort if the lib is not found)
	* macros/glib.m4: fixed to allow for custom glib installations
	* configure.ac, backend/Makefile.am: add --enable-sound option
	  to select between SDL or GSTREAMER
	* backend/sound_handler_gst.cpp: don't use broken HAVE_GST_GST_H
	  macro, rather trust builder and use what's specified in
	  --enable-sound

2006-07-26 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/sound_handler_gst.cpp: When reallocating, don't forget to
	copy the old buffer contents.

2006-07-25 Sandro Santilli <strk@keybit.net>

	* configure.ac: move XML2 and GLIB macro calls before gstreamer
	  one, so we can use LIBXML_CFLAGS and GLIB_CFLAGS when checking
	  for gstreamer headers.
	* macros/gstreamer.m4: always run AC_CHECK_HEADERS for gstreamer
	  so to get HAVE_GST_GST_H defined; fixed AC_CHECK_LIB call to
	  use an actually available function in libgstreamer-0.10.so
	* macros/gstreamer.m4: --with-gstreamer => --with-gst,
	  look for libgstreamer-0.10.so rather then for libgstplaybin.so,
	  fixed handling of --with-gst-libs (was using value given to
	  --with-gst-incl instead)
	* libbase/log.cpp: another small optimization.
	* server/ActionExec.cpp: don't call stack dumper
	  unless -va is given (another optimization)

2006-07-25 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: The correct option is --enable-plugin, not
	--disable-plugin.
	* backend/sound_handler_gst.cpp: Don't use realloc() on operator
	new-allocated pointers. Do some trivial cleanup.
	* backend/sound_handler_sdl.cpp: Trivially fix warnings.
	* server/edit_text_character.cpp: Likewise.
	* server/sound.cpp: Ensure that the sample rate is in the acceptable
	range, to avoid invalid memory accesses.

2006-07-25 Vitaly Alexeev <tishka92@yahoo.com>

	* libbase/log.cpp: small optimization is done

2006-07-25  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/gstreamer.m4: Fix the --with options. Change to
	--with--gst, instead of --with-gstreamer. Look for the correct
	header file and library.

2006-07-25 Lukasz Stelmach <stlman@poczta.fm>

	* macros/sdl.m4: fix --with-sdl-mixer-lib handling.

2006-07-25 Vitaly Alexeev <tishka92@yahoo.com>

	* server/edit_text_character.h, edit_text_character.cpp: 
	fixed input_edit_text cursor bug (center, right alignment)

2006-07-25 Sandro Santilli <strk@keybit.net>

	* plugin/klash/Makefile.am: fixed libgnashasobj.la path.
	* backend/Makefile.am: gtk stuff is source for
	  the deprecated backend/gnash.cpp, not libbackend
	  (which should rely on RENDERER_SORCES instead)

2006-07-25 Rob Savoye <rob@wharfrat.welcomehome.org>

	* Makefile.am: Print the Gstreamer paths for dumpconfig.
	* macros/pkg.m4: Add macros to find pkg-config.	
	* macros/gstreamer.m4: If pkg-config exists, use it, otherwise
	look for the correct header file and libraries.
	* configure.ac: Look for pkg-config.

2006-07-24 Sandro Santilli <strk@keybit.net>

	* macros/gstreamer.m4: report result of headers checking
	  (note: doesn't work with required gstreamer version)
	* plugin/Makefile.am: fixed reference to libgnashasobjs.la

2006-07-24 Tomas Groth Christensen <tomasgroth@yahoo.dk>

        * backend/sound_handler_gst.cpp,  backend/sound_handler_sdl.cpp,
	server/button.cpp, server/gnash.h, server/movie_def_impl.h,
	server/movie_definition.h, server/sound.cpp, 
	server/sprite_definition.h, server/asobj/ASSound.cpp: 
	Restructured the way sound streams are treated. Not much different
	in playing yet, but it will help later.

2006-07-24 Vitaly Alexeev <tishka92@yahoo.com>
	* gnash.vcproj: added /server/asobj files
	* server/swf/ASHandlers.h: small optimization is done
	* server/swf/ASHandlers.cpp: small optimization is done

2006-07-24 Tomas Groth Christensen <tomasgroth@yahoo.dk>

        * Makefile.am, backend/Makefile.am, backend/gnash.cpp, 
	backend/sound_handler_gst.cpp gui/gnash.cpp, plugin/player.cpp, 
	server/gnash.h: Added the new Gstreamer based soundbackend. It still
	needs some work!

2006-07-23 Sandro Santilli <strk@keybit.net>

	* gui/gnash.cpp: fixed delay to respect FPS.
	* configure.ac, backend/Makefile.am, gui/Makefile.am,
	server/ASSound.cpp, server/ASSound.h, server/Boolean.cpp,
	server/Boolean.h, server/Camera.cpp, server/Camera.h,
	server/Color.cpp, server/Color.h, server/ContextMenu.cpp,
	server/ContextMenu.h, server/CustomActions.cpp,
	server/CustomActions.h, server/Date.cpp, server/Date.h,
	server/Error.cpp, server/Error.h, server/Global.cpp, server/Key.cpp,
	server/Key.h, server/LoadVars.cpp, server/LoadVars.h,
	server/LocalConnection.cpp, server/LocalConnection.h,
	server/Makefile.am, server/Math.cpp, server/Math.h,
	server/Microphone.cpp, server/Microphone.h, server/Mouse.cpp,
	server/Mouse.h, server/MovieClipLoader.cpp, server/MovieClipLoader.h,
	server/NetConnection.cpp, server/NetConnection.h, server/NetStream.cpp,
	server/NetStream.h, server/Selection.cpp, server/Selection.h,
	server/SharedObject.cpp, server/SharedObject.h, server/Stage.cpp,
	server/Stage.h, server/System.cpp, server/System.h,
	server/TextSnapshot.cpp, server/TextSnapshot.h, server/Video.cpp,
	server/Video.h, server/asobj/ASSound.cpp, server/asobj/ASSound.h,
	server/asobj/Boolean.cpp, server/asobj/Boolean.h,
	server/asobj/Camera.cpp, server/asobj/Camera.h,
	server/asobj/Color.cpp, server/asobj/Color.h, server/asobj/.cvsignore,
	server/asobj/ContextMenu.cpp, server/asobj/ContextMenu.h,
	server/asobj/CustomActions.cpp, server/asobj/CustomActions.h,
	server/asobj/Date.cpp, server/asobj/Date.h, server/asobj/Error.cpp,
	server/asobj/Error.h, server/asobj/Global.cpp, server/asobj/Key.cpp,
	server/asobj/Key.h, server/asobj/LoadVars.cpp, server/asobj/LoadVars.h,
	server/asobj/LocalConnection.cpp, server/asobj/LocalConnection.h,
	server/asobj/Makefile.am, server/asobj/Math.cpp, server/asobj/Math.h,
	server/asobj/Microphone.cpp, server/asobj/Microphone.h,
	server/asobj/Mouse.cpp, server/asobj/Mouse.h,
	server/asobj/MovieClipLoader.cpp, server/asobj/MovieClipLoader.h,
	server/asobj/NetConnection.cpp, server/asobj/NetConnection.h,
	server/asobj/NetStream.cpp, server/asobj/NetStream.h,
	server/asobj/Selection.cpp, server/asobj/Selection.h,
	server/asobj/SharedObject.cpp, server/asobj/SharedObject.h,
	server/asobj/Stage.cpp, server/asobj/Stage.h,
	server/asobj/System.cpp, server/asobj/System.h,
	server/asobj/TextSnapshot.cpp, server/asobj/TextSnapshot.h,
	server/asobj/Video.cpp, server/asobj/Video.h, utilities/Makefile.am:
	Moved ActionScript built-in objects (client api) under own directory
	(asobj).
	* configure.ac: fixed tip (suggest --enable-gui, not --with-gui)

2006-07-17 Bastiaan Jacques <bastiaan@bjacques.org>

	* libbase/curl_adapter.cpp, server/{ActionExec.cpp, action_buffer.cpp,
	array.cpp, swf/ASHandlers.cpp, swf/tag_loaders.cpp}: Trivially fix
	compiler warnings.

2006-07-16 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/kde.cpp: Update setCallback() to match the arguments in the
	parent class.
	* plugin/plugin.{h,cpp}: Remove more unused OpenGL and GTK code.

2006-07-15 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gnash.cpp: Make sure the argument count is greater than two
	before treating an argument as a variable.
	* gui/gui.{cpp,h}: Remove unused member _xembed.
	* gui/{gnash.cpp,kdesup.h,sdl.cpp,sdlsup.h,gtk.cpp,gtksup.h}: Remove
	the unused first argument to setCallback().
	* plugin/plugin.cpp: Don't do any OpenGL initialization in the plugin,
	because the forked gnash does this on its own.

2006-07-14 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gui.cpp: Don't ignore the arguments passed to the Gui class
	constructor.

2006-07-14 Bastiaan Jacques <bastiaan@bjacques.org>

	* Makefile.am: revert latest change to fix the build.

2006-07-11 Sandro Santilli <strk@keybit.net>

	* Makefile.am: don't make in backend/ (but distribute it)
	* configure.ac: fixed plugin config message to avoid confusion
	(default is disabled, not enabled).

2006-07-11 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/{gtk.cpp, gtk_glue.h, gtk_glue_cairo.cpp, gtk_glue_cairo.h,
	gtk_glue_gtkglext.cpp, gtk_glue_gtkglext.h, gtksup.h}: To facilitate
	moving some GtkGlExt code into the appropriate glue, add a Gtk
	configure event	handler to the GtkGlue class and derivatives. Disable
	some unused Gtk event handlers.

2006-07-10 Sandro Santilli <strk@keybit.net>

	* gui/gtk.cpp: added missing gtkgl.h include
	* backend/render_handler_cairo.cpp: removed comma at end of
	enumeration list (pedantic error).
	* backend/Makefile.am: commented out 'gnash' build
	(there will be a 'gnash' program built under gui/)
	* Makefile.am: added gui/ subdir
	* server/edit_text_character.cpp: fixed tu_string => std::string
	attempt bug.
	* testsuite/actionscript.all/swf_exists.exp:
	use gprocessor -v rather then backend/gnash (we/re moving to gui).
	clean up also <file>.swf.frame0.pp (new preprocessor output name
	from upcoming Ming 0.4)

2006-07-10 Vitaly Alexeev <tishka92@yahoo.com>

	* server\action.h, action.cpp: added SETFOCUS & KILLFOCUS events codes
	* server\edit_text_character_def.h:  added get_readonly() for
	edit_text_character entity
	* server\edit_text_character.h, edit_text_character.cpp: 
	added SETFOCUS & KILLFOCUS event handler and input edit text stuff
	* server\Key.h, Key.cpp:  keypress event handler moved to movie_root,
	because every root must have own event handler
	* server\movie_root.h, movie_root.cpp: added m_active_input_text which
	points to current entity having focus and related get_active_entity,
	set_active_entity
	* server\button.cpp:  added SETFOCUS & KILLFOCUS events initiator
	* server\array.h, as_function.h, as_object.cpp: ported to WIN32
	* backend\gnash.cpp: fixed bug that led to processing of not arisen
	events.
	* server\button.cpp, sprite_instance.cpp:  
	add_keypress_listener --> m_root.add_keypress_listener
	* gnash.vcproj: added new files

2006-07-10 Sandro Santilli <strk@keybit.net>

	* gui/.cvsignore: new file

2006-07-08 Sandro Santilli <strk@keybit.net>

	* server/Function.cpp, server/Function.h: removed obsoleted files.
	* TODO: removed ActionNewMethod from missing opcodes
	* server/swf/ASHandlers.cpp: implemented ActionNewMethod,
	added static construct_object() utility function.
	* server/System.cpp: handled 'new System' attempts.
	* testsuite/actionscript.all/System.as: don't try
	to instantiate the non-instantiatable 'System' class.
	* server/action.cpp, server/action.h: cleaned up and documented
	call_method function.
	* server/as_object.h, server/as_object.cpp:
	added public dump_members() and private set_prototype()
	methods.

2006-07-07 Stefan Schweizer <sschweizer@gmail.com>

	* libamf/Makefile.am, libgeometry/Makefile.am, plugin/Makefile.am,
	plugin/mozilla-sdk/Makefile.am:
	Use CXXFLAGS where appropriate; install plugin using libtool.

2006-07-07 Sandro Santilli <strk@keybit.net>

	* TODO: updated
	* server/swf/ASHandlers.cpp: implemented ActionEnum2
	(enumerate object), fixed ActionEnumerate to always set
	enumeration end.
	* server/ActionExec.cpp, server/Function.cpp, server/Function.h,
	server/Global.cpp, server/Makefile.am, server/MovieClipLoader.cpp,
	server/System.cpp, server/System.h, server/action.cpp,
	server/action_buffer.cpp, server/array.cpp, server/as_function.cpp,
	server/as_function.h, server/as_object.cpp, server/as_value.cpp,
	server/builtin_function.h, server/impl.cpp, server/impl.h,
	server/sprite_instance.cpp, server/string.cpp, server/swf_function.cpp,
	server/swf_function.h, server/timers.cpp, server/xml.cpp,
	server/xmlattrs.cpp, server/xmlnode.cpp, server/xmlsocket.cpp,
	server/swf/ASHandlers.cpp, server/swf/tag_loaders.cpp:
	Split Function.{h,cpp} into as_function.{h,cpp}, swf_function.{h,cpp}
	and builtin_function.{h,cpp}.

2006-07-07 Sandro Santilli <strk@keybit.net>

	* server/action_buffer.cpp: don't log action at parse time
	(is redundant, as they are logged at execution time).
	* server/Function.cpp: fixed local registers handling in operator()
	for function2 (see the 1-based register WARNING below).
	* server/as_environment.cpp, server/as_environment.h:
	outlined local register functions, adding assertion checking.
	* server/ActionExec.cpp, server/MovieClipLoader.cpp,
	server/as_environment.cpp, server/as_environment.h,
	server/character.cpp, server/character.h, server/sprite_instance.cpp,
	server/sprite_instance.h, server/swf/ASHandlers.cpp:
	Changed as_environment's target to be a character rather
	then a sprite_instance (it seems buttons are valid targets);
	Handled invalid values for sprite_instance members
	_xscale and _yscale.
	* server/action_buffer.cpp, server/swf/ASHandlers.cpp:
	removed -pedantic compiler warnings, fixed a bug in
	fix_stack_underrun pushing more undefined values then
	required.

2006-07-06 Sandro Santilli <strk@keybit.net>

	* server/array.cpp, server/array.h: implemented
	Array.sort(flags=0) method.
	* server/Global.cpp, server/array.cpp, server/array.h:
	had Array unimplemented methods print an ERROR with -v,
	renamed array_init  to array_class_init and change signature
	to take by-ref.
	* server/array.cpp: most functions made module-statics, indentation
	* testsuite/actionscript.all/array.as: "tostring" => "toString"
	(SWF 7 and up are case-sensitive in this); added tests for
	Array constants and instanceOf.
	* server/ActionExec.cpp, server/Function.cpp, server/Global.cpp
	server/as_environment.cpp, server/as_environment.h,
	server/swf/ASHandlers.cpp: environment's global and local registers
	made private; provided accessor methods checking for out of bound
	conditions; added dumpers for them. Updated all users.
	WARNING: 1-based register must be checked, but ming is unable
	to output Function2 code...
	

2006-07-05 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Function.as:
	handled differences between player versions.
	* server/gstring.cpp:
	Provide all of "String" class interface as static methods
	(actionscript.all/String.swf testcases passes all now).
	* server/ActionExec.cpp, server/Function.cpp, server/Function.h,
	server/Global.cpp, server/MovieClip.cpp, server/MovieClipLoader.cpp,
	server/System.cpp, server/action.cpp, server/action.h,
	server/action_buffer.cpp, server/array.cpp, server/as_object.cpp,
	server/as_object.h, server/as_value.cpp, server/as_value.h,
	server/gstring.h, server/resource.h, server/sprite_instance.cpp,
	server/string.cpp, server/timers.cpp, server/xml.cpp,
	server/xmlsocket.cpp, server/swf/ASHandlers.cpp,
	server/swf/tag_loaders.cpp:
	Refactored ActionScript functions model.
	We now have a base as_function class and builting_function and
	swf_function being for builtin and user-defined functions/classes.
	(actionscript.all/Function.swf testcases passes all now).

2006-07-05 Vitaly Alexeev <tishka92@yahoo.com>

	* backend\gnash.cpp:  mouse_scaling.patch from Samuel Liden Borell <samuellb@bredband.net>
	* backend\gtksup.cpp:  mouse_scaling.patch from Samuel Liden Borell <samuellb@bredband.net>
	* server\button.cpp:  added button keypress event handler
	* server\Key.cpp: added button keypress event handler


2006-07-04 Sandro Santilli <strk@keybit.net>

	* server/Function.h, server/swf/ASHandlers.cpp:
	most function_as_object members made private.

2006-07-03 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Makefile.am,
	testsuite/actionscript.all/inheritance.as:
	New ActionScript inheritance test.

2006-07-02 Sandro Santilli <strk@keybit.net>

	* server/ActionExecp.cpp: dump stack after each action execution
	when -va is provided (can switch off undefining DEBUG_STACK).
	* server/as_object.cpp: reduced noise on -va.
	* gui/gui.cpp: fixed Gui constructors to correctly set scale.
	Mouse events now work as expected.
	* server/MovieClipLoader.cpp, server/action.cpp,
	server/as_environment.cpp, server/as_environment.h,
	server/button.cpp, server/button.h, server/character.h,
	server/character_def.cpp, server/character_def.h,
	server/edit_text_character.cpp, server/edit_text_character.h,
	server/edit_text_character_def.cpp, server/edit_text_character_def.h,
	server/generic_character.h, server/sprite_definition.cpp,
	server/sprite_definition.h, server/sprite_instance.cpp,
	server/sprite_instance.h:
	Characters's parents are now characters (not sprite_instances).
	This is required to have child characters for buttons and
	edit_text and other characters (see Vitaly's patch for bug #16969
	for reference).

2006-07-01 Vitaly Alexeev <tishka92@yahoo.com>

	* server\button.cpp:  fixed bug #16969

2006-07-01 Sandro Santilli <strk@keybit.net>

	* server/as_environment.cpp, server/as_environment.h:
	changed register-related functions to use unsigned
	ints rather the ints for offsets.
	* server/as_environment.cpp, server/as_environment.h:
	added a get_version() method to hide implementation.
	* server/ActionExec.cpp, server/sprite_instance.cpp,
	server/swf/ASHandlers.cpp: use env.get_version()
	rather then own-rolled version extracter.
	* server/Global.cpp: tolerate (don't abort) unimplemented
	ASSetPropFlags with non-object 'props' argument.

2006-06-30 Sandro Santilli <strk@keybit.net>

	* server/swf/ASHandlers.cpp (ActionGetUrl): fixed read
	of 'target' parameter (action still not fully implemented,
	see bug #16435).
	* server/dlist.cpp: (advance): keep characters alive
	during advancement of them, in case they get removed
	from the DisplayList (see bug #16815).
	* server/swf/ASHandlers.cpp: fixed bugus stack drop
	in ActionWaitForFrame, added pseudo-code implementation of
	it and ActionWaitForFrameExpresion.
	* server/swf/ASHandlers.cpp, server/swf/ASHandlers.h:
	added ensure_stack() function to use by action handlers
	to check stack size before attempting to fetch from it.
	This cleanly handles malformed SWF and prints an error about
	it.

2006-06-30 Vitaly Alexeev <tishka92@yahoo.com>

	* server\sprite_instance.cpp:  fixed elvis.swf bug

2006-06-30 Sandro Santilli <strk@keybit.net>

	* server/swf/ASHandlers.cpp (SWFHandlers::ActionLogicalOr):
	"or" values, don't "and" them.

2006-06-30 Vitaly Alexeev <tishka92@yahoo.com>

	* server\character.h:  fixed small bug
	* server\swf\ASHandlers.cpp:  fixed small bug


2006-06-30 Sandro Santilli <strk@keybit.net>

	* server/Global.cpp: removed useless C-style casts.
	* server/ActionExec.cpp: print stack debugging
	informations during actions execution if DEBUG_STACK
	is defined (undef by default) and -v is given on command line.
	* server/swf/ASHandlers.cpp, server/swf/ASHandlers.h:
	static action handlers made private in SWFHandlers class;
	added an SWFHandlers::action_name(action_type) utility method.
	* server/as_environment.h (dump_stack): display stack contents
	on a single line, to enhance readibility of stack changes.
	* server/action.cpp: removed useless ASHandlers.h include.
	* gui/gui.cpp: added missing sprite_instance.h
	include after refactoring commit.

2006-06-29 Vitaly Alexeev <tishka92@yahoo.com>

	* server\actionexec.h:  ported to win32
	* server\ActionExec.cpp: commented unnecessary log_msg
	* server\character_def.h: ported to win32
	* server\as_environment.h: ported to win32
	* server\action_buffer.cpp: ported to win32
	* server\dlist.cpp: added "onClipEvent(construct, unload)" handlers
	* server\Function.cpp: fixed tiny bug
	* server\Global.cpp: removed unnecessary assert
	* server\sprite_instance.cpp: added lost m_display_list.reset()
	* server\swf\tag_loaders.cpp: added "onClipEvent(construct) handler
	* server\swf\ASHandlers.cpp: ported to win32
	* gnash.vcproj: added new files


2006-06-29 Sandro Santilli <strk@keybit.net>

	* server/ASHandlers.cpp (ActionWaitForFrame): added stack size check.
	* server/ASSound.cpp, server/ActionExec.cpp, server/Function.cpp,
	server/Global.cpp, server/MovieClipLoader.cpp, server/action.cpp,
	server/as_environment.cpp, server/as_environment.h,
	server/as_value.cpp, server/as_value.h, server/button.cpp,
	server/button.h, server/character.cpp, server/character.h,
	server/character_def.cpp, server/character_def.h,
	server/edit_text_character.cpp, server/edit_text_character.h,
	server/edit_text_character_def.cpp, server/edit_text_character_def.h,
	server/generic_character.h, server/impl.cpp, server/morph2.cpp,
	server/movie.h, server/movie_def_impl.cpp, server/movie_interface.h,
	server/movie_root.cpp, server/movie_root.h,
	server/shape_character_def.cpp, server/sprite_definition.cpp,
	server/sprite_definition.h, server/sprite_instance.cpp,
	server/sprite_instance.h, server/timers.cpp, server/xmlsocket.cpp,
	server/swf/ASHandlers.cpp:
	Big cleanup aimed at reducing model complexity.
	Use of the 'movie' has been drastically reduced, the aim
	is completely drop it.
	Every sprite is a sprite_instance, including the
	_root movie. We still have a movie_root class
	(with a sprite_instance pointer being the _root movie)
	representing the actual movie being played.

2006-06-28 Sandro Santilli <strk@keybit.net>

	* server/swf/ASHandlers.cpp, server/Function.cpp: updated to work
	with the private as_environment::m_target.
	* server/as_environment.h:  m_target made private.
	* server/as_environment.cpp (find_target): assert that
	an as_value of type OBJECT can be cast to an object.
	* server/Makefile.am, server/character_def.cpp, server/impl.cpp:
	Put character_def implementation in its own file.
	* server/character_def.h: Added missing forward declarations.

2006-06-27 Sandro Santilli <strk@keybit.net>

	* server/swf/ASHandlers.cpp, server/ActionExec.cpp: moved
	all known action handlers implementations from ActionExec
	to ASHandlers, general cleanups.
	* server/swf/ASHandlers.cpp: fixed bug in ActionDefineFunction2.

2006-06-26 Sandro Santilli <strk@keybit.net>

	* server/Function.h, server/Function.cpp: added assertion checking
	in set_length() and constructor by action_buffer.
	* server/swf/ASHandlers.cpp: fixed ActionDefineFunction impl.
	* server/ActionExec.cpp: fixed handling of ACTION_RETURN.

2006-06-25 Sandro Santilli <strk@keybit.net>

	* server/ActionExec.cpp, server/ActionExec.h,
	server/Makefile.am: new class for action_buffer
	execution context.
	* server/Function.cpp, server/Function.h:
	use action_buffer by const pointers .
	* server/action_buffer.cpp, server/action_buffer.h:
	added utility functions to read data from the buffer
	to eventually use a stream instead.
	* server/swf/ASHandlers.cpp, server/swf/ASHandlers.h:
	SWFHandlers made a singleton (hopefully fixes the static
	initialization problem), used a fixed-size vector
	for SWFHandlers::_handlers  (faster). Ported some
	ActionHandlers from ActionExec (work unfinished).

2006-06-24 Sandro Santilli <strk@keybit.net>

	* server/movie_def_impl.h, server/movie_definition.h,
	server/sprite_definition.h: changed add_init_action()
	signature to drop unused sprite_id parameter.
	* server/Boolean.cpp, server/Camera.cpp, server/Color.cpp,
	server/ContextMenu.cpp, server/CustomActions.cpp
	server/Date.cpp, server/Error.cpp, server/ASSound.cpp,
	server/Key.cpp, server/LoadVars.cpp, server/LocalConnection.cpp,
	server/Microphone.cpp, server/Mouse.cpp, server/NetStream.cpp,
	server/Selection.cpp, server/SharedObject.cpp, server/Stage.cpp,
	server/System.cpp, server/TextSnapshot.cpp, server/Video.cpp,
	server/action.cpp, server/button.cpp, server/character.h,
	server/character_def.h, server/execute_tag.h, server/movie.h,
	server/movie_root.h, server/swf/tag_loaders.cpp:
	removed unused parameter warnings.

2006-06-22 Sandro Santilli <strk@keybit.net>

	* server/Function.cpp, server/MovieClipLoader.cpp, server/action.cpp,
	server/as_environment.cpp, server/as_environment.h,
	server/sprite_instance.cpp, server/sprite_instance.h,
	server/textformat.cpp, server/timers.cpp, server/xml.cpp,
	server/xmlsocket.cpp, server/swf/ASHandlers.cpp:
	Added as_environment::{get,set}_variable{,_raw} versions
	w/out with_stack argument, those with "with_stack" arg moved
	to private space. All files updated to avoid use of dummy
	(empty) with_stack objects.
	* server/Function.cpp, server/Function.h:
	updated doxygen comments, used size_t for action_buffer
	offsets and length.

2006-06-21 Vitaly Alexeev <tishka92@yahoo.com>

	* server/action_buffer.h: removed unnecessary operator=
	* server/action.cpp: fixed "static SWFHandlers ash;" problem
	* server/swf/ASHandler.cpp: fixed "static SWFHandlers ash;" problem
	* server/action_buffer.cpp: fixed "static SWFHandlers ash;" problem
	* server/action_buffer.h: added operator=
	* server/gnash.h: ported to win32
	* server/impl.h: removed read() from swf_event
	* server/swf/tag_loader.cpp: added multi-event handler
	* gnash.vcproj: added new files

2006-06-21 Sandro Santilli <strk@keybit.net>

	* doc/C/internals.xml: more info about writing ActionScript tests
	and layout under testsuite/
	* testsuite/actionscript.all/xtrace.as: commented out xtrace
	engagement message (not more needed since check.as prints testfile
	info)
	* testsuite/actionscript.all/String.as: added inheritance checks.
	* testsuite/actionscript.all/Makefile.am: fixed duplicated
	defines when building online tests.
	* testsuite/actionscript.all/: added rcsid variable
	to all testfiles, had check.as print testfile info at
	the beginning rather then at each check.
	* testsuite/actionscript.all/Makefile.am: made online-test rule
	work with external build dir.

2006-06-20 Sandro Santilli <strk@keybit.net>

	* server/Makefile.am, server/action.cpp, server/action.h,
	server/action_buffer.cpp, server/action_buffer.h,
	server/as_environment.cpp, server/impl.h, server/textformat.cpp,
	server/with_stack_entry.h, server/swf/ASHandlers.cpp:
	moved action_buffer and with_stack_entry classes in their own
	files.

2006-06-19 Michael Carlson <corfe83dev@gmail.com>

	* server/string.cpp: Eliminate wasteful if/else and 
	string_method function,	implement several string functions
	* testsuite/actionscript.all/string.as: Initial String tests
	* testsuite/actionscript.all/Makefile.am: Build string.swf

2006-06-19 Vitaly Alexeev <tishka92@yahoo.com>

	* server/movie_def_impl.h: fixed bug #16882

2006-06-19 Vitaly Alexeev <tishka92@yahoo.com>

	* server/character.h: added has_keypress_event() method
	* server/action.h: updated  event name
	* server/action.cpp: updated  event name
	* server/Key.h: added keypress event handler
	* server/Key.cpp: added keypress event handler
	* server/sprite_instance.h: added m_has_keypress_event
	* server/sprite_instance.cpp: added call to keypress listeners
	* server/swf/tag_loaders.cpp: updated s_code_bits

2006-06-19 Sandro Santilli <strk@keybit.net>

	* server/sound_handler_mp3.cpp: fix build bug #16836.
	* server/swf.h: added symbolic names for fill_style types.
	* server/styles.h: some indentation and doxygen comments.
	* server/styles.cpp: use symbolic names for fill_style types,
	stricter checks on them, accept hard-edges versions of
	CLIPPED and TILED bitmap fills.

2006-06-15 Sandro Santilli <strk@keybit.net>

	* server/action.cpp (call_method): include method name in 
	not-a-function error message.
	* server/as_environment.h: changed drop(), top() and bottom()
	methods to take size_t rather then int and to check stack
	size; added (public) stack_size() method.
	* server/swf/ASHandlers.cpp (SWFHandlers::ActionPop):
	handle empty stack condition.
	* server/edit_text_character.cpp: don't abort when text doesn't
	fit into the defined boundaries (fixes bug #16637).
	* server/edit_text_character.h: more stuff made private.
	* server/edit_text_character_def.h: added do_word_wrap() method.

2006-06-15 Vitaly Alexeev <tishka92@yahoo.com>

	* server/action.h:  add clip_event_keypress & clip_event_construct hack
	* server/action.cpp:   add clip_event_keypress & clip_event_construct hack
	* backend/gnash.cpp:  add SDLK_0 -- SDLK_9
	* server/swf/tag_loaders.cpp:  add clip_event_keypress & clip_event_construct hack
	* server/movie_root.cpp: small optimization
	* server/sprite_instance.cpp:  small optimization

2006-06-14 Vitaly Alexeev <tishka92@yahoo.com>

	* server/movie.h: comment on_event_load()
	* server/movie_root.h: comment m_on_event_load_called
	* server/sprite_instance.h: add advance_root(), advance_sprite()
	* server/dlist.cpp: replace on_event_load -->execute_frame_tags(0)
	* server/movie_def_impl.cpp: add execute_frame_tags(0)
	* server/movie_root.cpp: replace advance() --> advance_root()
	* server/sprite_instance.cpp:  add advance_root(), advance_sprite(), update advance()


2006-06-13 Sandro Santilli <strk@keybit.net>

	* server/movie.h: removed most warnings about unused
	parameters, indentation.
	* testsuite/media/Bitstream Vera Sans.COPYRIGHT,
	testsuite/media/Bitstream Vera Sans.fdb: added
	fdb font from Ming project, for embedding in test
	units.
	* testsuite/media/README: info about media files
	(incomplete).
	* testsuite/misc-ming.all/Makefile.am,
	testsuite/misc-ming.all/DefineEditTextTest.c:
	updated DefineEditTextTest file to use embedded
	fonts, we can now reproduce bug #16637.

2006-06-12 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/DefineEditTextTest.c,
	testsuite/misc-ming.all/Makefile.am,
	testsuite/misc-ming.all/defineedittext.c:
	defineedittext.c renamed to DefineEditTextTest.c,
	added some more code to get closer to what's in the
	testfile from bug #16637 (missing embedded fonts)
	* server/swf/ASHandler.cpp: (ActionDeleteVar): fixed
	call to as_object::set_member (as_value passed by
	const ref, not pointer).

2006-06-11 Vitaly Alexeev <tishka92@yahoo.com>

	* libbase/log.cpp: fix trace("") bug
	* libbase/rc.cpp: porting to WIN32
	* libbase/URL.cpp: porting to WIN32
	* backend/gnash.cpp: add mysql_db call
	* server/gnash.h: add register_component(...)
	* server/action.cpp: add register_component(...)
	* server/movie_root.cpp: add next_random() call to advance()
	* server/System.cpp: porting to WIN32
	* server/swf/ASHandler.cpp: add ActionDeleteVar
	* extensions/mysql/mysql_db.cpp: new file
	* extensions/mysql/mysql_db.h: new file
	* extensions/mysql/mysql_table.cpp: new file
	* extensions/mysql/mysql_table.h: new file
	* extensions/mysql/README: new file
	gnash.vcproj: new file


2006-06-10 Sandro Santilli <strk@keybit.net>

	* libbase/log.cpp: avoid buffer overflows.

2006-06-08 Sandro Santilli <strk@keybit.net>

	* server/impl.cpp: save URL::str() return into a local variable.
	* gui/gnash.cpp: updated to use new dbgfile facilities.
	* backend/gtksup.cpp: fixed compiler warnings.
	* utilities/parser.cpp, utilities/processor.cpp:
	use extern rcfile.

2006-06-08 Rob Savoye <rob@wharfrat.welcomehome.org>

	* plugin/plugin.cpp: Adjust the size of the URL buffer based on
	size. Gracefully handle an error when we get "&&" in a URL so
	Firefox doesn't crash.
	* plugin/klash/klash.cpp: Use new logging functions for actions
	and parsing.


	* libbase/URL.cpp: Add support for using the config file for
	security settings. Add host_check() to compare a hostname against
	security settings before accessing remote Flash movies. Look for
	_WIN32 as well as just WIN32.
	* libbase/URL.h: Add host_check().
	* libbase/rc.cpp: Default all security settings to false.
	* server/Date.cpp: Look for _WIN32 as well as just WIN32.
	* server/action.cpp: Look for _WIN32 as well as just WIN32.

2006-06-07 Rob Savoye <rob@darkstar.welcomehome.org>

	* configure.ac: Add config dir for compat files like
	getopt.c. Look for getopt, and replace it if it doesn't exist.
	* backend/gnash.cpp: Remove getopt code for win32, it's in it's
	own file now.
	* libbase/container.h: Look for _WIN32 as well as just WIN32. 
	* libbase/curl_adapter.cpp: Look for _WIN32 as well as just WIN32. 
	* libbase/log.cpp: Look for _WIN32 as well as just WIN32. 
	* libbase/log.h: Look for _WIN32 as well as just WIN32. 
	* libbase/tu_types.h: Look for _WIN32 as well as just WIN32. 
	* libbase/utility.h: Look for _WIN32 as well as just WIN32. 
	* libbase/tu_timer.h: Look for _WIN32 as well as just WIN32. 
	* libbase/tu_opengl_includes.h: Look for _WIN32 as well as just
	WIN32.
	* libbase/getopt.c: Replacement function for win32.
	
	* backend/gnash.cpp: Load config file, and use those values if
	they exist. Command line options override config file settings.
	* backend/gtksup.cpp: Trap the shift and control modifier keys
	too.
	* backend/gtksup.h: Don't initialize externs.
	* backend/sound_handler_sdl.cpp: Use new logging macros.
	* libbase/Makefile.am: Add SDL libs.
	* libbase/log.cpp: Add log_action() and log_parse() to replace the
	old macros.
	* libbase/log.h: Add support for optionally logging actions and
	parsing.
	* libbase/rc.cpp: Add support for optionally logging actions and
	parsing. Add extractNumber() for numeric config file values. Add
	dump() method.
	* libbase/rc.h: Add new config file options for optionally logging
	actions and parsing.
	* server/ASSound.cpp: Use new logging functions for actions and
	parsing. 
	* server/Function.cpp: Use new logging functions for actions and
	parsing.
	* server/Global.cpp: Use new logging functions for actions and
	parsing. Put in gnash namespace.
	* server/Key.cpp, Key.h: Add copyright notice.
	* server/action.cpp: Use new logging functions for actions and
	parsing.
	* server/array.cpp: Use new logging functions for actions and
	parsing.
	* server/as_environment.cpp: Use new logging functions for actions
	and parsing.
	* server/as_object.cpp: Use new logging functions for actions and
	parsing.
	* server/button.cpp: Use new logging functions for actions and
	parsing.
	* server/dlist.cpp: Use new logging functions for actions and
	parsing.
	* server/edit_text_character_def.cpp: Use new logging functions
	for actions and parsing.
	* server/font.cpp: Use new logging functions for actions and
	parsing.
	* server/fontlib.cpp: Use new logging functions for actions and
	parsing.
	* server/impl.cpp: Use new logging functions for actions and
	parsing.
	* server/morph.cpp: Use new logging functions for actions and
	parsing.
	* server/morph2.cpp: Use new logging functions for actions and
	parsing.
	* server/movie_def_impl.cpp: Use new logging functions for actions
	and parsing.
	* server/movie_root.cpp: Use new logging functions for actions and
	parsing.
	* server/shape_character_def.cpp: Use new logging functions for
	actions and parsing.
	* server/sound.cpp: Use new logging functions for actions and
	parsing.
	* server/sound_handler_mp3.cpp: Use new logging functions for
	actions and parsing.
	* server/sprite_definition.cpp: Use new logging functions for
	actions and parsing.
	* server/sprite_instance.cpp:Use new logging functions for actions
	and parsing.
	* server/stream.cpp:Use new logging functions for actions and
	parsing.
	* server/styles.cpp:Use new logging functions for actions and
	parsing.
	* server/text.cpp: Use new logging functions for actions and
	parsing.
	* server/types.cpp:Use new logging functions for actions and
	parsing.
	* server/types.h:Use new logging functions for actions and
	parsing.
	* server/swf/ASHandlers.cpp: Use new logging functions for actions
	and parsing.
	* server/swf/tag_loaders.cpp: Use new logging functions for actions
	and parsing.
	* testsuite/libbase/Makefile.am: Comment out Log test case for
	now.
	* testsuite/libbase/gnashrc.in: Add items for all config values.
	* utilities/parser.cpp: Use new logging functions for actions
	and parsing.
	* utilities/processor.cpp: Use new logging functions for actions
	and parsing.

2006-06-01 Vitaly Alexeev <tishka92@yahoo.com>
	* server/Math.h: porting to WIN32
	* server/network.h: porting to WIN32
	* server/network.cpp: porting to WIN32
	* server/Global.cpp: LocalConnection & NetConnection in WIN32 now
	* server/impl.cpp: commented printf
	* libbase/curl_adapter.h: porting to WIN32

2006-05-30  Rob Savoye  <rob@ripple.welcomehome.org>

	* plugin/plugin.h: Comment out debug print statements.
	* plugin/plugin.cpp: General code cleanup, comment out debug print
	statements.
	* plugin/Makefile.am: Copy, don't use libtool to install the
	plugin.
	
2006-05-29  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/plugin.cpp: Change the description strings so the flash
	version is detected correctly.
	* macros/opengl.m4: Look in 64 bit directories after the 32 bit
	ones.
	* macros/zlib.m4: Look in 64 bit directories after the 32 bit
	ones.
	* libbase/rc.h: Add extractSetting() for support function to get
	values from the config file.
	* libbase/rc.cpp: Use extractSetting(), rather than duplicating
	all the code.
	* libbase/tu_types.h: Check for more variations of the ENDIAN
	constants. Bug #16682.

2006-05-30 Rob Savoye <rob@wharfrat.welcomehome.org>

	* configure.ac: Link to the test config file in
	testuites/libbase.
	* libbase/Makefile.am: Add rc.{h,cpp}.
	* libbase/rc.h, rc.cpp: Config file support.
	* testsuite/libbase/Makefile.am: Add Rc file test case.

2006-05-29 Stefan Schweizer <sschweizer@gmail.com>

	* macros/gtkglext.m4: Fix gnash building with confcache.

2006-05-29 Sandro Santilli <strk@keybit.net>

	* server/dlist.h, server/dlist.cpp: renamed display_list
	to DisplayList and made a real class, many functions moved
	to private space, abstracted underlying container to allow
	for future modifications aimed at performance improvements;
	current implementation done with std::list.
	* server/sprite_instance.h, server/sprite_instance.cpp:
	updated to use the new DisplayList class interface.

2006-05-27 Vitaly Alexeev <tishka92@yahoo.com>

	* server/action.h: updated forward declaration.
	* server/resource.h: updated forward declaration.
	* server/fn_call.h: updated forward declaration.
	* server/gnash.h: added some sound_handler methods.
	* server/ASHandler.cpp: added stopAllSounds;
	* server/ASSound.cpp: added some sound methods.
	* server/button.cpp: added 3-rd parameter in play_sound.
	* server/sound.cpp: added 3-rd parameter in play_sound.
	* libbase/log.cpp: fixed va_start bug.
	* backend/sound_handler_sdl.cpp: added some sound methods.

2006-05-26 Sandro Santilli <strk@keybit.net>

        * testsuite/misc-ming.all/PlaceObject2Test.c,
        testsuite/misc-ming.all/RemoveObject2Test.c,
        testsuite/misc-ming.all/Makefile.am: added
        tests for PlaceObject2 and RemoveObject2 tags.

2006-05-26 Patrice Dumas <pertusus@free.fr>

	* doc/C/.cvsignore: add more doc files. 
	
2006-05-25 Vitaly Alexeev <tishka92@yahoo.com>

	* Forward declarations should correspond to definition in Visual
	C. Updated all headers where it not so.
	* container.h: added hash from gameSWF. There are problems with
	stdext:hash in WIN32. 
	* backend/gnash.cpp: fixing upside-down (flipped horizontally). 

2006-05-25 Vitaly Alexeev <tishka92@yahoo.com>

	* Forward declarations should correspond to definition in Visual C.
	Updated all headers where it not so.
	* container.h: added hash from gameSWF. There are problems with
	stdext:hash in WIN32. 
	* tu_types.h: added types from inttypes.h for WIN32
	* action.cpp: ported to WIN32
	* global.cpp: The network for WIN32 is commented. It does not work.
	* log.cpp: ported to WIN32

2006-05-24 Patrice Dumas <pertusus@free.fr>

	* server/Makefile.am: swap order of lib_LTLIBRARIES.
	* plugin/Makefile.am: remove redundant lib flags for plugin.
	* configure.ac, plugin/Makefile.am: removed references to
	the unused Xmu library.
	* macros/atk.m4, macros/glib.m4, macros/gstreamer.m4,
	macros/gtk2.m4, macros/gtkglext.m4, macros/pango.m4,
	macros/sdl.m4: added namespace-like prefixes to commonly
	used ${version} and ${topdir} variables.

2006-05-24 Bernhard Rosenkraenzer <bero@arklinux.org>

	* plugin/klash/klash.cpp: made URL aware.

2006-05-24 Sandro Santilli <strk@keybit.net>

	* plugin/klash/klash.cpp: removed obsoleted
	file_opener callback use.

2006-05-23 Sandro Santilli <strk@keybit.net>

	* macros/gtkglext.m4: check for gtkglext no matter
	wheter plugin has been requested or not, fixed
	messages during autodetection attempts, cleanly
	handled --with-glext-incl switch (make sure to
	set the $version variable).

2006-05-23 Patrice Dumas <pertusus@free.fr>

	* Makefile.am: gui and plugin unconditionnaly in DIST_SUBDIRS.
	* server/Makefile.am: distribute fn_call.h.
	* doc/omf.make: don't use -p $(scrollkeeper_localstate_dir) such
	that nothing is installed in the staged install directory.

2006-05-22 Sandro Santilli <strk@keybit.net>

	* gui/sdl.cpp: fixed bug in SDL gui preventing movie advances.
	* configure.ac: abort with an error at configure time if gui==gtk 
	and libgtkgl is not found.

2006-05-21 Sandro Santilli <strk@keybit.net>

	* server: action.h, fn_call.h, *: moved
	fn_call struct definition in its own file
	* server/gen-files.sh: added fn_call.h include
	in implementation file and as_object.h include
	in header file. Updated all files for new header.

2006-05-20 Vitaly Alexeev <tishka92@yahoo.com>

	* server/gnash.h: struct font; --> class font;
	* server/impl.h: struct font; --> class font;
	* server/resource.h: struct font; --> class font;
	* server/swf/tag_loaders.h: class movie_definition; --> struct
	movie_definition; 
	* server/swf/TagLoaderTable.h:  class movie_definition; --> struct
	movie_definition; 
	* server/edit_text_character_def.cpp:  class movie_definition; -->
	struct movie_definition; 
	* server/as_value.cpp: porting to WIN32
	* server/backend/gnash.cpp: getopt for WIN32
	* server/SreamProvider.cpp: porting to WIN32
	* server/System.cpp: porting to WIN32
	* server/swf/tag_loaders.cpp: pow(2,... --> pow(2.0,...
	* libbase/URL.cpp: porting to WIN32


2006-05-19 Sandro Santilli <strk@keybit.net>

	* server/Makefile.am, server/action.cpp, server/action.h,
	server/as_environment.cpp,  server/as_environment.h,
	server/movie.h: put as_environment class in it's own
	files.
	* testsuite/libbase/.cvsignore: new file
	* testsuite/misc-ming.all/.cvsignore: new file
	* server/swf/tag_loaders.{cpp,h}: doxygen comments for
	define_font_info_loader().
	* server/font.{cpp,h}: doxygen comments.
	* testsuite/misc-ming.all/Makefile.am,
	testsuite/misc-ming.all/defineedittext.c:
	added test for DefineEditText tag (gnash crashes)

2006-05-18 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/definebitsjpeg2.c: added copyright
	header
	* testsuite/misc-ming.all/moviecliploader_test.c: added
	copyright header
	* Makefile.am, configure.ac, macros/firefox.m4:
	moved handling of --enable-plugin from firefox macro
	to top-level configure so you can disable build in
	the plugin/ dir (--disable-plugin didn't work).
	* server/edit_text_character_def.h, server/edit_text_character.cpp
	edit_text_character_def made a real class, ensuring data
	members are never changed. Type of variables holding twips
	values changed from float to uint16_t (a definition is immutable
	anyway, and we read uint16_t from the stream)
	* server/edit_text_character.h, server/edit_text_character_def.cpp:
	updated to use edit_text_character_def interface (no more
	direct members access). Added a private 'font' member to allow
	for replacement of it from ActionScript code (not sure this
	is required).
	* server/text.cpp, server/text.h: changed text_style::m_font
	member to be a const pointer.
	* server/StreamProvider.cpp: fixed compiler warning
	in absence of libcurl.
	* server/Makefile.am, server/edit_text_character.cpp
	server/edit_text_character.h, server/edit_text_character_def.cpp,
	server/edit_text_character_def.h, server/text.h,
	server/swf/tag_loaders.cpp: extracted edit_text_character
	class from text.h.
	* server/generic_character.h: struct => class, headers
	inclusion streamlined.
	* server/Makefile.am, server/edit_text_character_def.cpp,
	server/edit_text_character_def.h, server/text.cpp,
	server/text.h: moved edit_text_character_def class and
	implementation in its own file.
	* server/textformat.cpp: fixed compiler warnings

2006-05-18 Patrice Dumas <pertusus@free.fr>

	* doc/omf.make: don't use DESTDIR for scrollkeeper-update cache
        directory, such that scrollkeeper-update fails if not run at
        root, instead of creating directories that are left over when
        doing staged install.
	* doc/C/Makefile.am: add - in front of the install-info version
	test to ignore errors.

2006-05-17 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/gnash.cpp: Create the OpenGL render handler only after
	OpenGL has been initialised.

2006-05-17 Sandro Santilli <strk@keybit.net>
	
	* server/StreamProvider.cpp: added temporary support for
	prompting user about Grant/Bock of URL accesses. If input
	is not a terminal default to allow from all.
	* backend/gtksup.h: fixed preprocessor instructions comments
	* gui/gnash.cpp: fixed handling of -h flag (force exit 
	after printing usage string); added comments to
	removal of file_opener stuff.
	* gui/Makefile.am: use new USE_GUI_* conditionals
	to avoid references to unrequested dependencies.
	Move KDE deps to klash_LDFLAGS (from AM_LDFLAGS)
	* configure.ac: fixed handling of --enable-gui switch,
	added AM_CONDITIONALs USE_GUI_<what>
	* server/xml.cpp: fixed compiler warnings.

2006-05-16 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gnash.cpp: Update to recent API changes.

2006-05-16 Bastiaan Jacques <bastiaan@bjacques.org>

	* macros/gtkglext.m4: Prepend only one -I per added include dir.

2006-05-16 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/gnash.cpp, gui/{gtk_glue_gtkglext,kde_glue_opengl}.cpp:
	Remove OpenGL initialisation code.
	* backend/render_handler_opengl.cpp: Add OpenGL initialisation code
	into create_render_handler_ogl().
	* server/gnash.h, backend/render_handler_cairo.cpp: Modify
	create_render_handler_cairo() to accept an argument which is the Cairo
	handle to which the renderer will draw.
	* backend/gnash.cpp: Remove the hacky cairo binding. If you
	want to try the Cairo backend, use the GUI library in gui/.

2006-05-16 Sandro Santilli <strk@keybit.net>

	* server/action.cpp: use GUI_GTK rather then HAVE_GTK2
	* macros/gtk2.m4: fixed ac_cv_path_gtk2_incl setting to
	always include -I, compute ${version} even when
	--with-gtk2-incl is used (needed to find gdkconfig.h).

2006-05-16 Rob Savoye <rob@wharfrat.welcomehome.org>

	* macros/glib.m4: Look for the config file the brute force
	way.
	* macros/gtk2.m4: Look for the config file the brute force
	way.
	* macros/gtkglext.m4: Look for the config file the brute force
	way.
	* macros/opengl.m4: Look in /usr/lib*/opengl/xorg-x11/lib for
	libGL.

2006-05-16 Sandro Santilli <strk@keybit.net>

	* backend/gnash.cpp, server/gnash.h,
	server/Makefile.am, server/StreamProvider.cpp,
	server/StreamProvider.h, server/impl.cpp,
	utilities/processor.cpp: removed register_file_opener_callback()
	global call, added gnash::globals namespace with streamProvider
	default instance for the new StreamProvider class.
	* gui/sdlsup.h: don't attempt at including cairo.h
	if not using cairo rendered.
	* server/swf/ASHandlers.cpp: fixed compiler
	warnings, print value of failed target for
	callMethod tags.
	* server/MovieClipLoader.cpp, server/gnash.h,
	server/impl.cpp: create_movie() split to
	create_swf_movie() and create_jpeg_movie().
	The former will call one of the latters based
	on input stream magic number.
	* server/MovieClipLoader.cpp: fixed relative url resolution
	to use target's parent url, not target url.
	* server/gnash.h, server/impl.cpp: changed definition
	of file_opener_callback, create_movie and
	create_library_movie to take an URL parameter.
	* server/swf/tag_loaders.cpp, server/MovieClipLoader.cpp,
	server/action.cpp: updated to use new signatures of
	movie loaders.
	* backend/gnash.cpp, utilities/processor.cpp:
	updated file_opener signature, use curl_adapter
	when available.
	* server/movie_def_impl.{h,cpp}: changed
	read() method to return bool (false on error)

2006-05-15 Sandro Santilli <strk@keybit.net>

	* server/as_object.cpp: fixed compiler warnings.
	* libbase/: GnashException.h, Error.h, curl_adapter.cpp,
	URL.cpp: renamed gnash::Error to gnash::GnashException
	( we already had an Error class, modeling an ActionScript
	object )
	* libbase/URL.cpp: throw gnash::Error on error.
	* libbase/: Makefile.am, Error.h, curl_adapter.cpp:
	moved Error class to own file, and in gnash namespace.
	* server/: Makefile.am, as_value.cpp, action.cpp:
	moved as_value class implementation from action.cpp
	to as_value.cpp.
	* libbase/URL.{cpp,h}: refactored path normalization procedure
	to split path in components, remove unneeded ones and
	resolve back-references, removed all uses of <cstring>
	* testsuite/libbase/URLTest.cpp: added check.as-like macros,
	new tests for path normalization, changed expected paths
	for 'file' urls to always start with three slashes (file:///)

2006-05-14 Rob Savoye <rob@darkstar.welcomehome.org>

	* libbase/Makefile.am: Remove OPENGL_LIBS from _LIBADD, it causes
	OpenGL to hang on my Ubuntu system.
	* libbase/log.cpp: Add hexify() for printing numbers. Trap '\n'
	when coming in from log_msg() and convert to std::endl.
	* libbase/log.h: Add hexify().
	* server/Makefile.am: Add swf/ASHandlers to libgnashserver.
	* server/action.cpp: Remove old switch table for processing
	opcodes and use ASHandlers instead.
	* server/swf/tag_loaders.cpp: Add dbglogfile instead of
	log_msg().
	* server/swf/ASHandlers.cpp, ASHandlers.cpp: New file for SWF
	opcode handlers. These used to be part of action.cpp.

2006-05-14 Sandro Santilli <strk@keybit.net>

	* libbase/URL.{cpp,h}: handling of relative paths containing
	"../" components, handling of CWD-relative paths.
	* testsuite/libbase/URLTest.cpp: tests for "../"
	components in relative paths.

2006-05-13 Stefan Schweizer <genstef@gentoo.org>

	* libbase/Makefile.am: add CURL_LIBS and OPENGL_LIBS
	to libbase/Makefile.am, where it belongs.

2006-05-13 Sandro Santilli <strk@keybit.net>

	* configure.ac, testsuite/Makefile.am,
	testsuite/libbase/Makefile.am,
	testsuite/libbase/URLTest.cpp,
	testsuite/libbase/CurlStreamTest.cpp: unit
	testing for curl_adapter and URL class.
	* libbase/Makefile.am: add URL.{cpp,h} files
	* libbase/URL.{cpp,h}: initial implementation of
	an URL class.

2006-05-12 Sandro Santilli <strk@keybit.net>

	* utililites/Makefile.am, backend/Makefile.am: add CURL_LIBS.
	* libbase/Makefile.am: curl_adapter build.
	* Makefile.am: CURL config dump.
	* macros/curl.m4: libcurl detection macro.
	* libbase/curl_adapter.cpp, libbase/curl_adapter.h: initial
	implementation of a libcurl adapter for tu_file.

2006-05-12 Rob Savoye <rob@ripple.welcomehome.org>

	* configure.ac: Enable conditional for KDE.
	* gui/gnash.cpp: Reduce delay to 300 ms.
	* gui/gtk.cpp: Add support for configure event, so we can resize
	the viewport.
	* gui/gtk_glue_gtkglext.cpp: Unreference _glconfig and glcontext
	so Firefox doesn't crash.
	* gui/gtksup.h: Add unrealize event, remove resizeWindow.
	* gui/gui.cpp, gui/gui.h: Add method to resize the viewport. 
	* gui/kde.cpp: Use setGeometry() instead of resize(). Handle the
	resize event, and mouse events.
	* gui/kde_glue_opengl.cpp: Set the view so it's oriented
	correctly.
	* gui/kdesup.h: Add mouse event handlers.
	* gui/sdl.cpp, gui/sdlsup.h: Remove resizeWindow().
	* server/impl.cpp: Don't assert, return NULL if not initilized so
	we can use this to check the state.
	
	* gui/kde.cpp: New file for KDE support.
	* gui/kde_glue.h: New file for KDE support.
	* gui/kde_glue_opengl.cpp: New file for KDE support.
	* gui/kde_glue_opengl.h: New file for KDE support.
	* gui/kdesup.h: New file for KDE support.
	* gui/Makefile.am: Add support for Klash and KDE.
	* gui/gnash.cpp: Add support for building with KDE support.
	* gui/gtk.cpp: Use Gui class methods for movie control instead of
	having the code here.
	* gui/gtksup.h: run() now takes an argument.
	* gui/gui.cpp: Include movie_definition. Add methods for movie
	control. Move advance_movie() from gnash.cpp to here.
	* gui/gui.h: Add non virtual init() and createWindow(). Add static
	methods for movie control.
	* gui/sdl.cpp: run() now takes an argument.
	* gui/sdlsup.h: run() now takes an argument.
	
	* macros/glib.m4: Look for the internal config file in the lib dir
	in addition to the regular headers.
	* macros/gtk2.m4: Look for the internal config file in the lib dir
	in addition to the regular headers.
	* macros/gtkglext.m4: Look for the internal config file in the lib
	dir in addition to the regular headers.

	* configure.ac: Print a warning, not an error if Cairo or
	SDL_Mixer aren't installed. For bug #16560.
	* gui/*: Update to latest version of the Mozilla exemption.
	
	* configure.ac: Use AC_CONFIG_SRCDIR, and add the version number
	to AC_INIT. Define conditional for KDE. Add partial support to use
	kde and fltk as configure options to --enable-gui. Comment out
	visibility-inlines-hidden as it's unstable on some platforms.
	* macros/kde.m4: Define variables for conditional if KDE is
	installed.
	* plugin/klash/klash.cpp: Add code to replace SDL_GetTicks() so we
	don't have an SDL dependancy still.
	* server/Makefile.am: Don't have $OPENGL_LIBS in
	libgnashserver_la_LIBADD for now, for some reason it makes the
	executable not ever render an image if installed.

2006-05-12 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: Use GTK as the default GUI.
	* gui/gtk_glue.h, gui/gtk_glue_cairo.{cpp,h},
	gui/gtk_glue_gtkglext.{cpp,h}: Introduce an abstraction class
	for Gtkglext and "GtkCairo" which connect (glue) GTK to the OpenGL
	and Cairo renderers, respectively.
	* gui/Makefile.am: Build the appropriate glue.
	* gui/README: Deprecate the SDL-based Firefox plugin.
	* gui/{gnash.cpp,gui.h,sdl.cpp}: No longer handle the OpenGL LOD bias
	parameter. It is now handled in the glue class.
	* gui/{gtk.cpp,gtksup.h}: Migrate to the new glue.
	* gui/gui.h: No longer handle the OpenGL LOD bias parameter.
	* gui/sdl.cpp: Scale mouse event coordinates according to the movie
	scale.

2006-05-11 Stefan Schweizer <genstef@gentoo.org>

	* libbase/Makefile.am, server/Makefile.am, plugin/klash/Makefile.am:
	Link needed libraries which are needed to link with --as-needed.

2006-05-11 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp: removed compiler warnings.
	* server/movie_def_impl.h: improved doc of
	the read() method.
	* configure.ac: added --enable-gui switch,
	defined GUI_SDL or GUI_GTK
	* backend/gnash.cpp: make ue of GUI_* defines rather
	then HAVE_GTK2 ones (you can have GTK2 and still want
	SDL gui).
	* gui/gnash.cpp: don't realy on HAVE_* defines to
	set GUI_* ones, but use GUI_* defines from config.h

2006-05-10 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gtk_cairo_create.h: Introduce an implementation for
	gdk_cairo_create() when it's not available.
	* gui/gtk.cpp: Include gtk_cairo_create.h for GTK < 2.8.

2006-05-10 Sandro Santilli <strk@keybit.net>

	* gui/DESIGN: a few design notes about the new gui efforts
	* macros/gtkglext.m4: fix AC_DEFINE macros to include a value
	* configure.ac: don't complain about missing CAIRO when not required
	* gui/gtk.cpp: include cairo.h if RENDERER_CAIRO is defined
	* gui/gtksup.h: include cairo.h if RENDERER_CAIRO is defined
	* macros/cairo.m4: search cairo dev files even if plugin is disabled
	* macros/gtk2.m4: fixed handling of --with-gtk2-lib, fixed AC_DEFINE
	call to actually give a value to HAVE_GTK2 define (some code in
	backend/gnash.cpp would fail otherwise - #ifndef HAVE_GTK2 namely)

2006-05-10 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gnash.cpp: Remove unused includes and do small cleanups.
	* gui/{gtk.cpp,gtksup.h}: Only compile OpenGL code if we have OpenGL.
	* gui/gui.cpp: Remove unused includes.

2006-05-10 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: SDL is not a backend, so don't pretend it is one.
	* configure.ac, macros/{atk,glib.gtk2,pango}.m4: We still want to know
	if these packages are available if gtkglext isn't, so remove the
	gtkglext checks, and fix the indentation to match.

2006-05-10 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/swf/tag_loaders.cpp: Struct swf_event is declared in namespace
	gnash, not gnash::SWF::tag_loaders; move the implementation into
	namespace gnash.

2006-05-09 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/moviecliploader_test.c,
	testsuite/misc-ming.all/Makefile.am:
	moviecliploader_test fixed to build using the new media dir
	and to test both relative and absolute url, both jpeg 
	and swf medias.
	* testsuite/media/green.swf, testsuite/media/lynch.swf,
	testsuite/media/offspring.swf: added definejpeg2 swf
	versions of the corresponding jpeg files.
	* testsuite/misc-ming.all/definebits_jpeg2.c,
	testsuite/misc-ming.all/Makefile.am:
	use argument to definebits_jpeg2 to find jpeg.
	* testsuite/media: new dir for storing media files, moved
	jpegs from actionscript.all to this new dir
	* server/movie_definition.h: added get_url() virtual method
	* server/movie_def_impl.cpp, server/movie_def_impl.h:
	implemented get_url() method, added url argument to the
	read() method.
	* server/sprite_definition.h, server/sprite_instance.cpp:
	implemented get_url() method.
	* server/impl.cpp: updated movie_def_impl constructions to
	pass the url method.
	* server/xmlattrs.h: fixed compiler warning about %p format used
	for non-void pointer.
	* libbase/zlib_adapter.h: doxygen comments
	* server/stream.h, server/stream.cpp: doxygen comments
	* server/sprite_definition.h, server/sprite_definition.cpp,
	server/impl.cpp: modified sprite_definition constructor to
	automatically read the SWF stream.
	* server/swf: new swf directory for SWF parsing related classes.
	* server/swf/TagLoadersTable.{h,cpp}: new class modeling a
	table of tag loaders.
	* server/swf/tag_loaders.{h,cpp}: tag loaders extracted
	from impl.cpp file and grouped into the swf namespace.
	* server/impl.cpp: (define_shape_loader) symbolic names for
	tag types 
	* server/movie_def_impl.cpp, server/movie_def_impl.h:
	new CharacterDictionary class.
	* server/movie_definition.h: updated doxygen comments.
	* server/sprite_definition.h: update doxygen comments.
	* configure.ac: added misc-ming.all directory's Makefile;
	fixed name of debian package for gtk2 (libgtk2-dev => libgtk2.0-dev)
	* testsuite/Makefile.am: added misc-ming.all subdir,
	* testsuite/actionscript.all/Makefile.am: Removed ming-generated
	binaries rules (moved to misc-ming.all)
	* testsuite/misc-ming.all: new test directory for ming-generated
	test files.

2006-05-09 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: Compile with -fvisibility-inlines-hidden, if we're
	using gcc-4 or newer.

2006-05-09 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/gnash.cpp: Use the GTK backend by default; if GTK isn't
	available, fall back to SDL.
	* gui/{gtk.cpp,sdl.cpp}: Fix includes to match recent filename
	changes.

2006-05-08 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: Build with -ansi by default.
	* libbase/tu_types.h: No longer depend on SDL for the endianness
	macros.
	* all over the place: Switch to the int types from inttypes.h rather
	than SDL.h. This will allow us to remove the dependency on SDL when
	sound is disabled and a frontend for Gnash other than SDL is used.

2006-05-08 Sandro Santilli <strk@keybit.net>

	* server/as_value.h, server/button.h, server/impl.cpp,
	backend/render_handler_ogl.cpp:
	removed commas at end of enums (for -ansi)

2006-05-08 Bastiaan Jacques <bastiaan@bjacques.org>

	* libbase/tu_types.h: Use [u]int64_t rather than SDL 64-bit types.
	* all over the place: Use s[u]int64 (typedef'ed to [u]int64_t)
	rather than SDL 64-bit types. We can now compile with -ansi.

2006-05-08 Sandro Santilli <strk@keybit.net>

	* server/ASSound.h, server/Global.cpp, server/Global.h,
	server/Key.h, server/Makefile.am, server/Object.cpp,
	server/Object.h, server/action.cpp, server/action.h,
	server/as_member.h, server/as_object.cpp, server/as_object.h,
	server/as_prop_flags.h, server/as_value.h, server/gnash.h,
	server/movie_interface.h, server/ref_counted.h,
	server/textformat.cpp, server/textformat.h, server/types.cpp:

	* server/bitmap_character_def.h, server/character.cpp,
	server/character_def.h, server/character.h,
	server/generic_character.h, server/movie.h, server/ref_counted.h,
	server/resource.h, server/shape_character_def.cpp,
	server/shape_character_def.h, server/as_object.h, server/button.h,
	server/character_def.h, server/font.cpp, server/fontlib.cpp,
	server/gnash.h, server/impl.cpp, server/impl.h,
	server/Makefile.am, server/morph2.cpp, server/morph2.h,
	server/movie_def_impl.cpp, server/movie_def_impl.h,
	server/Object.h, server/shape.cpp, server/shape.h,
	server/styles.h, server/tesselate.h, server/text.cpp:
	new class files for as_member, as_object, as_prop_flags,
	as_value, character, shape_character_def, movie.

2006-05-07 Bernhard Rosenkraenzer <bero@arklinux.org>

	* plugin/klash/klash.cpp: include movie_definition.h
	instead of Movie.h

2006-05-07 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui/sdl.cpp, gui/sdlsup.h: implement an SDL frontend. Implemented
	backends are Cairo and OpenGL.
	* gui/gtk.cpp, gui/gtksup.h: shuffle some code around, integrate
	better with Gui class. Make event handlers work.
	* gui/Makefile.am: Enable the SDL frontend.
	* gui/gnash.cpp: Implement the remaining features from the old
	gnash.cpp; make the commandline options work.
	* gui/gui.cpp, gui/gui.h: Add some needed variables and methods. Do
	some cleanup.

2006-05-07 Sandro Santilli <strk@keybit.net>

        * server/Makefile.am, server/Object.h,
        server/bitmap_character_def.h, server/button.h,
        server/character_def.h, server/generic_character.h,
        server/gnash.h, server/impl.cpp, server/impl.h, server/morph2.cpp,
        server/movie_def_impl.cpp, server/movie_def_impl.h,
        server/ref_counted.h, server/resource.h, server/shape.cpp,
        server/shape.h, server/styles.h: new class files for
	bitmap_character_def, character_def, generic_character,
	ref_counted and resource
	* renamed Movie.{h,cpp} to MovieClip.{h,cpp}
	* server/Makefile.am, server/Movie.cpp, server/Movie.h,
	server/Sprite.cpp, server/Sprite.h,
	server/impl.cpp, server/impl.h,
	server/sprite_definition.cpp, server/sprite_definition.h,
	server/sprite_instance.cpp, server/sprite_instance.h,
	backend/gnash.cpp, server/ASSound.cpp, server/Global.cpp,
	server/MovieClipLoader.cpp, server/action.cpp, server/button.cpp,
	server/font.cpp, server/fontlib.cpp, server/gnash.h,
	server/morph2.cpp, server/movie_def_impl.cpp,
	server/movie_def_impl.h, server/movie_definition.h,
	server/movie_interface.h, server/movie_root.cpp,
	server/movie_root.h, server/sound.cpp, server/styles.cpp,
	server/text.cpp, utilities/processor.cpp: 
	sprite_instance and sprite_definition are now real classes
	and are defined in their own files, named after the class
	themselves, same split for Movie.h file.

2006-05-05  Rob Savoye  <rob@ripple.welcomehome.org>

	* plugin/plugin.cpp: Don't compare supportsXEmbed to PR_TRUE.
	* packaging/redhat/gnash.spec: Make a gnash-klash package instead
	of just klash.
	* README: Update version number and date.

2006-05-04 Sandro Santilli <strk@keybit.net>

	* server/MovieClipLoader.cpp: cleanly handle
	attempts to load an external jpeg (complain
	rather then crash - see bug #15762

2006-05-03 Sandro Santilli <strk@keybit.net>

	* configure.in: accept OpenGL and Cairo args to
	--enable-renderer, as advertised in the help string.
	Print selected renderer in summary. Fixed a couple
	of typos.

2006-05-04 Bastiaan Jacques <bastiaan@bjacques.org>

	* gui: Add a very initial implementation of the frontend (gui)
	library, which has a replacement for backend/gnash.cpp. The gui
	subdirectory has not yet been enabled.

2006-05-03  Tomas Groth Christensen  <tomasgroth@yahoo.dk>

	* server/Makefile.am: Compile ASSound.{cpp,h} instead of Sound.{cpp,h}

2006-05-03 Patrice Dumas <pertusus@free.fr>

	* doc/C/Makefile.am:  use $< instead of gnash.info for for
	install such that gnash.info from srcdir may be used; replace
	/sbin/install-info by install-info everywhere 
	* plugin/player.h: distribute player.h

2006-05-03 Sandro Santilli <strk@keybit.net>

	* server/array.cpp: removed compiler warnings
	* server/: Sound.cpp => ASSound.cpp, Sound.h => ASSound.h

2006-05-02 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: Add --enable-renderer={opengl,cairo}.
	* backend/Makefile.am, backend/gnash.cpp, server/gnash.h:
	Compile and use Cairo if requested.

2006-05-02 Timothy Lee <<timothy.lee@siriushk.com>

	* render_handler_cairo.cpp: Initial Cairo renderer backend
	implementation.

2006-04-30 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/gnash.cpp: Use the right signal name.

2006-04-29 Bastiaan Jacques <bastiaan@bjacques.org>

	* backend/{gnash.cpp,gtksup.cpp,gtksup.h}: Add a gtkgl
	unrealize_event handler which facilitates destruction of
	some gdkgl objects. This fixes shutdown leaks.

2006-04-28 Sandro Santilli <strk@keybit.net>

	* server/array.cpp: fixed bug in copy constructor.
	* server/Function.cpp, server/Function.h: added
	isBuiltin() public method and new constructor as
	a better support for built-in classes (I think we
	really need an abstract class and two derivates for
	user defined functions and built-in classes).
	* server/action.cpp: changed doActionNew to handle
	construction of built-in classes.
	* server/System.cpp, server/System.h, server/array.cpp,
	server/array.h: ported to new built-in class construction
	mechanism. Optimized and embellished as_array_object::join()
	method, inspired by Bastiaan :)

2006-04-28 Rob Savoye <rob@darkstar.welcomehome.org>

	* README: Add comments about runing autogen.sh and configure for
	bug #16451.
	* doc/C/sources.xml: Add comments about runing autogen.sh and
	configure for bug #16451.

2006-04-27 Rob Savoye <rob@wharfrat.welcomehome.org>

	* configure.ac: Comment out warnings about FLTK and Xft, these are
	only used by code under development for now.
	* macros/jpeg.m4: Make sure the head exists, not the lib before
	runing lib tests.
	* utilities/Makefile.am: Add PTHREAD_LIBS.


2006-04-27 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/Key.cpp: Stop using cleanup_listeners(). Use
	iterators instead of array indexing for listeners. Use
	C++-style rather than C-style casts.
	* server/Key.h: Remove cleanup_listeners().

2006-04-27 Stefan Schweizer <genstef@gentoo.org>

	* plugin/klash/Makefile.am: added KDE_LDFLAGS to AM_LDFLAGS.

2006-04-27 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/array.as: turned length()
	method calls to length data member accesses, completed
	switch to check_equals() macro usage, removed .pop() calls
	in macro args (would have unexpected results when macro fails).
	* server/: (Function.h, Function.cpp): added new constructor
	taking exported interface as argument.
	* server/: (System.cpp, System.h, Global.cpp): added System
	AS class registration, System.capabilities.version
	implementation and scheleton for AS instanciation of it
	(the latter being untested).
	* doc/C/internals.xml: added note about check_equals() macro
	under testing section.
	* server/: (Sound.cpp, Sound.h): added missing files
	* server/: (array.cpp, array.h): big cleanup, provided
	overrides for get_member() and set_member() to add support
	for the special 'length' element, turned array_as_object into
	a real class, enabled support for class-statics.
	* server/: (Object.cpp, Object.h): moved get_member
	and set_member to get_member_default and set_member_default
	with protected access level, provided public virtuals
	invoking the protected non-virtuals. This is to allow cleaner
	hooking for ActionScript classes.

2006-04-26  Timo Lindfors <timo.lindfors@iki.fi>

	* testsuite/actionscript.all/Boolean.as: added some
	simple checks for toString() and valueOf() methods.

2006-04-26  John Radio Gilmore  <gnu@radio.toad.com>

	* doc/C/sources.xml:  Fix typos, update misc build info.

2006-04-26 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/check.as: added check_equals()
	macro.
	* testsuite/actionscript.all/Global.as: example usage of
	the check_equals() macro.
	* server/gen-files.sh: fixed escaping in sed code
	* testsuite/actionscript.all/array.as: more use
	of the check_equals() macro
	* testsuite/actionscript.all/Makefile.am: fixed a bug
	in the v8-online-tests rule
	* server: Global.cpp, Global.h, Key.cpp, Key.h,
	Makefile.am, Math.cpp, Math.h, action.cpp, action.h,
	array.cpp, array.h: more code splitting.

2006-04-25  Rob Savoye  <rob@darkstar.welcomehome.org>

	* packaging/debian/changelog: Reverse the order of entries so it
	it uses the right GPG key for packages.
	* packaging/debian/control: Fix cut & paste error in Depends
	list.
	* packaging/debian/gnash-klash.install: Add klash executable.
	* server/shape.cpp: Support alternate tag value
	
	* plugin/klash/klash.cpp: Add player control menu for the right
	mouse button.
	* plugin/klash/Makefile.am: Build a MOC file for klash.cpp.
	
	* packaging/debian/gnash-klash.install: Add the klash executable.
	* packaging/redhat/gnash.spec: Add the klash executable.
	
	* libbase/jpeg.cpp: Add support for grayscale jpegs.
	* plugin/klash/Makefile.am: Add klash executable.
	* plugin/klash/klash.cpp: Build a KDE version of the standalone
	player for Konqueror.

2006-04-25 Bastiaan Jacques <bastiaan@bjacques.org>

	* libbase/smart_ptr.h: Introduce noref_ptr, a smart pointer without
	reference counting.

2006-04-24  Rob Savoye  <rob@ripple.welcomehome.org>

	* All GPL'd files: Update Mozilla copyright exemption to the
	latest version.

2006-04-24  Timothy Lee  <timothy.lee@siriushk.com>
	
	* libbase/image.cpp: Remove read_swf_jpeg2(), it's unnecessary now
	that read_jpeg() reads multiple headers.
	* libbase/jpeg.cpp: Read a jpeg with with multiple headers
	correctly.
	* server/impl.cpp: Call read_jpeg() instead of read_swf_jpeg2().

2006-04-23  Bastiaan Jacques  <bastiaan@bjacques.org>

	* server/Movie.cpp, server/Movie.h, server/Object.h,
	server/font.h, server/morph2.h, server/shape.h,
	server/stream.h, server/styles.h: Switch structs to classes.

2006-04-23  Bastiaan Jacques  <bastiaan@bjacques.org>

	* server/Movie.h: make movie_def_impl a friend of import_info.
	* server/Movie.cpp: adjust the users of import_info to match
	changes to Movie.h.

2006-04-22  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/omf.make: Rename omf-hook to be more consistant.
	* doc/xmldocs.make: Set enable-ghelp and enable-docbook together.
	* doc/C/Makefile.am: Use /sbin/install-info. Don't try to run
	install-info if it doesn't exist.
	* packaging/redhat/gnash.spec: Remove the info/dir file.

	* macros/atk.m4: Look for libraries in /usr/X11R6/lib, and headers
	in /usr/X11R6/include.
	* macros/gtk2.m4: Look for libraries in /usr/X11R6/lib, and
	headers in /usr/X11R6/include.
	* macros/gtkglext.m4: Look for libraries in /usr/X11R6/lib.
	* macros/pango.m4: Look for libraries in /usr/X11R6/lib.
	
	* macros/fltk.m4: Look in X11R6 for headers.
	* macros/gtkglext.m4: Look in X11R6 for headers.
	* macros/pango.m4: Look in X11R6 for headers.
	* macros/sdl.m4: Find SDL on FreeBSD where vesion SDL11 is used
	instead of SDL-1.1.

2006-04-22  Bastiaan Jacques  <bastiaan@bjacques.org>

	* server/Movie.h: Make the import_info struct a proper class.
	* server/Movie.cpp: Adjust the users of import_info to match
	changes to Movie.h.
	
2006-04-21  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* packaging/redhat/gnash.spec: Install the dir file so the rpm
	builds.
	
	* doc/C/Makefile.am: Handle the different options the different
	versions of install-info support.
	
	* doc/C/Makefile.am: Create the info dir if it doesn't exist.
	* packaging/debian/changelog: Add new entry and up the version.
	* packaging/redhat/gnash.spec: Up the minor version. Install the
	info file.
	
	* packaging/debian/rules: Don't attempt to apply a patch that
	doesn't exist. Install the info file.
	* packaging/redhat/gnash.spec: Install the info file too.
	* plugin/Makefile.am: Add npplat.h to the dist target.
	* plugin/plugin.cpp: Don't include player.h, it's unused these
	days.
	
	* doc/xmldocs.make: Add the hook for installing and uninstalling
	the info file.
	* doc/C/Makefile.am: Install the info file.

2006-04-20  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/font.cpp: Delete the pointer the proper way.
	* doc/C/gnash-man.xml: Add the -j and -k options to the man page.
	
	* README: Clarify that no event handling means mouse clicks don't
	work with the SDL version of the plugin.
	* doc/C/internals.xml: Clarify that no event handling means mouse
	clicks don't work with the SDL version of the plugin.
	* doc/C/plugin.xml: Clarify that no event handling means mouse
	clicks don't work with the SDL version of the plugin.
	
	* libbase/triangulate_impl.h: Use the z modifier when printing a
	size_t.
	* plugin/plugin.cpp: Define start and end as a size_t, not an
	unsigned int.

	* configure.ac: Add FLTK. Don't create mozilla-sdk/Makefile.
	* Makefile.am: Add a dumpconfig target to see what configure
	found.
	* macros/fltk.m4: New configure tests for FLTK toolkit.
	* packaging/redhat/gnash.spec: Don't build libmozsdk, it's now
	part of the plguin.
	* plugin/Makefile.am: Build the sources in mozilla-sdk as part of
	the plugin, rather than as an additional shared library.
	* server/array.cpp: Use the z modifier when printing a size_t.
	* server/button.cpp: Use the z modifier when printing a size_t.
	* server/fontlib.cpp: Use the z modifier when printing a size_t.
	* server/shm.cpp: Use the z modifier when printing a size_t.
	* server/xmlnode.cpp: Use the z modifier when printing a size_t.
	* server/sound_handler_mp3.cpp: Remove unused variable.

2006-04-19  Bastiaan Jacques <bastiaan@bjacques.org>

	* server/action.cpp: fixed compiler warnings.

2006-04-18  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/gnash.cpp: Turn off sound by default, since it doesn't
	work yet, and it grabs the sound device preventing other programs
	from working. Delete the gnash-dbg.log file if we don't want it
	writing to disk. Add -u option to set the root URL when navigating
	web pages with frames.

2006-04-15  Sandro Santilli  <strk@keybit.net>

	* backend/gnash.cpp: verbose SDL_SetVideoMode() failure message.

2006-04-11  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Check for a SDL, SDL_Mixer, and Gstreamer based on
	whether the library exists, not the headers. Comment out Gstreamer
	warning for now, it's not used anyway.
	* macros/gstreamer.m4: Remove extraneous setting of
	ac_cv_path_gstreamer_incl. Remove extraneous MSG_RESULT.
	* macros/gtk2.m4: Remove extraneous setting of
	ac_cv_path_gtk2_incl. Check for the versioned directory before the
	unversioned directory.
	* macros/gtkglext.m4: Remove extraneous setting of
	ac_cv_path_glext_incl. Remove extraneous MSG_RESULT.
	* macros/pango.m4: Always add the library name if we have a legit
	path.
	* macros/sdl.m4: Remove extraneous MSG_RESULTs.
	* server/action.cpp: Tweak the test for getURL() to include https
	as well as http.

2006-04-10  Sandro Santilli  <strk@keybit.net>

	* server/action.cpp: fix compiler error in as_global_parseint()

2006-04-10  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/action.cpp: It the url for getUrl() starts with a
	"http:", then remotely tell firefox to load the page.

2006-04-09  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/klash/klash_part.cpp: Use the new options to set the
	window size of the browser window correctly.
	* server/NetConnection.cpp: Catch trying to access a URL that is
	set to "null", instead of zero.
	* packaging/debian/gnash-klash.install: Add klash_part.desktop to
	the package.
	* packaging/debian/control: Add more dependancies.
	* doc/C/gnash-C.omf: Install in "Sound and Video" instead of
	Multimedia.

2006-04-07  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* packaging/debian/: Add packaging files. 

	* macros/kde.m4: Also look for QT with qt-3.3 as well as qt3.
	* README: minor typo corrections.
	* packaging/redhat/gnash.spec: Build klash, add additional
	dependancies, and tweak till it works.

2006-04-07  Patrice Dumas <pertusus at free.fr>

	* macros/ghelp.m4: Don't warn if the user doing ./configure
	isn't root.
	* doc/omf.make, doc/xmldocs.make, doc/C/Makefile.am: use '-hook'
	targets for omf files installation, and '-local' targets for xml
	files installation. Remove intermediate useless targets. If ghelp
	isn't enabled, disable only the omf files installation. Remove
	the @ in front of make rules.

2006-04-06  Rob Savoye  <rob@wharfrat.welcomehome.org>
	
	* backend/gnash.cpp: Make width and height global variables.
	* backend/gtksup.cpp: Reset the width and height global variables
	when we get a configure event, as the window has been resized.

2006-04-05  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Fix --disable-xml option.
	* macros/firefox.m4: Don't use the mozilla or firefox config
	script to get the path to install the plugin. Check the users
	home directory and install there in the plugins directory.
	* macros/libXML.m4: Don't do anything if XML support is disabled.
	* macros/opengl.m4: Adjust how the libray path gets set so we
	don't wind up with a path with no -L option.

2006-04-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/Makefile.am: Don't use ../backend in the path to
	libgnashbackend.la, as it causes problems with parallel
	builds using -j.

	* macros/libXML.m4: Don't configure XML if it's disabled.

2006-04-04  John Gilmore  <gnu@toad.com>

	* README:  Add more basic information.  Thank contributors.
	* server/{xmlsocket.cpp, MovieClipLoader.cpp, Sprite.cpp,
	  network.cpp, shape.cpp}:  Lint.
	* backend/gnash.cpp:  Revise --version and --help for GNU Coding
	  Standards.
	* plugin/player.cpp:  Lint.
	* plugin/plugin.cpp:  Describe the plugin more fully.  It's the
	  GNU Flash Player.  Add copyright notice, version number, more
	  links.

2006-04-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/gnash.cpp: Add -j and -k options to set the width and
	height of the window. This is used only by the plugin. Uncomment
	gtk_plug() code, it works now! If the window ID is set, don't set
	the window size again.
	* plugin/plugin.cpp: Always return the value when Mozilla
	asks. Add -j and -k options to set the window size for the player
	instead of letting it default to the movie size.
	* libbase/image_filters.cpp: Add struct name to eliminate
	warning.
	* macros/gstreamer.m4: Change where the -I and -L gets added.
	* macros/opengl.m4: Change where the -I and -L gets added.
	* plugin/mozilla-sdk/pluginbase.h: Add a destructor to eliminate
	warnings.
	* testsuite/actionscript.all/Makefile.am: Add the test case source
	files to the distribution tarball. Include the generated swf
	movies so people don't need Ming installed to have "make check"
	work.

2006-04-02  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* gnash/Makefile.am: Move libamf to DIST_SUBDIRS, since it's not
	really used yet anyway. Tweak the path for building deb and rpm
	files.
	* doc/C/Makefile.am: Don't error out if Makeinfo has problems.

2006-04-02  Rob Savoye  <rob@cree.moongulch.net>

	* doc/C/gnash-man.xml: Add the -x and -w options.
	* doc/C/gnash.xml: Rewrite overview and intro chapter.

	* doc/C/gnash.xml: Add a constant for the opcodes chapter. Add -w
	option to list of command line options. 
	* doc/C/sources.xml: Add new dependancies, gtkglext, atk, pango,
	cairo, glib, gtk2, gstreamer 0.10, and kde. Update plugin
	section. Add all the new configure options of the last few
	months.
	* doc/C/internals.xml: Change the names of the libraries to match
	current versions. Add asobjs, plugin, and klash libraries. Update
	plugin section. Add info about GUI toolkit usage. Add section on
	Klash. 
	* doc/C/opcodes.xml: New chapter on opcodes that lists what's
	still unimplemented.
	* doc/C/localconnection.xml: Update text. Add section about AMF.
	* doc/C/plugin.xml: Add section on plugin event handling.
	* libbase/Makefile.am: Optionally compile the demo.
	* libbase/demo.cpp: Add the demo namespace and open ogl.

2006-03-31  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/atk.m4: Fix finding the proper path with the version
	number.
	* macros/glib.m4: Fix finding the proper path with the version
	number.
	* macros/pango.m4: Fix finding the proper path with the version
	number.

	* Makefile.am: Add libamf and plugin to STD_DIRS.
	* configure.ac: Call KDE_SET_PREFIX to set KDECONFIG.
	* doc/C/Makefile.am: Change the invocation of db2_teximl for
	version 0.8.5. Also change the file name the gets renmoved, so
	make it part of the conditional test.
	* macros/kde.m4: Fix KDE_SET_PREFIX to not trash the value of
	$prefix.
	* plugin/klash/Makefile.am: Fix how the moc file gets built and as
	a dependancy.
	* plugin/mozilla-sdk/Makefile.am: Add all the headers to
	noinst_HEADERS so makedistcheck works.
	
2006-03-30  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/Makefile.am: Pass in the prefix as a constant so we can
	use it to find the Gnash executable from within the plugin.
	* gnash.cpp: For now, ignore command line arguments with a equal
	sign in them.
	* plugin/plugin.cpp: Build the argv array correctly so we don't
	core dump Firefox. Use a GNASH_PLAYER environment variable, or the
	configured exec_prefix to find the gnash executable to fork.
	* plugin/plugin.h: Also store the childpid and the process name.
	* configure.ac: Add options to toggle between forking the
	standalone player and using a thread.
	
2006-03-30 Petter Reinholdtsen <pere@hungry.com>

	* libamf/Makefile.am: Remove -Wall, it's set in configure.ac now.
	* libbase/triangulate_impl.h: Add const to some type casting.
	* libbase/tu_file.cpp: Remove const from *_tell_func API.
	* libbase/tu_file.h: Remove const from *_tell_func API.
	* libbase/tu_file_SDL.cpp: Remove const from *_tell_func API.
	* libbase/zlib_adapter.cpp: Remove const from *_tell_func API.
	* libgeometry/geometry.h: Swap static and const, they're in the
	wrong order.
	* libgeometry/kd_tree_packed.cpp: Use unsigned interger to compare
	to the result from size() for an STL container.
	* server/Makefile.am: Remove -Wall, it's set in configure.ac now.
	* server/action.cpp: Add const to definition of character
	pointer.
	* server/dlist.cpp: Add const when casting display_object_info.
	* server/network.cpp: Return false for now if
	Network::createClient is called with only the port number.
	* server/shape.cpp: Use const when casting nmesh)_set.
	* server/sound_handler_mp3.cpp: Use unsigned interger to compare
	to the result from size() for an STL container.
	* server/xml.cpp: Define the niodename before using it.
	* server/xmlnode.cpp: Return NULL if we can't return an object
	pointer.
	* utilities/Makefile.am: Add MP3_LIB to the linker list.

2006-03-29  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/Makefile.am: Include the backend directory in the include
	paths.
	* plugin/player.cpp: Nuke the SDL support and start replacing it
	with GTK2. This file is currently unused as the standalone player
	is used instead.
	* plugin/plugin.cpp: Support GTK2 and GTKGLExt if they exist for
	the plugin. Fork the plugin instead of using a thread. Enable
	XEmbed.
	* plugin/plugin.h: XSync after setting the context.
	* plugin/klash/Makefile.am: Move klash_part.moc to _SOURCES.
	* plugin/mozilla-sdk/Makefile.am: We don't need the FIREFOX_DEFS
	now.

2006-03-29  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Add --enable-lotsa-warnings, to turn on many more
	warning messages. By default only -Wall is used when using
	GCC. Based on a patch by Petter Reinholdtsen <pere@hungry.com>

2006-03-28  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* README: Add text from web site about the mailing lists, and
	where to submit bug reports and patches.
	* configure.ac: Use $glext instead of $plugin for GTK.
	* backend/Makefile.am: Add new files gtksup.h and gtksup.cpp.
	* backend/gtksup.{h,cpp}: New files for GTK menu and event support.
	* backend/gnash.cpp: Use GTK2 and GtkGLExt if they exist. Use GTK
	event handlers and menus. Default to SDL.
	* libbase/Makefile.am: Don't both to build the demo.
	* libbase/image_filters.cpp: Add debugging trace messages.
	* libbase/log.{h,cpp}: Handle just a single char.
	* libgeometry/Makefile.am: Add the library paths.
	* macros/atk.m4: Define ac_cv_path_atk_lib correctly for when we
	do find it in the list of paths. 
	* macros/cairo.m4: Don't do anything unless $glext is enabled.
	* macros/firefox.m4: Don't do anything unless $plugin is enabled.
	* macros/ghelp.m4: Move the conditional.
	* macros/glib.m4: Define ac_cv_path_glib_lib correctly for when we
	do find it in the list of paths. 
	* macros/gstreamer.m4: Add error message if only the older
	gstreamer version is found. 0.10 is required.
	* macros/gtk2.m4: Don't do anything unless $glext and $plugin are
	enabled. Define the library names with the version or we get the
	wrong one.
	* macros/gtkglext.m4: Enable by default, but support --disable.
	* macros/opengl.m4: Define ac_cv_path_opengl_lib correctly for when we
	do find it in the list of paths. 
	* macros/pango.m4: Define ac_cv_path_pango_lib correctly for when we
	do find it in the list of paths. 
	* server/shape.cpp: Reformat into GNU style.
	* server/styles.cpp: Reformat into GNU style.
	* utilities/Makefile.am: Add the graphics libraries.

2006-03-20  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/Makefile.am: Optionally use dblatex or pdfxmltex to build
	PDFs if FOP doesn't exist.
	* macros/docbook.m4: Also look for dblatex and pdfxmltex.

2006-03-19  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac, macros/gstreamer.m4: Look for Gstreamer.

2006-03-18  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/Movie.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* server/Sprite.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* server/dlist.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* server/impl.h: Add GNASH_REPORT_FUNCTION to some functions.
	* server/morph2.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* server/shape.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* server/text.cpp: Add GNASH_REPORT_FUNCTION to some functions.
	* plugin/mozilla-sdk/include/{prcvar.h, prerr.h, prerror.h,
	prinit.h, prinrval.h, prlock.h, prthread.h, prwin16.h}: New files
	copied from Firefox so we can use NSPR without Firefox sources.
	* backend/gnash.cpp: Add -w option to enable producing the disk
	based log file, instead of enabling it by default as it can get
	huge. This log is only useful to developers. This disk log *is*
	produced by default when using the plugin.
	* libbase/log.h: Add a log_trace() function that works like
	GNASH_REPORT_FUNCTION, but also prints the pointer of the current
	instance. Useful for debugging multi-threaded programs. Tracing
	now always prints to the disk file, and only the terminal display
	is controlled by the verbosity level.
	* libbase/log.cpp: Add a log_trace() function that works like
	GNASH_REPORT_FUNCTION, but also prints the pointer of the current
	instance. Useful for debugging multi-threaded programs. Tracing
	now always prints to the disk file, and only the terminal display
	is controlled by the verbosity level. Strip the CR from messages
	passed to the log_* wrapper and replace it with a endl so the
	timestamps work for all the old messages too.
	* server/types.cpp: Small fix to color matrix loading, /256.0
	instead of /255.0/
	* plugin/player.cpp: Use Mozilla NSPR API for mutexes, threads and
	condition variables instead of SDL. For now, only play the movie
	once.
	* plugin/plugin.cpp: Use Mozilla NSPR API for mutexes, threads,
	and condition variables instead of SDL.
	* plugin/plugin.h: Use Mozilla NSPR API for mutexes, threads, and
	condition variables instead of SDL.

2006-03-18  Tomas Groth Christensen  <tomasgroth@yahoo.dk>

	* backend/sound_handler_sdl.cpp: Make mp3-support depend on
	HAVE_MAD_H instead of GAMESWF_MP3_SUPPORT.
	* macros/docbook.m4: Include the J2REDIR enviroment variable
	in the list of where java could be.
	
2006-03-17  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/button.cpp: Clear() m_actions after resizing when
	destructing a button. Bug #16105

2006-03-11  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/Makefile.am: Add logging.xml.
	* libbase/log.h: Only print TRACE messages at verbose level 2. Add
	getVerbosity() accessor.
	* server/impl.cpp: Add fixme_loader(), and set the unimplemented
	tags to that so we know when we hit one.
	* server/impl.h: Add prototype for fixme_loader().
	* server/text.cpp: Clean up warning message.

	* doc/C/internals.xml: Add section on the new debug logging
	system. 
	* doc/C/logging.xml: New section on the new debug logging
	system.

	* utilities/Makefile.am: Add libxml flags and libs.
	* utilities/parser.cpp: Use getopt for processing command line
	arguments. Reindent to project coding standards. Add GNU standard
	options. Use new logging system, delete the old one.
	* utilities/processor.cpp: Use getopt for processing command line
	arguments. Reindent to project coding standards. Add GNU standard
	options. Use new logging system, delete the old one.
	* backend/gnash.cpp: Use getopt for processing command line
	arguments. Add GNU standard options. Use new logging system,
	delete the old one.
	* libbase/tu_file.h: Reformat to be more readable.
	* libbase/tu_file.cpp: Reformat to be more readable.

2006-03-10 Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/log.h: Moved to libbase.
	* server/log.cpp: Moved to libbase.
	* libbase/log.h: Add support for an STL streams based interface to
	the C based API for debugging messsages. 
	* libbase/log.cpp: Add support for an STL streams based interface to
	the C based API for debugging messsages. 
	* backend/gnash.cpp: Add support for new logging system, delete
	old callback system.
	* backend/render_handler_ogl.cpp: Cleanup some formating.
	* libbase/Makefile.am: Add log.h and log.cpp.
	* server/Makefile.am: Remove log.cpp and log.h.
	* server/xml.cpp: Use the new debugging macros.
	* utilities/Makefile.am: Add XML flags and libs.
	* utilities/parser.cpp: Add support for new logging system, delete 
	old callback system.
	* utilities/processor.cpp: Add support for new logging system,
	delete old callback system.

2006-03-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Make using XML the default.

2006-03-10  Rob Savoye  <rob@cree.moongulch.net>

	* plugin/Makefile.am: Use DESTDIR when making directory.
	* mkinstalldirs: Add so we have it when not using the install
	utility (using libtool) to make directories.
	* utilities/Makefile.am: Add ZLIB_LIBS to ldflags.

2006-03-09 Michael Carlson <corfe83dev@gmail.com>

	* server/array.cpp: Add TODO to make sort constants static
	* server/Date.h: Add functions convertTM, setFromTM, Normalize
	(for internal use), improve comments on utility functions
	* server/Date.cpp: Implement getTime, setUTC functions, fix 
	problem with regular Set functions, fix return values on
	several functions, add comments, TODOs, asserts, and fix a typo

2006-03-09  Rob Savoye  <rob@cree.moongulch.net>

	* backend/Makefile.am: Add ZLIB_LIBS to LDFLAGS.

	* All GPL'd files: Updated the copyright message in all GPL'd
	files with the new Mozilla exemption as crafted by the FSF. This
	enables Gnash to be used in Mozilla without requiring all the
	other plugins to be GPL'd.

2006-03-09 Michael Carlson <corfe83dev@gmail.com>

	* server/Date.cpp: Implement all Date::getUTC functions, convert	
	to tab indenting, create convertUTC() for internal use, 
	implement a sane (but probably non-standard) Date::toString
	* server/Date.h: Add Date::convertUTC function for internal use,
	convert to tab indenting

2006-03-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Make using XML the default.

2006-03-08 Michael Carlson <corfe83dev@gmail.com>

	* backend/gnash.cpp: Fix typo in and add newline to error message
	Avoid infinite loop and make gnash still poll for SDL events when
	libxml is not present
	* server/Date.cpp: Implement Date::gettimezoneoffset, all the 
	basic "set" functions, cleanup messages to user a bit, rename
	set() to setDate(), in accordance with two unofficial references
	* server/Date.h: Add minutesEast variable to store timezone,
	rename set() to setDate()
	* server/array.cpp: Add some constants related to sorting

2006-03-07  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/plugin.xml: New file for internals on writing Mozilla
	plugins.
	* doc/C/internals.xml: Include new plugin section.
	* doc/C/Makefile.in: Add plugin.xml to the list of doc chapters.

2006-03-07  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/plugin.xml: New file for internals on writing Mozilla
	plugins.
	* doc/C/internals.xml: Include new plugin section.
	* doc/C/Makefile.in: Add plugin.xml to the list of doc chapters.

2006-03-06  Rob Savoye  <rob@cree.moongulch.net>

	* server/shm.cpp: Clear up ifdef mess... Both shm_open() and
	shmget() use file descriptors.

2006-03-05  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/Date.cpp: If we don't have gettimeofday, use
	ftime instead.
	* server/shm.h:  Add support for win32 shared memory.
	* server/shm.cpp: Add support for win32 shared memory.
	* server/network.h: Add support to use winsock.
	* server/network.cpp: Add support to use winsock.
	* configure.ac: Add tests for sysconf(), shmget(), shmat(),
	mmap(), gettimeofday(), socket(), CreateFileMapping(), and
	winsock.h. This covers all the differences between mingw builds
	and native unix builds.
	* libbase/container.h: Don't use pthread hack for BSD whcn cross
	compiling with mingw.
	* libbase/utility.h: Don't define windows specific assert()
	replacement when using mingw.
	* libgeometry/kd_tree_dynamic.cp: Include wctype.h and wchar.h to
	shut up mingw.
	
	* server/action.cpp (gnash): Replace isblank() with testing for
	space and tab so it compiles with mingw32.

	* macros/kde.m4: Use our zlib tests, not the KDE one because the
	Gnash test works when cross compiling.

2006-03-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* Makefile.am: Always build the plugin now.
	* configure.ac: Look for stdint, which is used by some old BSDs
	that for the Mozilla header files. Arg. Don't use AC_CHECK_FUNCS
	for finite and isfinite, try to compile code. On some systems
	these are functions, and on some they're constants, so this covers
	both cases to return a meaningful result. We always build the
	plugin now, so having firefox-config isn't a failure anymore.
	* libbase/dlmalloc.h: Move USE_DL_MALLOC ifdef up a few lines. 
	* macros/firefox.m4: Add new macro to replace the old one, which
	is renamed. Turns out none of the flags from mozill-config are
	needed, so only find the path to install the plugin.
	* macros/kde.m4: Turn more errors into notices so the build
	doesn't stop if KDE parts aren't installed. We only want to use
	them if building klash. Optionally skip some tests if klash isn';t
	installed. Otherwise they get set if they're installed even if
	you aren't building klash.
	* plugin/Makefile.am: Don't use the DEFS from firefox-config,
	only MOZ_X11 is needed by the SDK. Add include path to our own
	Mozilla headers.
	* plugin/mozilla-sdk/Makefile.am: Add include path to our own
	Mozilla headers.
	* servers/Object.h: Reverse ifdef test for HAVE_FINITE so it works
	even with configure errors.
	* plugin/mozilla-sdk/include: Copy critical header files from
	Firefox sources so you don't need the development packages
	installed, nor do you need fierfox-config, which isn't included at
	all in some distributions.
	
	* macros/docbook.m4: Patch from Pavekl Roskin <proski@gnu.org>, to
	fix configure test error.
	* macros/libXML.m4: Patch from Pavekl Roskin <proski@gnu.org>, to
	correctly use xml2-config, instead of pkg-config.

	* plugin/player.cpp: Define NO_NSPR_10_SUPPORT so we don't have
	header file typedef conflicts. We don't care about the older NSPR
	10 anyway...

2006-03-03  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/klash: Build klash, a Gnash customized Konquerer plugin
	that works similar to MozPlugger. Contributed by Koos Vriezen
	<koos.vriezen@gmail.com>.
	* configure.ac: Add Klash support, which optionally invokes a
	bunch of KDE tests. Add --enable-klash to build Konquerer plugin.
	* macros/kde.m4: KDE config macros that seem to be a default
	collection. These have been tweaked so the errors if QT or KDE
	isn't found are removed. This is done later in configure.in, and
	we want to build all the other code on systems without KDE.
	* plugin/mozplugger:  Add patch to add Gnash support to
	MozPlugger.
	* plugin/klash/README, klash.desktop, klash_part.cpp,
	klash_part.desktop, klash_part.h, klashpartui.rc,
	klashplayer.lsm, klashrc, pluginsinfo: New files from contributed
	Konquer plugin (works similar to MozPlugger)

2006-03-02  Rob Savoye  <rob@cree.moongulch.net>

	* plugin/plugin.cpp: Always lock the display before locking X. Add
	the locking to the function calls themselves, rather than wrapping
	all the function calls. Add debug background thread for now. We
	don't need SDL in the plugin now at all. Changes what gets setup
	and when. Use a POSIX condition to signal the threads when they
	have a movie to play.
	* plugin.h: Add unsetGL() to unset the context. important for
	threads. Add tons of silly debug messages.
	* player.cpp: Extern the mutexes, and condition variables. Always
	lock the display before locking X.
	* macros/hashmap.m4: New configure test for hash_map extension.
	* configure.as: Look for hash_map extension. Check for vsnprintf,
	strcasecmp, and stricmp.
	* libbase/container.h:  Include config.h. Use configure support to
	define template.
	* libbase/container.cpp: Include config.h. Use ifdefs based on
	configure tests for vsnprintf, strcasecmp, and stricmp. 
	* libbase/utility.cpp: Don't build anything if dmalloc isn't
	enabled.
	* libbase/config.h: Remove as it doesn't appear to be used, and
	conflicts with the autoconf generated one.
	* libbase/Makefile.am: Include files from the src server directory
	too, and the top level where config.h is. Don't include the
	removed config.h in the header list.

2006-02-28  Jim Garrison  <garrison@users.sourceforge.net>

	* server/MovieClipLoader.cpp, server/Sprite.cpp,
	server/action.cpp, server/array.cpp, server/text.cpp,
	server/xml.cpp, server/xmlsocket.cpp: first step in migration to 
	std::string

2006-02-28  Tomas Groth Christensen  <tomasgroth@yahoo.dk>

	* testsuite/actionscript.all/gen-test.sh: made the test-generator
	use case-sensitivity, since MM flashplayer is case sensitive.

2006-02-28  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Look for finite and isfinite.
	* server/Object.h: Define finite to be isfinite if isfinite
	doesn't exist.
	* macros/docbook.m4: Make not needing the docbook2X tools the
	default.

2006-02-27  Jim Garrison  <garrison@users.sourceforge.net>

	* libbase/Makefile.am: removed unused files
	* libbase/cschema.h: moved to Attic
	* libbase/file_util.cpp: moved to Attic
	* libbase/file_util.h: moved to Attic
	* libbase/png_helper.cpp: moved to Attic
	* libbase/png_helper.h: moved to Attic

2006-02-27  Rob Savoye  <rob@cree.moongulch.net>

	* plugin/player.cpp: Include Movie.h, which is where movie
	definitions get defined now. Include gnash.h before other local
	headers.

2006-02-26  Jim Garrison  <garrison@users.sourceforge.net>

	* libbase/container.h: hash class is now implemented using
	hash_map
	* server/Movie.cpp: partial migration to hash_map API
	* server/Movie.h: partial migration to hash_map API
	* server/Object.cpp: partial migration to hash_map API
	* server/Sprite.h: partial migration to hash_map API
	* server/action.cpp: partial migration to hash_map API
	* server/impl.h: partial migration to hash_map API

2006-02-26 Sandro Santilli <strk@keybit.net>

	* server/action.cpp: fixed bug in doActionCallFunction making
	samples/slider.swf play fine.
	* server/: merged movie_definition_sub into
	movie_definition.
	* testsuite/actionscript.all/Makefile.am: provided
	OUTPUT_VERSION define for *.swf and *.vswf rules

2006-02-26  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* libbase/dlmalloc.h: Include stdlib.h instead of the depreciated
	malloc.h.
	* libbase/tu_swap.h: OpenBSD defines swap macros with the same
	name as these functions, so use our implementation intead.
	* macros/pthread.h: Reqwrite to handle weird NetBSD Pth versus
	Pthread problem.
	* macros/sdl.m4: Throw out compile test for something simpler and
	more portable.
	* utilities/Makefile.am: Add pthread header and library.
	* server/Makefile.am: Add pthread header and library.
	* backend/Makefile.am: Add pthread header and library.
	* libbase/container.h: Add ugly NetBSD specific hack so it'll use
	pthread, not Pth if both are installed.
	* libgeometry/kd_tree_dynamic.cp: Include stdio so __sputc() is
	defined on NetBSD.

2006-02-25  Jim Garrison  <garrison@users.sourceforge.net>

	* backend/render_handler_d3d.cpp: substituted array<> with
	std::vector<>.
	* backend/render_handler_xbox.cpp: substituted array<> with
	std::vector<>.
	* libbase/container.cpp: substituted array<> with std::vector<>
	* server/morph.cpp: substituted array<> with std::vector<>
	* server/morph.h: substituted array<> with std::vector<>

2006-02-25 Michael Carlson <corfe83dev@gmail.com>

	* server/sound_handler_mp3.cpp: Use std::vector<> instead of
	array<>

2006-02-24  Jim Garrison  <garrison@users.sourceforge.net>

	* backend/sound_handler_sdl.cpp: substituted array<> with
	std::vector<>
	* libbase/container.h: removed array<> definition
	* libbase/grid_index.h: substituted array<> with std::vector<>
	* libbase/image_filters.cpp: substituted array<> with std::vector<>
	* libbase/triangulate.h: substituted array<> with std::vector<>
	* libbase/triangulate_float.cpp: substituted array<> with
	std::vector<>
	* libbase/triangulate_impl.h: substituted array<> with
	std::vector<>
	* libbase/triangulate_sint32.cpp: substituted array<> with 
	std::vector<>
	* libgeometry/kd_tree_dynamic.cpp: substituted array<> with 
	std::vector<>
	* libgeometry/kd_tree_dynamic.h: substituted array<> with 
	std::vector<>
	* libgeometry/tqt.h: substituted array<> with std::vector<>
	* server/Function.cpp: substituted array<> with std::vector<>
	* server/Function.h: substituted array<> with std::vector<>
	* server/Movie.cpp: substituted array<> with std::vector<>
	* server/Movie.h: substituted array<> with std::vector<>
	* server/MovieClipLoader.cpp: substituted array<> with std::vector<>
	* server/Sprite.cpp: substituted array<> with std::vector<>
	* server/Sprite.h: substituted array<> with std::vector<>
	* server/action.cpp: substituted array<> with std::vector<>
	* server/action.h: substituted array<> with std::vector<>
	* server/button.cpp: substituted array<> with std::vector<>
	* server/button.h: substituted array<> with std::vector<>
	* server/dlist.h: substituted array<> with std::vector<>
	* server/font.cpp: substituted array<> with std::vector<>
	* server/font.h: substituted array<> with std::vector<>
	* server/fontlib.cpp: substituted array<> with std::vector<>
	* server/fontlib.h: substituted array<> with std::vector<>
	* server/impl.cpp: substituted array<> with std::vector<>
	* server/impl.h: substituted array<> with std::vector<>
	* server/shape.cpp: substituted array<> with std::vector<>
	* server/shape.h: substituted array<> with std::vector<>
	* server/stream.cpp: substituted array<> with std::vector<>
	* server/stream.h: substituted array<> with std::vector<>
	* server/styles.h: substituted array<> with std::vector<>
	* server/tesselate.cpp: substituted array<> with std::vector<>
	* server/text.cpp: substituted array<> with std::vector<>
	* server/text.h: substituted array<> with std::vector<>
	* server/textformat.cpp: substituted array<> with std::vector<>
	* server/timers.cpp: substituted array<> with std::vector<>
	* server/timers.h: substituted array<> with std::vector<>
	* server/xml.cpp: substituted array<> with std::vector<>
	* server/xmlsocket.cpp: substituted array<> with std::vector<>
	* server/xmlsocket.h: substituted array<> with std::vector<>
	* utilities/processor.cpp: substituted array<> with std::vector<>

2006-02-24  Jim Garrison  <garrison@users.sourceforge.net>

	* backend/sound_handler_sdl.cpp: fixed int, unsigned int comparisions
	* libbase/grid_index.h: fixed int, unsigned int comparisions
	* libbase/image_filters.cpp: fixed int, unsigned int comparisions
	* libbase/triangulate_impl.h: fixed int, unsigned int comparisions
	* libgeometry/kd_tree_dynamic.cpp: fixed int, unsigned int comparisions
	* libgeometry/tqt.cpp: fixed int, unsigned int comparisions
	* plugin/plugin.cpp: fixed int, unsigned int comparisions
	* server/Movie.cpp: fixed int, unsigned int comparisions
	* server/Sprite.cpp: fixed int, unsigned int comparisions
	* server/action.cpp: fixed int, unsigned int comparisions
	* server/button.cpp: fixed int, unsigned int comparisions
	* server/dlist.cpp: fixed int, unsigned int comparisions
	* server/font.cpp: fixed int, unsigned int comparisions
	* server/fontlib.cpp: fixed int, unsigned int comparisions
	* server/impl.cpp: fixed int, unsigned int comparisions
	* server/morph2.cpp: fixed int, unsigned int comparisions
	* server/shape.cpp: fixed int, unsigned int comparisions
	* server/styles.cpp: fixed int, unsigned int comparisions
	* server/tesselate.cpp: fixed int, unsigned int comparisions
	* server/text.cpp: fixed int, unsigned int comparisions
	* server/xmlnode.cpp: fixed int, unsigned int comparisions
	* server/xmlsocket.cpp: fixed int, unsigned int comparisions

2006-02-23  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/Makefile.am: Add flags for GTKGLExt
	dependancies. Remove ogl_sdl.cpp and ogl_sdl.h. Use -d instead of
	-z to see if the directory exists.
	* plugin/plugin.cpp: Don't use ogl_sdl, move the functionality
	into the nsPluginInstance class. Add locking around all GL and X11
	calls. Add Doxygen style comments blocks.
	* plugin/plugin.h:  Don't use ogl_sdl, move the definitions
	into the nsPluginInstance class.
	* plugin/ogl_sdl.{h,cpp}: Move functionality into nsPluginInstance
	class. Remove files.
	
	* doc/C/sources.html: Add section on cross compiling Gnash.
	* libgeometry/kd_tree_packed.cpp: Comment out the two somewhat
	bogus assertions so this file can be cross compiled.
	* configure.ac: If the plugin is disabled, or glext is disabled,
	don't spew errors messages, since we didn't bother to look for
	those components anyway. Rename the macros where the prefix
	changed.
	* macros/firefox.m4: Don't try to configure if the plugin is
	disabled.
	* macros/jpeg.m4: Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/libXML.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling.
	* macros/mad.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/ming.m4: Rename to use GNASH_ instead of AM_ for the
	prefix.
	* macros/ogg.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/opengl.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/png.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/sdl.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/zlib.m4:  Look in $prefix for headers and libraries,
	useful for cross-compiling. Rename to use GNASH_ instead of AM_
	for the prefix.
	* macros/gtkglext.m4: If --enable-glext is passed to configure,
	enable configuring pango, cairo, atk, glib, and gtk2 macros.
	* macros/atk.m4: New file to look for Gnome ATK, which is
	unfortunately a dependancy of GtkGlext.
	* macros/cairo.m4:  New file to look for Cairo, which we wanted to
	do eventually anyway, by GtkGlext needs it too.
	* macros/glib.m4:  New file to look for Glib, which is
	unfortunately a dependancy of GtkGlext.
	* macros/gtk2.m4:  New file to look for GTK+ version 2.x, which is
	a dependancy of GtkGlext, but Firefox uses it too.
	* macros/pango.m4:  New file to look for Gnome ATK, which is
	unfortunately a dependancy of GtkGlext.
	
	* doc/C/gnash.xml: Add the -x command line option.
	* doc/C/internals.xml: Add section under Plugin about using
	Mozplugger to use the standalone player.

2006-02-22  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/gnash.cpp: Add -x option to pass in the X window ID from
	mozplugger. If a window ID is passed in, use that to display
	in. This lets the standalone player be embedded in the browser
	window.

2006-02-20  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Add GNASH_PATH_GLEXT.
	* macros/gtkglext.m4: New config file to find GtkGLext package.

	* packaging: New directory to hold config files to build packages
	for distributions.
	* packaging/debian: New directory for DEB building config files.
	* packaging/redhat: New directory for RPM building config files.
	* packaging/redhat/gnash.spec: Contributed spec file for building
	RPMs.
		
	* macros/zlib.m4,sdl.m4,pthreads.m4,png.m4,opengl.m4,
	ogg.m4,mad.m4,libtool.m4,libXML.m4,jpeg.m4,dmalloc.m4:
	Look for /lib64 and /usr/lib64, and use those for search paths if
	they exist.
	* configure.ac: Blindly add -L/usr/lib64, so the autoconf library
	checking functions get the right path.

2006-02-17  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/shm.cpp (closeMem): Use shmctl(), not shm_unlink to
	remove a shared memory segment on BSD machines.

2006-02-15  Rob Savoye  <rob@cree.moongulch.net>

	* config.guess: Updated to latest autoconf release.
	* config.sub: Updated to latest autoconf release.
	* ltmain.sh: Updated to latest libtool release.
	* backend/render_handler_ogl.cpp: Migrate patch from GameSWF.
	* server/action.h: Make set_local_frame_top multiline so it's
	easier to read.
	* server/gnash.h: Add prototype for cxform::clamp().
	* server/types.cpp: Add cxform::clamp().
	* server/shape.cpp: Fix a few warnings about comparison and sign.
	* server/shm.cpp (attach): Use SVR4 styles shared memory segments
	if there is no POSIX shared memory support, like NetBSD or
	OpenBSD.
	* server/shm.h: Add private data to store the SV4 shared memory
	key, and the SVR4 shared memory ID.
	* server/xml.cpp: Move a few methods outside
	ENABLE_TESTING. Return NULL from a few unimplemented methods.
	* server/xml.h: Move a few methods outside ENABLE_TESTING. 
	* server/xmlnode.h: Move a few methods outside ENABLE_TESTING. 
	* server/xmlnode.cpp: Move a few methods outside ENABLE_TESTING. 
	* testsuite/actionscript.all/XML.as: Make some tests unresolved
	because I'm not clear what the proper behaviour is.

2006-02-15 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Makefile.am: added online-tests rule.
	* testsuite/actionscript.all/Function.as: avoided === test, not
	available in versions < 6.
	* testsuite/actionscript.all/gen-index.sh: utility script for
	the online-tests rule: generates index.html and index.wiki.
	* testsuite/actionscript.all/check.as: support for ONLINE define,
	using XTRACE and only printing failures when that's defined.
	* testsuite/actionscript.all/gen-test.as: changed to use the check
	macro.
	* testsuite/actionscript.all: Boolean.as, Camera.as, Color.as,
	ContextMenu.as, CustomActions.as, Error.as, LoadVars.as,
	Microphone.as, Mouse.as, NetStream.as, Selection.as,
	SharedObject.as, Stage.as, System.as, TextSnapshot.as, Video.as:
	regenerated.
	* server/swf.h: added note about which action_buffer private
	method implmements which ACTION_DELETE* block.
	* testsuite/actionscript.all/Global.as: added test for
	_global.escape.

2006-02-14  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Look for shm_open().
	* server/shm.cpp: If we don't have POSIX shared memory (like *BSD
	systems), don't try to compile anything for now.
	* server/shm.h: If we don't have POSIX shared memory (like *BSD
	systems), don't try to compile anything for now.
	
2006-02-14 Sandro Santilli <strk@keybit.net>

	* server/Object.{h,cpp}: new instanceOf(function_as_object*) method.
	* server/action.{h,cpp}: ACTION_INSTANCEOF and ACTION_CASTOP
	implemented.  Fixed ACTION_DELETE.
	* testsuite/actionscript.all/Inheritance.as: instanceOf tests.
	* testsuite/actionscript.all/delete.as: delete tests.
	* testsuite/actionscript.all/Date.as: changed to use the check() macro.

2006-02-14 Michael Carlson <corfe83dev@gmail.com>

	* server/array.cpp: Make tostring() and join() not output any 
	enclosing parentheses, and handle empty array case better
	* testsuite/actionscript.all/array.as: Change all tests to use
	new check macro. Add tests for all implemented array functions,
	as well as several tests for the unimplemented sort function.
	* libbase/jpeg.cpp: don't ever crash by trying to read
	headers of the same jpeg twice

2006-02-13  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/firefox.m4: Set FIREFOX_PLUGINS correctly at the proper
	time. Add another pattern to the sed rule to munge the path.
	* configure.ac: Print out where the plugin will get installed.

	* libamf/Makefile.am: DOn't link in the other libraries so libamf
	can be standalone.
	* libamf/amf.cpp: Default to not using log_msg().
	* libamf/amftest.cpp: Don't build unless you have dejagnu.h.
	* configure.ac: Check for the dejagnu.h header for unit testing.

2006-02-13 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/xtrace.as: trace window enlarged.
	* testsuite/actionscript.all/Inheritance.as: inheritance test
	* server/Object.h: new header file for definitions from as_object
	up to as_value (will split again at sometime).
	gnash::as_object_interface class definition merged with
	gnash::as_object, now directly derived from gnash::resource.
	* server/action.cpp: doActionEquals and doActionStrictEquals private
	action_buffer methods. Made as_value::to_object valid for AS_FUNCTION
	value types
	* server/Function.{cpp,h}: Made 'Function' an AS_FUNCTION to allow for
	'prototype' based inheritance. Implemented Function.call
	

2006-02-12 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: Fix silly '!' that breaks _global.isfinite

2006-02-12  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* libamf/amf.h: New file for AMF encoder/decoder library.
	* libamf/amfutf8.h: New file for AMF encoder/decoder library to
	handle UTF8 strings.
	* libamf/amf.cpp:  New file for AMF encoder/decoder library.
	* libamf/Makefile.am: New makefile for amf library.
	* libamf/amftest.cpp: New test case for AMF library.
	* Makefile.am: Add libamf directory.
	* configure.ac: Add libamf directory.

2006-02-11  Jim Garrison  <garrison@users.sourceforge.net>

	* libbase/container.h: changed array to derive from std::vector
	instead of being custom implemented, renamed hash::is_empty()
	to hash::empty()
	* libbase/grid_index.h: changed to std::vector API
	* libbase/triangulate_impl.h: changed to std::vector API
	* server/Movie.cpp: changed to std::vector API
	* server/MovieClipLoader.cpp: create explicit empty array instead
	of passing the value 0
	* server/Sprite.h: set each element of std::vector<bool> to
	false instead of using memset
	* server/action.cpp: changed to std::vector API
	* server/dlist.cpp: changed to std::vector API
	* server/font.cpp: changed hash::is_empty() to hash::empty()
	* server/fontlib.cpp: changed to std::vector API
	* server/impl.cpp: changed to std::vector API
	* server/shape.cpp: changed to std::vector API, typecast
	std:vector::size() to an integer to fix an assertion
	* server/tesselate.cpp: changed to std::vector API
	* server/textformat.cpp: create explicit empty array instead
	of passing the value 0
	* server/timers.cpp: create explicit empty array instead
	of passing the value 0
	* server/xml.cpp: create explicit empty array instead
	of passing the value 0
	* server/xmlsocket.h: changed to std::vector API

2006-02-11  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/xmlnode.{h,cpp): Implement nodeType property.
	* testsuite/actionscript.all/XMLNode.as: Add test for
	XMLNode::nodeType property.
	* doc/C/xmlnode.xml: New file for accidentally skipped class.
	* doc/C/internals.xml: Update section on using as_value
	objects. Include XMLNode section.
	* macros/docbook.m4: Extract and save the version of the Docbook2X
	tools, because there are two big differences in command line
	options depending which version you have.
	* configure.ac: Print the version of the Docbook2X tools, if
	--enable-docbook is specified.
	* doc/C/Makefile.am: Check the version of the Docbook2X tools when
	running db2x_texixml.
	* macros/sdl.m4: Define HAVE_SDL_MIXER_H if we have SDL Mixer
	installed.

2006-02-10  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/render_handler_ogl.cpp (render_handler): Migrated patch
	from GameSWF that fixed a problem that meant that bitmap fill
	styles would not respect colour modulation (e.g. the use of Tint
	in Flash).
	* server/types.h: Define cxform::clamp.
	* server/types.cpp: Implementation of cxform::clamp.

	* doc/C/internals.xml: Add section on adding properties to an 
	ActionScript class. Add section on using as_value objects.

	* testsuite/actionscript.all/dejagnu.as: Implement the DejaGnu
	unit testing API for ActionScript.
	* testsuite/actionscript.all/XML.as: Use new DejaGnu API for test
	output.
	* testsuite/actionscript.all/XMLNode.as: New test case for
	XMLNode to test the methods and properties.
	* server/xmlnode.h: Add prototypes for new methods.
	* server/xmlnode.cpp: Implement appendChild() cloneNode()
	methods, and nodeName, nodeValue, firstChild, lastChild,
	previousSibling, nextSibling, parentNode properties.
	* server/xml.h: Define properties correctly. 
	* server/xml.cpp: Add properties to a node as other operations
	on the node are done.
	* configure.ac: Disable the XMLReader by default.
	* libbase/membuf.cpp: Free, don't delete the pointer in the
	destructor.
	* server/action.cpp: Define virtual destructor for
	as_property_interface.
	* server/gnash.h: Define virtual destructor for import_visitor.
	* server/shape.{h,cpp}: Define destructor for tesselating_shape.
	* server/styles.h: Define destructors for base_fill_style and
	base_line_style.
	* server/tesselate.{h,cpp}: Define destructor for
	trapezoid_accepter.
	
2006-02-10 Sandro Santilli <strk@keybit.net>

	* server/action.{cpp,h}: added doActionCallMethod,
	doActionCallFunction, doActionDefineFunction,
	doActionGetMember and doActionDefineFunction2 private
	methods to action_buffer. Changed text representation
	of generic objects from [object Object] to a more
	interesing value, fixed <c_function 0x0x###>
	* testsuite/actionscript.all/Function.as: more tests.
	* server/Object.cpp: reworked get_member/set_member to map
	"__proto__" to m_prototype.
	* server/Function.{h,cpp}: mapped m_properties to
	"prototype". Set prototype.constructor at properties
	initialization time.

2006-02-09  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/ghelp.m4: Disable ghelp support by default. Use
	--enable-ghelp to turn it back on.
	* doc/omf.make: Don't try to install anything if GHELP isn't
	defined.

2006-02-09 Sandro Santilli <strk@keybit.net>

	* doc/C/Makefile.am: spaces => tab
	* doc/C/internals.xml: about writing tests
	* testsuite/actionscript.all/Global.as: added two more tests,
	fixed existing test to bypass preprocessor mangling.
	* testsuite/actionscript.all/Function.as: added some tests
	for prototype, prototype.constructor and __proto__ (inheritance)
	* server/action.{cpp,h}: moved ACTION_NEW and ACTION_INSTANCEOF
	handling code in action_buffer private doActionNew and
	doActionInstanceOf (the latter being under development).

2006-02-09 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: Implement _global.parseInt for all cases.
	Also implement _global.parseFloat, and _global.isNan,
	_global.isFinite, _global.unescape
	* server/action.h: add as_value::is_finite(), set_nan for
	ease of use
	* testsuite/actionscript.all: add and fix up parseInt test cases
	also add some parseFloat test cases

2006-02-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/shm.cpp (exists): Move to be within the ENABLE_TESTING
	block.

2006-02-08  Rob Savoye  <rob@cree.moongulch.net>

	* Makefile.am: Rearrange directories for SUBDIRS and
	DIST_SUBDIRS.
	* autogen.sh: Remove hardcoded path to /usr/bin.
	* doc/C/appendix.xml: Add section to "Coding Style" about Doxygen
	style somments.
	* doc/C/internals.xml: Metion code generation scripts in
	CVS. Expand "Adding ActionScript" section  Add sectioj on
	parameter passing for callbacks. Add section on testing Gnash.
	* server/Makefile.am: Add xmlattrs and xmlnodes to the list of
	headers and source files.
	* server/xml.h: Move XMLAttrs and XMLNode to their own source
	files to reduce clutter. Use std::vector instead of "tu
	array". Add new accessors to use for testing. Move a few method
	definitions to the source file.
	* server/xml.cpp:  Move XMLAttrs and XMLNode to their own source
	files to reduce clutter. Use std::vector instead of "tu array".
	Add new accessors to use for testing. Move a few method
 	definitions from the header file. Implement XML::appendChild(),
	XMLNode::appendChild(), XML::createElement(), XML::cloneNode(),
	and XML::createTextNode().
	* testsuite/actionscript/XML.as: Add tests for the new methods.
	
	* server/xmlattrs.{h,cpp}: New file for XMLAttr class moved out of
	xml.h.
	* server/xmlnode.{h,cpp}:  New file for XMLAttr class moved out of
	xml.h.

2006-02-06  Patrice Dumas  <pertusus at free.fr>

	* macros/docbook.m4: enable by default. Add an AM_CONDITIONNAL for
	each of the formats.
	* macros/ghelp.m4: enable by default. Correct AC_PATH_PROG 3rd arg.
	Don't check for the user is root (the user needs to be root only
	for make install, in case he wants to run scrollkeeper-update).
	* doc/omf.make: don't use $(GHELP) it is never set. Test for the
	user being root only when running scrollkeeper-update, any user
	may install the files. Use $(omffile) instead of $(srcdir)/*.omf.
	Add $(DESTDIR).
	* doc/xmldocs.make: move general stuff to doc/C/Makefile.am 
	(EXTRA_DIST, CLEANFILES, xml_files). Similarly, define all-local 
	and not all. Add amissing $(DESTDIR). Take dist-hook and 
	install-data-hook from doc/C/Makefile.am.
	* doc/C/Makefile.am: use the GHELP automake conditionnal to 
	conditionnally include scrollkeeper stuff. Remove XML_FILES, as
	xml_files from the scrollkeeper code is the same. Distribute
	info and texi files. Simplify rules to build docs and 
	conditionnalize on automake conditionnals. If the tools aren't
	there, touch the files. As the doc files requires specific 
	tools to build, flag them as MAINTAINERCLEANFILES.
	* doc/C/gnash.omf: rename to gnash-C.omf and minor changes.

2006-02-08 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Global.as: _global functions tests
	* testsuite/actionscript.all/Function.as: modified to use check.as
	* testsuite/actionscript.all/Object.as: modified to use check.as
	* testsuite/actionscript.all/check.as: framework for dejagnu testing

2006-02-08 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: implement _global.parseInt's simplest case

2006-02-06 Sandro Santilli <strk@keybit.net>

	* server/action.h: Added as_environment::dump_stack(), more dox
	* server/action.cpp: Fixed <as_function 0x0x####>, cleanups
	* server/swf.h: Added dox for ACTION_CALLMETHOD
	* libbase/container.h: Doxygen comments for smart_ptr class
	* testsuite/actionscript.all/Function.as: more tests for
	Function.apply()
	* testsuite/actionscript.all/Makefile.am: rule to build
	'visual tracing' version of tests (.vswf)
	* server/Function.cpp: implemented Function.apply()

2006-02-05 Sandro Santilli <strk@keybit.net>

	* server/action.cpp used symbolic names in s_instruction_table.

2006-02-05  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* testsuite/actionscript.all/testin.xml: XML test file to test the
	parser.

	* plugin/plugin.cpp (NewStream): Add support to parse the options
	passed in when the plugin is invoked to play a stream. Add special
	debug flags so we can attach GDB at leisure and not have to screw
	with loading shared libraries.
	* server/xml.{h,cpp}: Fix capitalization errors in
	names. Implement getBytesTotal(), getBytesLoaded(),
	and hasChildNodes().
	* testsuite/actionscript.all/XML.as: Add tests for
	getBytesTotal(), getBytesLoaded(), and hasChildNodes().
	
	* server/xml.h: Add stubs for the missing methods and
	properties. Fix bit rot with get_member() so it actually works
	again.
	* server/xml.cpp:  Add stubs for the missing methods and
	propeties.
	* testsuite/actionscript.all/XML.as: New file to test XML class.

2006-02-05 Sandro Santilli <strk@keybit.net>

	* server/swf.h: added SWF::ACTION_DEFINEFUNCTION2 (0x8e)
	* server/action.cpp: added support for Object copy construction
	obj = new Object(otherobj).
	* server/: renamed as_as_function to as_function_object, moved
	it's definition in Function.{h,cpp}. Moved as_object methods
	from action.cpp to Object.cpp (new file). Fixed definition
	of prototipal ::apply and ::call members for Function object.

2006-02-05 Michael Carlson <corfe83dev@gmail.com>

	* server/Sprite.cpp: goto_frame now uses mutator to stop instead
	of directly changing state (so now it resets dt counter too)

2006-02-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/shm.{h,cpp}: New support code for using POSIX named
	shared memory segments.
	* server/LocalConnection.h: Alternatively use shared memory
	instead of a socket connection.
	* server/LocalConnection.cpp: Alternatively use shared memory
	instead of a socket connection.
	* testsuite/actionscript.all/LocalConnection.as: Add addiotnal
	tests for when using a shared memory subsystem.
	* server/Makefile.am: Add shm.h, shm.cpp, network.cpp, network.h.
	* configure.ac: Add --enable flag to switch using shared memory to
	networking for local connections.
	
	* server/LocalConnection.h: Change API for connect(), and
	domain().
	* server/LocalConnection.cpp: Change API for connect(), and
	domain(). Initial implementations of domain(), connect(), and
	close().

	* server/network.cpp: Replace code with networking code from one
	of my other GPL'd projects, PowerGuru. That code is much more
	fully functional in a generic sense, and pretty solid too. Add
	more accessors to use for testing LocalConnection. 
	* server/network.h: Add more accessors to use for testing
	LocalConnection.
	* testsuite/actionscript.all/LocalConnection.as: Test the newly
	implemented methods.

	* server/network.{h,cpp}: New files to hold base networking class
	for use by other ActionScript objects. This base class contains
	the code for custom methods that implement accessors to the data
	to enable unit testing derived classes like NetConnection and
	LocalConnection. 
	* server/NetConnection.h: Move all testing code to network.h.
	* server/NetConnection.cpp: Move all testing code to
	network.cpp. Setup callbacks for our custom methods using the
	Network, instead of NetConnection class.

	* Makefile.am: Rearrange variable definitions so the dist and
	distcheck Makefile targets actually work. Add DIST directories so
	everything makes it into the tarball.
	* doc/C/Makefile.am: Define XML_FILES for all the other xml doc
	files. Add DESTDIR to the install path. Rearrange variable
	definitions so the distcheck Makefile target actually works. 

2006-02-04  John Gilmore  <gnu@toad.com>

	* backend/gnash.cpp:  Set window title to "gnash: " and movie name.
	Correct help/usage string.

2006-02-04 Sandro Santilli <strk@keybit.net>

	* libbase/container.h:  Doxygen-compatible comments for hash
	struct. Const-correct size() method.
	* server/action.cpp: opcode 0x43 (Declare Object / INITOBJECT)
	implemented.

2006-02-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/netconnection.xml: Update with more detailed data on this
	class.

	* server/NetConnection.cpp: Implement part of the connect()
	method. Add C++ accessor methods as AS methods, and we can call
	our custom methods from testing code to examine the internal state
	of a class.
	* server/NetConnection.h: Add C++ accessor methods as AS methods,
	* testsuite/actionscript.all/NetConnection.as: Test the connect()
	method to make sure the URL gets parsed correctly, if specified.
	* configure.ac: Add --disble-testing option to not build
	additional code used for testing.

2006-02-04 Michael Carlson <corfe83dev@gmail.com>

	* server/Date.cpp: Clean up Date, and implement getDate()
	* server/action.cpp: Fix SetTargetDynamic opcode and further fix
	SetTarget opcode

2006-02-03  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/docbook.m4: Fix improper use of 3rd parameter to
	AC_PATH_PROG.

	* configure.ac: Add --enable-sdk-install to install headers for
	those who want to use Gnash as a development library.
	* plugin/ogl_sdl.cpp: Drop old demo code.
	* libbase/Makefile.am: Rename libbase to libgnashbase to
	reduce the chance of name collision.
	* libgeometry/Makefile.am: Rename libgeometry to libgnashgeo to
	reduce the chance of name collision.
	* server/Makefile.am: Rename libserver to libgnashserver, and
	libasobjs to libgnashasobjs to reduce the chance of name
	collision. 
	* backend/Makefile.am: Rename libgbackend to libgnashbackend to
	reduce the chance of name collision. Use the new library names to
	link.
	* utilities/Makefile.am: Use the new library names to link.
	* plugin/Makefile.am: Rename libgnash to be libgnashplugin to
	reduce the chance of name collision. Use the new library names to
	link.
	
	* server/action.cpp: Add missing opcodes to dissasembler table,a
	and rename the unsupported ones to have a "_fixme" attached when
	printing debug information.
	* backend/Makefile.am (AM_LDFLAGS): Add $(X_LIBS) so we can link
	with libraries in /usr/X11R6/lib.

	* Makefile.am (ACLOCAL_AMFLAGS): Add so autoreconf works. 

2006-02-03 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: SetTarget is now implemented for targets
	other than ""
	* backend/render_handler_ogl.cpp: use TWIPS_TO_PIXELS macro
	instead of hardcoded 20 value

2006-02-03 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Function.as: tests for user-defined
	  class definition
	* server/swf.h: moved SWF namespace definition in it's own header,
	  added action_type enum, added ACTION_EXTENDS, ACTION_CASTOBJECT,
	  ACTION_IMPLEMENTS tag_types, added dox on some action_types.
	* server/action.cpp: used symbolic names for SWF action tag ids
	* testsuite/actionscript.all/Object.as: test for Object class
	* testsuite/actionscript.all/Makefile.am: added support for
	  user-defined flags to ``makeswf'' invocation
	  (for -DUSE_XTRACE, mainly)
	* libbase/: image.h, jpeg.h: Doxygen-compatible comments

2006-02-03 Michael Carlson <corfe83dev@gmail.com>

	* server/textformat.cpp: fix typo in textformat_new log message
	* server/action.cpp: modulus operand in actionscript now returns
	NaN on division by zero
	* server/Date.h: Setup basic time storage variables
	* server/Date.cpp: Implement default constructor, basic time
	reading operations

2006-02-02  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* testsuite/actionscript.all/Makefile.am: Use the standard
	automake way to build the test cases.

	* Makefile.am (STD_DIRS): Remove testsuite. Nothing actually needs
	to be done at "make all" time anyway. So now the testuites can
	only be run from the testsuite subdirctory.
	* macros/png.m4: Fix various typos and other stupid errors that
	kept the --with-png-incl and --with-png-lib options from working
	correctly.
	* configure.ac: Tweak test for PNG support.

2006-02-01  Rob Savoye  <rob@cree.moongulch.net>

	* testsuite/actionscript.all/gen-test.sh: Developer utility script
	that uses the NOTES file to generate a Ming style "as" source file,
	which can be used to test an ActionScript class.
	* server/gen-files.sh: Developer utility script that uses the
	NOTES file to generate header and source file templates for an
	ActionScript class.
	* doc/C/gen-doc.sh: Developer utility script that uses the NOTES
	file to generate a documentation template for an ActionScript
	class.
	* doc/C/NOTES: Data file for file generation scripts. This is only
	of interest to other developers. If you change this file, you may
	break the other developer gen-* scripts.
	* testsuite/Makefile.am: Add dejagnu to AUTOMAKE_OPTIONS. Reset
	RUNTESTDEFAULTFLAGS to not use the --tool option.
	* testsuite/actionscript.all/Makefile.am: Add dejagnu to
	AUTOMAKE_OPTIONS. Reset	RUNTESTDEFAULTFLAGS to not use the --tool
	option.
	* testsuite/actionscript.all/swf_exists.exp: Test driver for
	DejaGnu to run the new test cases.
	* testsuite/actionscript.all/Boolean.as, Date.as, Microphone.as,
	SharedObject.as, Camera.as, Error.as, Mouse.as, Stage.as,
	Color.as, server/Makefile.am, backend/Makefile.am, 
	Function.as, NetConnection.as, System.as, ContextMenu.as,
	LoadVars.as, NetStream.as, TextSnapshot.as, CustomActions.as,
	LocalConnection.as, Selection.as, Video.as: New Ming based test
	cases for ActionScript classes. Currently all these do is test for
	the existance of a class, and all of it's methods.
	* server/Boolean.cpp, Date.cpp,	Microphone.cpp,	SharedObject.cpp,
	Camera.cpp, Error.cpp, Mouse.cpp, Stage.cpp, Color.cpp,
	Function.cpp, NetConnection.cpp, System.cpp, ContextMenu.cpp,
	LoadVars.cpp, NetStream.cpp, TextSnapshot.cpp, CustomActions.cpp,
	LocalConnection.cpp, Selection.cpp, Video.cpp: New stubs for
	missing ActionScript classes. All they do for now is print
	"unimplemented", but as all the hard code to tie a class and it's
	methods into Gnash is done, it'll be much easier to fill in
	functionality.

2006-01-30 Michael Carlson <corfe83dev@gmail.com>

	* backend/render_handler_ogl.cpp: tentative implementation
	of line_style_width with appropriate TODO message

2006-01-30  Rob Savoye  <rob@ripple.welcomehome.org>

	* doc/C/accessibility.xml, button.xml, camera.xml,
	contextmenu.xml, customactions.xml, date.xml,
	error.xml, internals.xml, key.xml,
	loadvars.xml, localconnection.xml,
	microphone.xml, mouse.xml, netstream.xml,
	selection.xml, sharedobject.xml, sound.xml,
	stage.xml, textsnapshot.xml, video.xml,
	xml.xml, xmlsocket.xml: Add content.
	* doc/C/accessibility.xml camera.xml, color.xml, contextmenu.xml,
	customactions.xml, date.xml, error.xml, function.xml, key.xml,
	loadvars.xml, localconnection.xml, microphone.xml, mouse.xml,
	movieclip.xml, moviecliploader.xml, netstream.xml, object.xml,
	selection.xml, sharedobject.xml, sound.xml, stage.xml, system.xml,
	textfield.xml,	textformat.xml,textsnapshot.xml. video.xml,
	xml.xml, xmlsocket.xml: New machine generated templates for
	ActionScript class documentaion.

	* doc/C/array.xml, boolean.xml, button.xml, math.xml,
	netconnection.xml, number.xml, string.xml: New docs, one for each
	ActionScript class.

2006-01-29  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/internals.xml: Add a table of what ActionScript classes
	are implemented, and to what degree.
	* doc/C/sources.xml: Add section on PNG and JPEG dependancies. Add
	section on using Doxygen.

	* doc/Doxyfile.in (INPUT): Change to using @top_srcdir@, so the
	doxygen usage supports building the docs when configuring with a
	separate build tree from the sources.

2006-01-28  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/internals.xml: Add section on adding new ActionScript
	classes with reasonable detail.

	* doc/C/sources.xml: New file extracted from gnash.xml, and made a
	standalone file since it's grown in size.
	* doc/C/appendix.xml: New file for Appendix content.
	* doc/C/gnash.xml: Move some sections to separete files. Include
	the new files.

	* doc/C/Makefile.am: Add pdf and info to SUFFIXES so the rules
	actually work.

	* doc/omf.make (install-data-hook-omf): Only install if you are
	root, as this requires writing to system directories.
	* configure.ac: Link the doc/C/images directory to the build
	directory so we can find images when producing output files. Check
	state of DocBook when it's enabled.
	* macros/docbook.m4: Add path to stylesheets for Ubuntu. Look for
	fop.sh, and the DocBook2X conversion tools. Make DocBook optional,
	use --enable-docbook to enable. When disableed, you can't build
	any of the docs.
	* macros/ghelp.m4: Check for Scrollkeeper tools. Using GNOME Help
	is disabled by default. Use --enable-ghelp to enable.
	* doc/C/Makefile.am: Use variables defined by configure for all
	the conversion tools.

2006-01-27  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/player.cpp: Use GLinitialized instead of
	surface_activated, which turns out to be a system definition on
	some Unixes. Make main_loop take a nsPluginInstance as an argument
	so we have all the data we need. Setup a thread to run the
	player.
	* server/Makefile.am, backend/Makefile.am,
	plugin/Makefile.am, utility/Makefile.am,
	plugin/mozilla-sdk/Makefile.am: Don't use VORBIS variables
	anymore.
	* macros/libXML.m4: Use xml2-config instead of pkg-config.
	* maxros/mad.m4: Add BSD path prefix, /usr/pkg.
	* libbase/triangulate_impl.h: Drop the long modifier when printing
	a size.
	* libbase/Makefile.am: Make dmalloc build conditionally when
	--enable-dmalloc is passed to configure.
	* backend/sound_handler_sdl.cpp: Only compile if SDL_Mixer is
	installed.
	* backend/gnash.cpp: xml_fd should always be defined. Make using
	SDL_Mixer for sound be conditional, since a machine may have SDL
	installed, but not SDL_Mixer, but we still want the player to
	build.
	* server/xmlsocket.h, xmlsocket.cpp: Include config.h as generated
	by configue if it exists.
	* server/xml.h, xml.cpp: Include config.h as generated
	by configue if it exists.
	* configure.ac: Enable test for pthread.h and libpthread. Don't
	look for Vorbis, the Ogg tests are enough.
	* server/Movie.cpp, Sprite.cpp, impl.cpp, array.cpp: Include
	pthread.h to get around a data type definition problem on
	NetBSD. This seems to be required when using STL containers on
	NetBSD. 
	* macros/opengl.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/png.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/jpeg.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/sdl.m4: Look for SDL specific directory before and after
	the include or lib since some platforms install these differently.
	* macros/pthreads.m4: Look for POSIX Thread support. This turns
	out to be very messy with NetBSD, as the old version is also
	installed, and we have to link with the right one for any
	executable to work.

2006-01-26  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/Makefile.am: Link in shared libraries. Install the plugin
	in the users home directory for mozilla or firefox plugins.
	* server/Makefile.am, backend/Makefile.am,
	plugin/Makefile.am, plugin/mozilla-sdk/Makefile.am: Sigh, back to
	building and installing shared libraries because AMD64-linux
	doesn't support linking the plugin with static libraries.

	* configure.ac: Don't complain about missing libxml2 libraries if
	--disable-xml was specified.
	* backend/gnash.cpp: Always define gofast and goslow, even if XML
	support is disabled.
	* libbase/tu_types.h: If the Mozilla obsolete Prototypes file has
	been included, don't redefine the 64 bit data types.

	* testsuite/movies.all/elvis.swf: Remove URL ping to spyware
	server.

	* libbase/triangulate_impl.h: Change %ld to %d in print statement.
	* libbase/tu_types.h: Use SDL typedefs always.

2006-01-24  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/opengl.m4: Update based on mad.m4 template.
	* macros/mad.m4: Fix typo, -I should be a -L.

2006-01-24 Michael Carlson <corfe83dev@gmail.com>

	* server/array.h: as_array_object now uses deque instead of vector
	* server/array.cpp: Implement array::unshift, shift, reverse,
	concat, slice, toString, join - also make push return the new
	length as it should have done before

2006-01-23  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/player.cpp, player.h: Neew file for Flash player within
	plugin code.
	* plugin/ogl_sdl.cpp, ogl_sdl.h: New files for OpenGL and SDL
	specific code.
	* plugin/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* server/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* backend/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* plugin/Makefile.am: Build a static archive library instead of a
	shared one.
	* plugin/mozilla-sdk/Makefile.am: Build a static archive library
	instead of a shared one.
	
	* server/Makefile.am: Don't install the libraries.
	* backend/Makefile.am: Don't install the libraries.
	* plugin/Makefile.am: Don't install the
	libraries. Pass-no-undefined to libtool so all symbols are
	resolved in the final shared library.
	* plugin/mozilla-sdk/Makefile.am: Don't install the libraries.

	* configure.ac: Use new DMALLOC test.
	* macros/dmalloc.m4: New macro for dmalloc support.
	* utilities/Makefile.am: Add support for dmalloc.
	* server/Makefile.am: Add support for dmalloc.
	* backend/Makefile.am: Add support for dmalloc.
	* plugin/Makefile.am: Add support for dmalloc.
	* libbase/utility.cpp: Only build if we have mallinfo. 

2006-01-23 Michael Carlson <corfe83dev@gmail.com>

	* server/action.h: Create utility funcs as_value::is_inf, is_nan
	* server/action.cpp: Let as_value String<->Number conversions
	use NaN, +Infinity, -Infinity where appropriate
	* server/string.cpp: Make charCodeAt() return a NaN value when
	appropriate
	* server/array.cpp: Array now checks for NaN after converting
	index string to_number(), instead of the old hacked-up way

2006-01-23  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/styles.cpp: Fix condition for gradient test.

	* configure.ac: Remove AM_MKINSTALLDIRS macro, it's now unneeded.

2006-01-23 Michael Carlson <corfe83dev@gmail.com>

	* server/array.h: Move new array code into array.cpp, array.h
	* server/array.cpp: Move new array code into array.cpp, array.h
	* server/action.cpp: Move new array code into array.cpp, array.h
	* server/Makefile.am: Move new array code into array.cpp, array.h
        * server/font.cpp: Report an error and continue when we get two
	of the same kerning pairs for a font, instead of crashing

2006-01-22  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Make text at end of configure more detailed about
	dependency errors.
	* macros/mad.m4: New macro to find libmad for mp3 support.
	* utilities/Makefile.am: Make MP3 support truly optional.
	* server/Makefile.am: Make MP3 support truly optional.
	* backend/Makefile.am: Make MP3 support truly optional.
	* plugin/Makefile.am: Make MP3 support truly optional.

2006-01-21  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Add tests for Ogg and Vorbis.
	* backend/Makefile.am: Add flags and libs for Ogg and Vorbis as
	separete flags.
	* utilities/Makefile.am: Add flags and libs for Ogg and Vorbis as
	separete flags.
	* plugin/Makefile.am: Add flags and libs for Ogg and Vorbis as
	separete flags.

	* server/styles.cpp: Don't abort if we read a bad gradient.

	* macros/sdl.m4: Store the compilation flags so the compilation
	tests works on ppc-linux.

2006-01-21 Michael Carlson <corfe83dev@gmail.com>

        * server/action.cpp: Initial implementation of as_array_object
        ( get_member, set_member, push, pop, and length )
	
2006-01-20  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/Makefile.am: Make the OGL and SDL support a library so
	it can also be used by the plugin.
	* libbase/Makefile.am: Add SDL_MIXER_CFLAGS to the include paths.
	* macros/sdl.m4: Correct typo so --with-sdl_mixer-lib actually
	works. Add /usr/bin/X11 to the default search path for
	sdl-config.
	* server/styles.cpp: Print a better error message wh.en a bad
	gradient value is read before aborting.

2006-01-19  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* utilities/Makefile.am: Link with AM_LDFLAGS.
	* utilities/parser.cpp: Include config.h. Define gofast, goslow,
	and nodelay.
	* utilities/processor.cpp: Include config.h. Define gofast,
	goslow, and nodelay.
	* configure.ac: Look for mkinstalldirs. Remove test for GLUT, it's
	not used anymore.
	* doc/C/gnash.xml: Update copyright year.
	* backend/gnash.cpp: Include config.h. Give default values to
	gofast and goslow.
	* backend/Makefile.am: Don't install compatibility_include.h.
	* libbase/Makefile.am: Remove unused install hook.
	* libgeometry/Makefile.am: Remove unused install hook.
	* server/Makefile.am: Remove unused install hook.
	* config.mk.in: Remove GLUT variable.
	* All GPL'd Files: Update copyright year.
	* macros/firefox.m4: Get the java and plugin flags from
	$mconfig. Don't look for GLUT, it'sm not needed.
	* plugin/Makefile.am: Add include paths for all the Gnash
	directories and libxml2.

2006-01-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Print out an error message if any of the critical
	development packages aren't installed.

	* testsuite/movies.all: New sub directory for whole movies used
	for demos and testing.
	* testsuite/movies.all/ORIGIN: List where all these movies came
	from originally.
	* testsuite/movies.all/elvis.swf: Dancing figures movie. Makes a
	decent performance test.
	
	* testsuite/actionscript.all/movieclip_test.swf,
	moviecliploader_test.swf, text_formatting.swf, text_sizes.swf,
	visible_and_transparency.swf: New test cases.
	* testsuite/actionscript.all/green.jpg,lynch.jpg,offspring.jpg:
	New image files for the MovieClip and MovieClipLoader test cases.

	* testsuite: New directory for DejaGnu test suite.
	* testsuite/config: New directory for DejaGnu config files.
	* testsuite/lib: New directory for DejaGnu library files.
	* testsuite/actionscript.all: New directory for ActionScript test
	cases.

2006-01-07  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/impl.cpp (gnash): Use unsigned int for for loops so we
	don't have problems with comparing integers.

2006-01-07  Rob Savoye  <rob@darkstar.welcomehome.org>

	* plugin/plugin.cpp (eventThread): Add background thread for
	processing flash movies. Merge in OpenGL/SDL support from the
	standalone player. Start a thread for each new stream.

2006-01-06  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/sound_handler_mp3.cpp: Build if libmad exists.
	* configure.ac: Rearrange the final display lines, and the order
	some of the tests are done in. Look for libmad.
	* backend/Makefile.am: Add OpenGL flags so Darwin is happy.
	* libgeometry/Makefile.am:  Add OpenGL flags so Darwin is happy.
	* server/Makefile.am: Add sound_handler_mp3.cpp.

	* macros/opengl.m4: Rewrite completely. Add --with-opengl optins
	for the paths, and also make --disable-opengl work correctly.

	* libgeometry/geometry.h(math): Rename _X, _Y, or _Z because on
	Darwin they conflict with system header definitions.

	* configure.in, config.h.in, all Makefiles.in: Remove generated
	files from CVS. Running autogen.sh will regenerate them.

2006-01-05  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/action.cpp: Cast to void * to print the pointer address.

	* libbase/triangulate.h: Migrate patch from GameSWF.
	* libbase/triangulate_impl.h:  Migrate patch from GameSWF.
	* libbase/triangulate_float.cpp:  Migrate patch from GameSWF.
	* libbase/triangulate_sint32.cpp:  Migrate patch from GameSWF.

2005-12-27  Rob Savoye  <rob@bertha.welcomehome.org>

	* doc/C/gnash.xml: Add sections on software dependancies,
	configuring, installing, and running Gnash.
	
	* server/Makefile.am: Don't install the libraries in a package
	subdirectory of $libdir.
	* libbase/Makefile.am: Don't install the libraries in a package
	subdirectory of $libdir.
	* libgeometry/Makefile.am: Don't install the libraries in a
	package subdirectory of $libdir.

	* autogen.sh: If any command arguments are supplied, don't run
	automake, as nothing has changed but the configure script. This is
	to reduce clutter in the checkin messages when only a configure
	change has been made.

	* macros/libXML.m4: Don't look for XML libraries in the prefix
	directory.
	* macros/firefox.m4: Don't look for Firefox libraries in the
	prefix directory.

2005-12-26  Rob Savoye  <rob@bertha.welcomehome.org>

	* Makefile.am: Add doc subdirectory to DIST_SUBDIRS so it gets
	included in the tarball, but isn't part of the SUBDIRS, since we
	don't always want to build the docs.

	* macros/libXML.m4: Make the --with-libxml-include and
	--with-libxml-libraries add the library to the path. Test if
	pk-config exists. Use it if it does, but if it doesn't, do a brute
	force check of standard install locations for the XML2 headers and
	library.

	* backend/gnash.cpp: Define gofast and goslow here instead of
	xmlsocket.cpp.
	* server/xmlsocket.cpp: Reference gofast and goslow as externs so
	gnash actually builds with --disable-xml.

2005-12-25  Rob Savoye  <rob@bertha.welcomehome.org>

	* plugin/plugin.cpp: Fix plugin name so it's recognized correctly
	to play flash movies looking for the proprietary Flash
	player. Instead of rendering the flash movie, copy the byte stream
	to /tmp instead so we can collect more test cases.

	* configure.ac: Fix the --disable-xml option so it actually
	works.

2005-12-21  Rob Savoye  <rob@bertha.welcomehome.org>

	* macros/firefox.m4: Move enable test to here. If firefox-config
	doesn't exist, look for mozilla-config. If neither exists, the
	plugin won't be built as the mozilla development headers and
	libraries aren't installed.
	* Makefile.am: Don't try to build the plugin if the mozilla
	development SDK isn't installed.

	* config.h.in: Checkin header file produced by autoheader so Gnash
	builds on machines without the Autotools installed.
	* doc/C/images/car_crash.txt: Add file for alt text so conversion
	to info works correctly.

	* doc/C/gnash.xml: Update legal notices.
	* doc/C/fdl-appendix.xml: Add FDL in DocBook format.

2005-12-20  Rob Savoye  <rob@bertha.welcomehome.org>

	* libbase/Makefile.am, libgeometry/Makefile.am,
	server/Makefile.am: Don't install the headers.
	* plugin/mozilla-sdk/Makefile.am: Install the SDK library.

	* doc/C/gnash.xml: Add more content beyond just the command line
	arguments. Add a screenshot of the car crash test case.
	* configure.ac: Drop the plugin/test directory, it's unused for
	now.

2005-12-11  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/xml.cpp, xml.h: Update copyright notice.
	* server/xmlsocket.cpp, xmlsocket.h: Update copyright notice.

2005-12-10  Rob Savoye  <rob@bertha.welcomehome.org>

	* AUTHORS, README, NEWS: Add content.

