2008-03-12 Sandro Santilli <strk@keybit.net>

	* server/PropertyList.{cpp,h} (setValue): allow passing flags to use
	  when creating new properties.
	* server/as_object.cpp: avoid the double scan when initializing
	  members. Have super register a proper __proto__ member.

2008-03-12 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all: tests for Stage properties and 
	  Stage.align values.

2008-03-12 Sandro Santilli <strk@keybit.net>

	* testsuite/samples/Makefile.am: don't add LDFLAGS (AGG_LIBS)
	  to GNASH_LIBS, don't list GNASH_LIBS as dependency of test
	  runners (should be imported by libgnashtestsuite.la).

2008-03-12 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* po/de.po: Updated translation by Alwin Meschede.
	* po/sv.po, cs.po, es.po, fi.po, fr.po, it.po: updated po files.

2008-03-12  Dossy Shiobara <dossy@panoptic.com>

	* plugin/win32/: plugin.cpp (1.13), plugin.h (1.9): Overhaul of
	  Win32 npgnash.dll, implementing in-process Gnash in a player
	  thread, using AGG renderer and SDL/ffmpeg for sound.

	* plugin/win32/npgnash.rc (1.4): Cleaned up resource file and
	  modified it to masquerade as "Shockwave Flash" so JavaScript
	  checks on Win32 will detect Gnash as a Flash player.

	* plugin/win32/npgnash.def (1.1): Explicitly export
	  NP_GetEntryPoints, NP_Initialize and NP_Shutdown symbols in
	  npgnash.dll.

	* plugin/win32/: npgnash.c (1.1), npgnash.cpp (1.9): Renamed from
	  .cpp to .c to avoid having to wrap the whole file in an extern
	  "C".

	* plugin/win32/npgnash_resource.h (1.2): No longer needed.

2008-03-11 Bastiaan Jacques <bastiaan@bjacques.org>

	* configure.ac: If --enable-visibility is specified, and no GCC bug
	was detected, compile with -fvisibility=hidden.
	* server/shape.{cpp, h}: Since SWF provides shape edges as integers,
	there's no need to store them as floats. Some renderers can improve
	performance here, especially when used on certain embedded platforms.
	To this end, path and edge are now templated classes Path<> and
	Edge<>, and the precision (int or float) can be specified with the
	template argument.
	* backend/render_handler_agg.cpp: The AGG renderer relies on
	floating pointprecision in paths (after matrix conversion), so make
	sure that precision is preserved.
	* libgeometry/{Point2d.h, Range2d.h}: Allow easy conversion from float
	to int templates.
	* server/matrix.{cpp, h}: Allow transformations to take place on any
	kind of Point2d and Range2d.
	* server/types.h: Multiplication by 20 does not require a floating
	point annotation.
	* server/parser/BitmapMovieDefinition.cpp: Specify the "new subshape"
	argument to Path's constructor.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/*.as: re-add rcsids.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Date.as: fix test count.

2008-03-11 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp, gui/Player.cpp: minor code cleanups.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* server/vm/ASHandlers.cpp (ActionCallFunction): only
	  maintain the 'this' pointer if in a function context.
	* testsuite/actionscript.all/Inheritance.as: one xfail
	  less.

2008-03-11 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/Player.cpp: add stubs for all fscommand methods, implement
	  showmenu.
	* gui/gui.{h,cpp}: add showMenu().
	* gui/gtk{.cpp,sup.h}: implement showMenu for gtk (mainly for 
	  fscommand "showmenu").

2008-03-11 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all/Object.as: check that toLocaleString
	  calls toString. Add some tests for when toLocaleString is implemented
	  at all.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/: Date.as, Object.as:
	  Use hasOwnProperty for new 'toLocaleString' availability
	  testing.

2008-03-11 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all/Date.as: tests for toLocaleString.
	* testsuite/actionscript.all/Object.as: tests for toLocaleString.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* backend/Makefile.am: distribute ogl backend header.
	* ChangeLog, ChangeLog-0.8.2, Makefile.am: split ChangeLog.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-ming.all/registerClassTest.c: more tests
	  for __constructor__ and constructor of instances with
	  registered class.

2008-03-11 Sandro Santilli <strk@keybit.net>

	* server/sprite_instance.cpp (constructAsInstance): compute
	  a 'super' reference.
	* testsuite/misc-ming.all/registerClassTest.c: test super in
	  registered-class constructor.
	* server/as_object.cpp: mark reachable resources from 'super'
	  (may live longer then a function call, if that's the user
	  intention).
	* testsuite/actionscript.all/MovieClip.as: check 'constructor'
	  and '__constructor__' members of builtin class instances.

2008-03-10 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/StringPredicates.h: Make case insensitive compare work with
	old boost, take two.

2008-03-10 Sandro Santilli <strk@keybit.net>

	* server/vm/fn_call.h: add a 'super' member in the function call.
	* server/vm/action.{cpp,h}: allow passing a 'super' object to
	  call_method.
	* server/as_object.{cpp,h}: implement get_constructor,
	  reimplement get_super, add isSuper virtual function,
	  provide a special 'as_super' class.
	* server/as_function.cpp (constructInstance): provide proper 'super'
	  reference.
	* server/as_value.cpp (typeOf): advertise the super object as an
	  'object'
	* server/swf_function.cpp: use fn_call::super as the super reference.
	* server/vm/ASHandlers.cpp (ActionCallFunction, ActionCallMethod):
	  properly setup a 'super' in function calls.
	* testsuite/actionscript.all/Inheritance.as: new successes.
	* testsuite/misc-mtasc.all/Makefile.am: super_test1.swf succeeds.
	* testsuite/swfdec/PASSING: 8 super-related tests succeed.

2008-03-10 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* doc/C/usermanual/gnashrc.xml: add information about ignoreFSCommands
	  directive.
	* doc/C/refmanual/internals.xml: correct typo.
	* gui/gui{h.cpp}: allow exiting after a set number of advances.
	* gui/Player.{h.cpp}: same. Fscommand is case insensitive.
	* gui/gnash.cpp: add switch (-m) for setting max advances. This
	  will probably be changed soon to a long option. Drop unused
	  switches and code.

2008-03-10 Sandro Santilli <strk@keybit.net>

	* testsuite/generic-testrunner.sh: sleep less.
	* testsuite/misc-ming.all/Makefile.am: re-enabled
	  instanceNameTestRunner, erroneously dropped by
	  in revision 1.184 (when adding BOOST_CFLAGS).

2008-03-10 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* utilities/processor.cpp: make fscommand test case insensitive.

2008-03-10 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: don't rely on
	  playing slow..
	* testsuite/misc-mtasc.all/Dejagnu.as: quit when done.

2008-03-10 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gtk.cpp: change cursor only over the drawing area.
	  Prevents the mouse staying invisible over menus. Drop
	  a line I accidentally added some time ago.

2008-03-10 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/gnash.h: third time lucky: interfaceEventCallback
	  returns a std::string to allow a range of responses.
	* gui/Player.{h,cpp}: adapt interfaceEventCallback method
	  to return std::string. Clean up names of private member
	  variables.
	* gui/gui.{h,cpp}: add flag for whether mouse pointer
	  is shown or hidden.
	* gui/gtk{sup.h,.cpp}: implement mouse hide/show for GTK.
	* doc/C/refmanual/internals.xml: update some docs.

2008-03-10 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/gnash.h: make interfaceEventCallback return bool to
	  allow response from the gui. Rename register_fscommand_callback
	  to registerFSCommandCallback and make it take const std::string&
	  arguments.
	* server/as_object.{h,cpp}: remove callback from as_object and
	* server/movie_root.{h,cpp}: put it in movie_root for use with
	  other events (e.g. ActionLimits hit).
	* server/asobj/Mouse.cpp: update callback to movie_root.
	* server/vm/ActionExec.cpp: update registerFSCommandCallback.
	* gui/Player.{h,cpp}: adapt interfaceEventCallback methods,
	  implement some fscommands (quit, fullscreen).
	* gui/gui.{h,cpp}: add isPlugin() method for deciding whether to
	  handle fscommands.
	* libbase/rc.{cpp,h}: add ignoreFSCommands directive to allow, well,
	  ignoring fscommands. Set to true by default.
	* utilities/processor.cpp: update registerFSCommandCallback.

2008-03-09 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/StringPredicates.h: Use std::lexicographical_compare instead
	of boost::ilexicographical_compare, because the latter is not
	available in boost 1.33.

2008-03-09 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/gnash.h: add "interfaceEventCallback" callback for passing
	  AS events to the gui.
	* server/as_object.{cpp,h}: make callback a static method of as_object
	  class, as that's where it's used.
	* gui/Player.{h,cpp}: register Player as a listener for interface event
	  callbacks and pass on to gui.
	* gui/gui.{cpp,h}: make Mouse.hide and Mouse.show unimplemented in the
	  gui, not in mouse_as_object.
	* server/asobj/Mouse.cpp: send mouse events using callback.

2008-03-07 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/StringPredicates.h: Use boost string algorithms instead of
	the current home-grown ones.
	* server/vm/ASHandlers.cpp: getTime() returns int, so there's no point
	in rounding it to the nearest integer.

2008-03-07 Russ Nelson <nelson@crynwr.com>

	* Fix typos and unwieldy grammar in doc/C/*.xml and doc/C/userman/*.xml
	* Remove Klash, renaming to kde-gnash and kparts as needed.

2008-03-07 Sandro Santilli <strk@keybit.net>

	* server/swf_function.cpp: arguments.callee is not enumerable
	  by default.
	* testsuite/actionscript.all/Function.as: test for default
	  enumerable properties of 'arguments' succeeds.

2008-03-07 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Function.as: expect a failure on
	  composition of the 'arguments' object. Was already broken,
	  used to succeed due to another bug (availability of a 'size'
	  property, which wasn't supposed to be there..).

2008-03-07 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/asobj/string.cpp: a negative number passed as second
	  argument to lastIndexOf always returns -1. More swfdec
	  testsuite passes.
	* testsuite/swfdec/PASSING: update passing tests.

2008-03-07 Sandro Santilli <strk@keybit.net>

	* testsuite/misc-mtasc.all/function_test.as: add a couple
	  more tests.

2008-03-07  Rob Savoye  <rob@ripple.welcomehome.org>

	* testsuite/libbase/memtest.cpp: Add tests for time stamps.
	* libbase/gmemory.h: Add nano resolutions timestamps.
	* libbase/memory.cpp: Add timestamps so we can test performance
	too.

2008-03-07 Sandro Santilli <strk@keybit.net>

	* server/as_value.cpp (to_debug_string): add class name
	  for functions too.

2008-03-07 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/asobj/string.cpp: substring end pos is also set to
	  0 if it's a negative number and, where relevant, swapped with
	  start pos. More swfdec testsuite passes.
	
2008-03-07 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* gui/gui.{h,cpp}: make data tree-shaped instead of flat.
	* gui/gtk.cpp: update properties dialogue to use tree view.

2008-03-06  Rob Savoye  <rob@ripple.welcomehome.org>

	* testsuite/libbase/memtest.cpp: Figures, malloc() on Ubuntu and
	Fedora differs in what it allocates. Ubuntu seems to like 16
	bytes pages,. Fedoras gives us what we ask for, and aligns the
	memory later. Both behaviours are correct.

	* libbase/gmemory.h: Renamed from memory.h to avoid name
	collisions. 
	* libbase/memory.h: Renamed to gmemory.h to avoid name
	collisions. 

2008-03-06  Rob Savoye  <rob@ute.welcomehome.org>

	* configure.ac: Add a test for mallinfo();
	* testsuite/libbase/memtest.cpp: New test case for the Memory
	debugger for use by maintainers.
	* testsuite/libbase/Makefile.am: Add new memory testv case.
	* libbase/memory.{h,cpp}: New Memory class for analysing memory
	allocation to find leaks and bloat.
	* libbase/makefile.am: Add memory.*.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/array.cpp: there's no such thing as an Array.size member, and
	  use a native getter/setter for 'length'.
	* testsuite/actionscript.all/array.as: test that Array instances
	  don't have any 'size' member.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/as_value.{cpp,h}: cleanup: remove the unused drop_refs
	  and destructor (both doing nothing).

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/swfdec/PASSING: add passing Chr tests.
	* testsuite/actionscript.all:String.as: passing tests.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/movie_root.cpp (markReachableResources): character mouse and
	  key listeners also don't need to be scanned again as all left would
	  be on stage.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/fill_style.cpp: cast log arg to int, or boost::format will
	  interpret as a character (string).
	* server/movie_root.cpp (markReachableResources): don't mark live
	  chars as reachable, as they should be marked by their parent
	  already (was a TODO item).

2008-03-06 Sandro Santilli <strk@keybit.net>

	* libbase/GC.{cpp,h}: ok not calling size() twice, but
	  don't properly update the last managed resources count..

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/vm/ASHandlers.cpp: implement MbOrd for SWF6+ and utf-8,
	  clean up the other chr and ord functions a bit.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* libbase/GC.cpp: minor thing, don't call std::list::size() twice each
	  frame iteration, as it's O(n) for GNU stdc++ lib...

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/button_character_instance.cpp, server/sprite_instance.cpp,
	  server/video_stream_instance.cpp, server/asobj/NetConnection.cpp,
	  server/asobj/NetStream.cpp, server/asobj/Sound.cpp,
	  server/asobj/Stage.cpp, server/asobj/string.cpp,
	  server/asobj/xmlnode.cpp:
	  Further reduce builtin_function for native getter/setters.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/: Property.{cpp,h}, PropertyList.{cpp,h},
	  as_object.{cpp,h}:
	  Add support for native getter-setters.
	* server/sprite_instance.cpp: use native getter-setters
	  for sprite properties.
	* server/vm/Machine.cpp: don't assume a getter setter is
	  always implemented using an as_function.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* server/asobj/Global.cpp: cast istringstream to bool as a way
	  to detect errors, tellg() == -1 was ambiguos.
	* testsuite/actionscript.all/String.as: fix expected results
	  (could not handle to find a working comparison for multibyte
	  chars in swf5).

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all/String.as: add tests for mbchr (should
	  be correct) and mbord(not yet confirmed).

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all/Global.as: correct test count.
	* server/asobj/Global.cpp: forget lexical_cast, use stringstream
	  instead. That both fixes the locale problem and doesn't mess up
	  parsing of non-numeric characters.

2008-03-06 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/MovieClip.as: add test for override
	  of native properties (or getter/setters).

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* testsuite/actionscript.all/Global.as: add some checks that would
	  have caught a mistake in parseFloat.

2008-03-06 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* server/vm/ASHandlers.cpp: fix mbchr to return a UTF-8 string;
	  make sure both mbchr and chr handle characters only up to
	  65535. Fixes behaviour for SWF6, 7, and 8.
	* configure.ac: update version (flash compatibility) to 9,0,999 so
	  that javascript flash detectors don't reject gnash (not helpful for
	  implementing SWF9).
	* server/asobj/Global.cpp: use boost_lexical cast in parseFloat;
	  sscanf looks only for the decimal separator of the locale,
	  which since a localization change is now always the local
	  locale; actionscript uses the 'C' locale.

2008-03-04 Bastiaan Jacques <bastiaan@bjacques.org>

	* libamf/{amf.h, element.h, lcshm.h, sol.h},
	libbase/{GC.h, WallClockTimer.h, libbase/shm.h, string_table.h}
	libmedia/gst/{VideoDecoderGst.h, GstUtil.h}, 
	server/{PropertyList.h, SystemClock.h, as_environment.h,
	as_function.h, character.h, shape.h, timers.h}: Add DSOEXPORT
	where a symbol is used outside of the DSO where it's implemented.
	Allows compilation with -fvisibility=hidden.
	* libbase/utility.{cpp h}, libmedia/{AudioDecoder.h,
	AudioDecoderSimple.cpp, Makefile.am}: Move convert_raw_data to
	libmedia.

2008-03-04 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/log.cpp: remove silly assertion.
	* testsuite/libamf.all/test_object.cpp: use std::string hexify.

2008-03-04 Sandro Santilli <strk@keybit.net>

	* testsuite/swfdec/PASSING: added tests that only failed due to 
	  traces being truncated.
	* cygnal/crc.cpp: update to build after changes in RcInitFile
	  interface.

2008-03-04 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/log.{h,cpp}: add templates to convert from vsnprintf format
	  logging calls to boost::format. These are generated with 
	  boost.preprocessor macros. The templates 'redirect' log_* calls
	  to logProcess_* functions. These can also be used directly.
	  Switching between the two is possible by changing the #define
	  USE_BOOST_FORMAT in log.h. It is enabled by default. Make static
	  members private, as they aren't needed elsewhere. Make hexify()
	  return a std::string and look much less scary.
	* libamf/element.cpp, libamf/sol.cpp: use std::string hexify.
	* server/parser/action_buffer.cpp: use std::string hexify.
	* server/vm/ASHandlers.cpp: use C++ standard header <locale>
	* utilities/dumpshm.cpp: use <locale>, change hexify.
	* utilities/processor.cpp: use <locale>.

2008-03-04 Sandro Santilli <strk@keybit.net>

	* libbase/GC.{cpp,h}: add a countCollectables() method for stats.
	* gui/gui.cpp: print collectables count in the movie properties
	  menu.

2008-03-04 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/array.h server/dlist.cpp server/URLAccessManager.cpp: More
	proper namespacing. Fixes build with GCC 4.3.

2008-03-04 Bastiaan Jacques <bastiaan@bjacques.org>

	* server/asobj/xmlnode.cpp: Add a direct include and proper
	namespacing for GCC 4.3.

2008-03-04 Benjamin Wolsey <benjamin_pelican@yahoo.co.uk>

	* libbase/rc.{h,cpp}: const correct; clean up parsing, avoiding
	  an extra iteration at the expense of constructing
	  a stringstream; add warning on unrecognized commands; general
	  cleanup of other functions; drop ':' separator for lists, which
	  has been deprecated for a while. Document functions.

2008-03-04 Bastiaan Jacques <bastiaan@bjacques.org>

	* all over the place: Remove $Id tags, because it has not been shown
	that they serve a real purpose; however, they do cause problems.

