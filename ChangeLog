2006-02-10  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/internals.xml: Add section on adding properties to an 
	ActionScript class.

	* testsuite/actionscript.all/dejagnu.as: Implement the DejaGnu
	unit testing API for ActionScript.
	* testsuite/actionscript.all/XML.as: Use new DejaGnu API for test
	output.
	* testsuite/actionscript.all/XMLNode.as: New test case for
	XMLNode to test the methods and properties.
	* server/xmlnode.h: Add prototypes for new methods.
	* server/xmlnode.cpp: Implement appendChild() cloneNode()
	methods, and nodeName, nodeValue, firstChild, lastChild,
	previousSibling, nextSibling, parentNode properties.
	* server/xml.h: Define properties correctly. 
	* server/xml.cpp: Add properties to a node as other operations
	on the node are done.
	* configure.ac: Disable the XMLReader by default.
	* libbase/membuf.cpp: Free, don't delete the pointer in the
	destructor.
	* server/action.cpp: Define virtual destructor for
	as_property_interface.
	* server/gnash.h: Define virutal destructor for import_visitor.
	* server/shape.{h,cpp}: Define destructor for tesselating_shape.
	* server/styles.h: Define destructors for base_fill_style and
	base_line_style.
	* server/tesselate.{h,cpp}: Define destructor for
	trapezoid_accepter.
	
2006-02-10 Sandro Santilli <strk@keybit.net>

	* server/action.{cpp,h}: added doActionCallMethod,
	doActionCallFunction, doActionDefineFunction,
	doActionGetMember and doActionDefineFunction2 private
	methods to action_buffer. Changed text representation
	of generic objects from [object Object] to a more
	interesing value, fixed <c_function 0x0x###>
	* testsuite/actionscript.all/Function.as: more tests.
	* server/Object.cpp: reworked get_member/set_member to map
	"__proto__" to m_prototype.
	* server/Function.{h,cpp}: mapped m_properties to
	"prototype". Set prototype.constructor at properties
	initialization time.

2006-02-09  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/ghelp.m4: Disable ghelp support by default. Use
	--enable-ghelp to turn it back on.
	* doc/omf.make: Don't try to install anything if GHELP isn't
	defined.

2006-02-09 Sandro Santilli <strk@keybit.net>

	* doc/C/Makefile.am: spaces => tab
	* doc/C/internals.xml: about writing tests
	* testsuite/actionscript.all/Global.as: added two more tests,
	fixed existing test to bypass preprocessor mangling.
	* testsuite/actionscript.all/Function.as: added some tests
	for prototype, prototype.constructor and __proto__ (inheritance)
	* server/action.{cpp,h}: moved ACTION_NEW and ACTION_INSTANCEOF
	handling code in action_buffer private doActionNew and
	doActionInstanceOf (the latter being under development).

2006-02-09 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: Implement _global.parseInt for all cases.
	Also implement _global.parseFloat, and _global.isNan,
	_global.isFinite, _global.unescape
	* server/action.h: add as_value::is_finite(), set_nan for
	ease of use
	* testsuite/actionscript.all: add and fix up parseInt test cases
	also add some parseFloat test cases

2006-02-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/shm.cpp (exists): Move to be within the ENABLE_TESTING
	block.

2006-02-08  Rob Savoye  <rob@cree.moongulch.net>

	* Makefile.am: Rearrange directories for SUBDIRS and
	DIST_SUBDIRS.
	* autogen.sh: Remove hardcoded path to /usr/bin.
	* doc/C/appendix.xml: Add section to "Coding Style" about Doxygen
	style somments.
	* doc/C/internals.xml: Metion code generatrion scripts in
	CVS. Expand "Adding ActionScript" section  Add sectioj on
	parameter passing for callbacks. Add section on testing Gnash.
	* server/Makefile.am: Add xmlattrs and xmlnodes to the list of
	headers and source files.
	* server/xml.h: Move XMLAttrs and XMLNode to their own source
	files to reduce clutter. Use std::vector instead of "tu
	array". Add new accessors to use for testing. Move a few method
	definitions to the source file.
	* server/xml.cpp:  Move XMLAttrs and XMLNode to their own source
	files to reduce clutter. Use std::vector instead of "tu array".
	Add new accessors to use for testing. Move a few method
 	definitions from the header file. Implement XML::appendChild(),
	XMLNode::appendChild(), XML::createElement(), XML::cloneNode(),
	and XML::createTextNode().
	* testsuite/actionscript/XML.as: Add tests for the new methods.
	
	* server/xmlattrs.{h,cpp}: New file for XMLAttr class moved out of
	xml.h.
	* server/xmlnode.{h,cpp}:  New file for XMLAttr class moved out of
	xml.h.

2006-02-06  Patrice Dumas  <pertusus at free.fr>

	* macros/docbook.m4: enable by default. Add an AM_CONDITIONNAL for
	each of the formats.
	* macros/ghelp.m4: enable by default. Correct AC_PATH_PROG 3rd arg.
	Don't check for the user is root (the user needs to be root only
	for make install, in case he wants to run scrollkeeper-update).
	* doc/omf.make: don't use $(GHELP) it is never set. Test for the
	user being root only when running scrollkeeper-update, any user
	may install the files. Use $(omffile) instead of $(srcdir)/*.omf.
	Add $(DESTDIR).
	* doc/xmldocs.make: move general stuff to doc/C/Makefile.am 
	(EXTRA_DIST, CLEANFILES, xml_files). Similarly, define all-local 
	and not all. Add amissing $(DESTDIR). Take dist-hook and 
	install-data-hook from doc/C/Makefile.am.
	* doc/C/Makefile.am: use the GHELP automake conditionnal to 
	conditionnally include scrollkeeper stuff. Remove XML_FILES, as
	xml_files from the scrollkeeper code is the same. Distribute
	info and texi files. Simplify rules to build docs and 
	conditionnalize on automake conditionnals. If the tools aren't
	there, touch the files. As the doc files requires specific 
	tools to build, flag them as MAINTAINERCLEANFILES.
	* doc/C/gnash.omf: rename to gnash-C.omf and minor changes.

2006-02-08 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Global.as: _global functions tests
	* testsuite/actionscript.all/Function.as: modified to use check.as
	* testsuite/actionscript.all/Object.as: modified to use check.as
	* testsuite/actionscript.all/check.as: framework for dejagnu testing

2006-02-08 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: implement _global.parseInt's simplest case

2006-02-06 Sandro Santilli <strk@keybit.net>

	* server/action.h: Added as_environment::dump_stack(), more dox
	* server/action.cpp: Fixed <as_function 0x0x####>, cleanups
	* server/swf.h: Added dox for ACTION_CALLMETHOD
	* libbase/container.h: Doxygen comments for smart_ptr class
	* testsuite/actionscript.all/Function.as: more tests for
	Function.apply()
	* testsuite/actionscript.all/Makefile.am: rule to build
	'visual tracing' version of tests (.vswf)
	* server/Function.cpp: implemented Function.apply()

2006-02-05 Sandro Santilli <strk@keybit.net>

	* server/action.cpp used symbolic names in s_instruction_table.

2006-02-05  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* testsuite/actionscript.all/testin.xml: XML test file to test the
	parser.

	* plugin/plugin.cpp (NewStream): Add support to parse the options
	passed in when the plugin is invoked to play a stream. Add special
	debug flags so we can attach GDB at leisure and not have to screw
	with loading shared libraries.
	* server/xml.{h,cpp}: Fix capitalization errors in
	names. Implement getBytesTotal(), getBytesLoaded(),
	and hasChildNodes().
	* testsuite/actionscript.all/XML.as: Add tests for
	getBytesTotal(), getBytesLoaded(), and hasChildNodes().
	
	* server/xml.h: Add stubs for the missing methods and
	properties. Fix bit rot with get_member() so it actually works
	again.
	* server/xml.cpp:  Add stubs for the missing methods and
	propeties.
	* testsuite/actionscript.all/XML.as: New file to test XML class.

2006-02-05 Sandro Santilli <strk@keybit.net>

	* server/swf.h: added SWF::ACTION_DEFINEFUNCTION2 (0x8e)
	* server/action.cpp: added support for Object copy construction
	obj = new Object(otherobj).
	* server/: renamed as_as_function to as_function_object, moved
	it's definition in Function.{h,cpp}. Moved as_object methods
	from action.cpp to Object.cpp (new file). Fixed definition
	of prototipal ::apply and ::call members for Function object.

2006-02-05 Michael Carlson <corfe83dev@gmail.com>

	* server/Sprite.cpp: goto_frame now uses mutator to stop instead
	of directly changing state (so now it resets dt counter too)

2006-02-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/shm.{h,cpp}: New support code for using POSIX named
	shared memory segments.
	* server/LocalConnection.h: Alternatively use shared memory
	instead of a socket connection.
	* server/LocalConnection.cpp: Alternatively use shared memory
	instead of a socket connection.
	* testsuite/actionscript.all/LocalConnection.as: Add addiotnal
	tests for when using a shared memory subsystem.
	* server/Makefile.am: Add shm.h, shm.cpp, network.cpp, network.h.
	* configure.ac: Add --enable flag to switch using shared memory to
	networking for local connections.
	
	* server/LocalConnection.h: Change API for connect(), and
	domain().
	* server/LocalConnection.cpp: Change API for connect(), and
	domain(). Initial implementations of domain(), connect(), and
	close().

	* server/network.cpp: Replace code with networking code from one
	of my other GPL'd projects, PowerGuru. That code is much more
	fully functional in a generic sense, and pretty solid too. Add
	more accessors to use for testing LocalConnection. 
	* server/network.h: Add more accessors to use for testing
	LocalConnection.
	* testsuite/actionscript.all/LocalConnection.as: Test the newly
	implemented methods.

	* server/network.{h,cpp}: New files to hold base networking class
	for use by other ActionScript objects. This base class contains
	the code for custom methods that implement accessors to the data
	to enable unit testing derived classes like NetConnection and
	LocalConnection. 
	* server/NetConnection.h: Move all testing code to network.h.
	* server/NetConnection.cpp: Move all testing code to
	network.cpp. Setup callbacks for our custom methods using the
	Network, instead of NetConnection class.

	* Makefile.am: Rearrange variable definitions so the dist and
	distcheck Makefile targets actually work. Add DIST directories so
	everything makes it into the tarball.
	* doc/C/Makefile.am: Define XML_FILES for all the other xml doc
	files. Add DESTDIR to the install path. Rearrange variable
	definitions so the distcheck Makefile target actually works. 

2006-02-04  John Gilmore  <gnu@toad.com>

	* backend/gnash.cpp:  Set window title to "gnash: " and movie name.
	Correct help/usage string.

2006-02-04 Sandro Santilli <strk@keybit.net>

	* libbase/container.h:  Doxygen-compatible comments for hash
	struct. Const-correct size() method.
	* server/action.cpp: opcode 0x43 (Declare Object / INITOBJECT)
	implemented.

2006-02-04  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/netconnection.xml: Update with more detailed data on this
	class.

	* server/NetConnection.cpp: Implement part of the connect()
	method. Add C++ accessor methods as AS methods, and we can call
	our custom methods from testing code to examine the internal state
	of a class.
	* server/NetConnection.h: Add C++ accessor methods as AS methods,
	* testsuite/actionscript.all/NetConnection.as: Test the connect()
	method to make sure the URL gets parsed correctly, if specified.
	* configure.ac: Add --disble-testing option to not build
	additional code used for testing.

2006-02-04 Michael Carlson <corfe83dev@gmail.com>

	* server/Date.cpp: Clean up Date, and implement getDate()
	* server/action.cpp: Fix SetTargetDynamic opcode and further fix
	SetTarget opcode

2006-02-03  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/docbook.m4: Fix improper use of 3rd parameter to
	AC_PATH_PROG.

	* configure.ac: Add --enable-sdk-install to install headers for
	those who want to use Gnash as a development library.
	* plugin/ogl_sdl.cpp: Drop old demo code.
	* libbase/Makefile.am: Rename libbase to libgnashbase to
	reduce the chance of name collision.
	* libgeometry/Makefile.am: Rename libgeometry to libgnashgeo to
	reduce the chance of name collision.
	* server/Makefile.am: Rename libserver to libgnashserver, and
	libasobjs to libgnashasobjs to reduce the chance of name
	collision. 
	* backend/Makefile.am: Rename libgbackend to libgnashbackend to
	reduce the chance of name collision. Use the new library names to
	link.
	* utilities/Makefile.am: Use the new library names to link.
	* plugin/Makefile.am: Rename libgnash to be libgnashplugin to
	reduce the chance of name collision. Use the new library names to
	link.
	
	* server/action.cpp: Add missing opcodes to dissasembler table,a
	and rename the unsupported ones to have a "_fixme" attached when
	printing debug information.
	* backend/Makefile.am (AM_LDFLAGS): Add $(X_LIBS) so we can link
	with libraries in /usr/X11R6/lib.

	* Makefile.am (ACLOCAL_AMFLAGS): Add so autoreconf works. 

	* server/action.cpp: Add missing opcodes to opcode table so we can
	at least know when they get invoked.

2006-02-03 Michael Carlson <corfe83dev@gmail.com>

	* server/action.cpp: SetTarget is now implemented for targets
	other than ""
	* backend/render_handler_ogl.cpp: use TWIPS_TO_PIXELS macro
	instead of hardcoded 20 value

2006-02-03 Sandro Santilli <strk@keybit.net>

	* testsuite/actionscript.all/Function.as: tests for user-defined
	  class definition
	* server/swf.h: moved SWF namespace definition in it's own header,
	  added action_type enum, added ACTION_EXTENDS, ACTION_CASTOBJECT,
	  ACTION_IMPLEMENTS tag_types, added dox on some action_types.
	* server/action.cpp: used symbolic names for SWF action tag ids
	* testsuite/actionscript.all/Object.as: test for Object class
	* testsuite/actionscript.all/Makefile.am: added support for
	  user-defined flags to ``makeswf'' invocation
	  (for -DUSE_XTRACE, mainly)
	* libbase/: image.h, jpeg.h: Doxygen-compatible comments

2006-02-03 Michael Carlson <corfe83dev@gmail.com>

	* server/textformat.cpp: fix typo in textformat_new log message
	* server/action.cpp: modulus operand in actionscript now returns
	NaN on division by zero
	* server/Date.h: Setup basic time storage variables
	* server/Date.cpp: Implement default constructor, basic time
	reading operations

2006-02-02  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* testsuite/actionscript.all/Makefile.am: Use the standard
	automake way to build the test cases.

	* Makefile.am (STD_DIRS): Remove testsuite. Nothing actually needs
	to be done at "make all" time anyway. So now the testuites can
	only be run from the testsuite subdirctory.
	* macros/png.m4: Fix various typos and other stupid errors that
	kept the --with-png-incl and --with-png-lib options from working
	correctly.
	* configure.ac: Tweak test for PNG support.

2006-02-01  Rob Savoye  <rob@cree.moongulch.net>

	* testsuite/actionscript.all/gen-test.sh: Developer utility script
	that uses the NOTES file to generate a Ming style "as" source file,
	which can be used to test an ActionScript class.
	* server/gen-files.sh: Developer utility script that uses the
	NOTES file to generate header and source file templates for an
	ActionScript class.
	* doc/C/gen-doc.sh: Developer utility script that uses the NOTES
	file to generate a documentation template for an ActionScript
	class.
	* doc/C/NOTES: Data file for file generation scripts. This is only
	of interest to other developers. If you change this file, you may
	break the other developer gen-* scripts.
	* testsuite/Makefile.am: Add dejagnu to AUTOMAKE_OPTIONS. Reset
	RUNTESTDEFAULTFLAGS to not use the --tool option.
	* testsuite/actionscript.all/Makefile.am: Add dejagnu to
	AUTOMAKE_OPTIONS. Reset	RUNTESTDEFAULTFLAGS to not use the --tool
	option.
	* testsuite/actionscript.all/swf_exists.exp: Test driver for
	DejaGnu to run the new test cases.
	* testsuite/actionscript.all/Boolean.as, Date.as, Microphone.as,
	SharedObject.as, Camera.as, Error.as, Mouse.as, Stage.as,
	Color.as, server/Makefile.am, backend/Makefile.am, 
	Function.as, NetConnection.as, System.as, ContextMenu.as,
	LoadVars.as, NetStream.as, TextSnapshot.as, CustomActions.as,
	LocalConnection.as, Selection.as, Video.as: New Ming based test
	cases for ActionScript classes. Currently all these do is test for
	the existance of a class, and all of it's methods.
	* server/Boolean.cpp, Date.cpp,	Microphone.cpp,	SharedObject.cpp,
	Camera.cpp, Error.cpp, Mouse.cpp, Stage.cpp, Color.cpp,
	Function.cpp, NetConnection.cpp, System.cpp, ContextMenu.cpp,
	LoadVars.cpp, NetStream.cpp, TextSnapshot.cpp, CustomActions.cpp,
	LocalConnection.cpp, Selection.cpp, Video.cpp: New stubs for
	missing ActionScript classes. All they do for now is print
	"unimplemented", but as all the hard code to tie a class and it's
	methods into Gnash is done, it'll be much easier to fill in
	functionality.

2006-01-30 Michael Carlson <corfe83dev@gmail.com>

	* backend/render_handler_ogl.cpp: tentative implementation
	of line_style_width with appropriate TODO message

2006-01-30  Rob Savoye  <rob@ripple.welcomehome.org>

	* doc/C/accessibility.xml, button.xml, camera.xml,
	contextmenu.xml, customactions.xml, date.xml,
	error.xml, internals.xml, key.xml,
	loadvars.xml, localconnection.xml,
	microphone.xml, mouse.xml, netstream.xml,
	selection.xml, sharedobject.xml, sound.xml,
	stage.xml, textsnapshot.xml, video.xml,
	xml.xml, xmlsocket.xml: Add content.
	* doc/C/accessibility.xml camera.xml, color.xml, contextmenu.xml,
	customactions.xml, date.xml, error.xml, function.xml, key.xml,
	loadvars.xml, localconnection.xml, microphone.xml, mouse.xml,
	movieclip.xml, moviecliploader.xml, netstream.xml, object.xml,
	selection.xml, sharedobject.xml, sound.xml, stage.xml, system.xml,
	textfield.xml,	textformat.xml,textsnapshot.xml. video.xml,
	xml.xml, xmlsocket.xml: New machine generated templates for
	ActionScript class documentaion.

	* doc/C/array.xml, boolean.xml, button.xml, math.xml,
	netconnection.xml, number.xml, string.xml: New docs, one for each
	ActionScript class.

2006-01-29  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/internals.xml: Add a table of what ActionScript classes
	are implemented, and to what degree.
	* doc/C/sources.xml: Add section on PNG and JPEG dependancies. Add
	section on using Doxygen.

	* doc/Doxyfile.in (INPUT): Change to using @top_srcdir@, so the
	doxygen usage supports building the docs when configuring with a
	separate build tree from the sources.

2006-01-28  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* doc/C/internals.xml: Add section on adding new ActionScript
	classes with reasonable detail.

	* doc/C/sources.xml: New file extracted from gnash.xml, and made a
	standalone file since it's grown in size.
	* doc/C/appendix.xml: New file for Appendix content.
	* doc/C/gnash.xml: Move some sections to separete files. Include
	the new files.

	* doc/C/Makefile.am: Add pdf and info to SUFFIXES so the rules
	actually work.

	* doc/omf.make (install-data-hook-omf): Only install if you are
	root, as this requires writing to system directories.
	* configure.ac: Link the doc/C/images directory to the build
	directory so we can find images when producing output files. Check
	state of DocBook when it's enabled.
	* macros/docbook.m4: Add path to stylesheets for Ubuntu. Look for
	fop.sh, and the DocBook2X conversion tools. Make DocBook optional,
	use --enable-docbook to enable. When disableed, you can't build
	any of the docs.
	* macros/ghelp.m4: Check for Scrollkeeper tools. Using GNOME Help
	is disabled by default. Use --enable-ghelp to enable.
	* doc/C/Makefile.am: Use variables defined by configure for all
	the conversion tools.

2006-01-27  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/player.cpp: Use GLinitialized instead of
	surface_activated, which turns out to be a system definition on
	some Unixes. Make main_loop take a nsPluginInstance as an argument
	so we have all the data we need. Setup a thread to run the
	player.
	* server/Makefile.am, backend/Makefile.am,
	plugin/Makefile.am, utility/Makefile.am,
	plugin/mozilla-sdk/Makefile.am: Don't use VORBIS variables
	anymore.
	* macros/libXML.m4: Use xml2-config instead of pkg-config.
	* maxros/mad.m4: Add BSD path prefix, /usr/pkg.
	* libbase/triangulate_impl.h: Drop the long modifier when printing
	a size.
	* libbase/Makefile.am: Make dmalloc build conditionally when
	--enable-dmalloc is passed to configure.
	* backend/sound_handler_sdl.cpp: Only compile if SDL_Mixer is
	installed.
	* backend/gnash.cpp: xml_fd should always be defined. Make using
	SDL_Mixer for sound be conditional, since a machine may have SDL
	installed, but not SDL_Mixer, but we still want the player to
	build.
	* server/xmlsocket.h, xmlsocket.cpp: Include config.h as generated
	by configue if it exists.
	* server/xml.h, xml.cpp: Include config.h as generated
	by configue if it exists.
	* configure.ac: Enable test for pthread.h and libpthread. Don't
	look for Vorbis, the OGG tests are enough.
	* server/Movie.cpp, Sprite.cpp, impl.cpp, array.cpp: Include
	pthread.h to get around a data type definition problem on
	NetBSD. This seems to be required when using STL containers on
	NetBSD. 
	* macros/opengl.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/png.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/jpeg.m4: Use mad.m4 as a template and rewrite to be
	more portable.
	* macros/sdl.m4: Look for SDL specific directory before and after
	the include or lib since some platforms install these differently.
	* macros/pthreads.m4: Look for POSIX Thread support. This turns
	out to be very messy with NetBSD, as the old version is also
	installed, and we have to link with the right one for any
	executable to work.

2006-01-26  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/Makefile.am: Link in shared libraries. Install the plugin
	in the users home directory for mozilla or firefox plugins.
	* server/Makefile.am, backend/Makefile.am,
	plugin/Makefile.am, plugin/mozilla-sdk/Makefile.am: Sigh, back to
	building and installing shared libraries because AMD64-linux
	doesn't support linking the plugin with static libraries.

	* configure.ac: Don't complain about missing libxml2 libraries if
	--disable-xml was specified.
	* backend/gnash.cpp: Always define gofast and goslow, even if XML
	support is disabled.
	* libbase/tu_types.h: If the Mozilla obsolete Prototypes file has
	been included, don't redefine the 64 bit data types.

	* testsuite/movies.all/elvis.swf: Remove URL ping to spyware
	server.

	* libbase/triangulate_impl.h: Change %ld to %d in print statement.
	* libbase/tu_types.h: Use SDL typedefs always.

2006-01-24  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* macros/opengl.m4: Update based on mad.m4 template.
	* macros/mad.m4: Fix typo, -I should be a -L.

2006-01-24 Michael Carlson <corfe83dev@gmail.com>

	* server/array.h: as_array_object now uses deque instead of vector
	* server/array.cpp: Implement array::unshift, shift, reverse,
	concat, slice, toString, join - also make push return the new
	length as it should have done before

2006-01-23  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* plugin/player.cpp, player.h: Neew file for Flash player within
	plugin code.
	* plugin/ogl_sdl.cpp, ogl_sdl.h: New files for OpenGL and SDL
	specific code.
	* plugin/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* server/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* backend/Makefile.am: Build a static archive library instead of a
	shared one. Link to the static libraries.
	* plugin/Makefile.am: Build a static archive library instead of a
	shared one.
	* plugin/mozilla-sdk/Makefile.am: Build a static archive library
	instead of a shared one.
	
	* server/Makefile.am: Don't install the libraries.
	* backend/Makefile.am: Don't install the libraries.
	* plugin/Makefile.am: Don't install the
	libraries. Pass-no-undefined to libtool so all symbols are
	resolved in the final shared library.
	* plugin/mozilla-sdk/Makefile.am: Don't install the libraries.

	* configure.ac: Use new DMALLOC test.
	* macros/dmalloc.m4: New macro for dmalloc support.
	* utilities/Makefile.am: Add support for dmalloc.
	* server/Makefile.am: Add support for dmalloc.
	* backend/Makefile.am: Add support for dmalloc.
	* plugin/Makefile.am: Add support for dmalloc.
	* libbase/utility.cpp: Only build if we have mallinfo. 

2006-01-23 Michael Carlson <corfe83dev@gmail.com>

	* server/action.h: Create utility funcs as_value::is_inf, is_nan
	* server/action.cpp: Let as_value String<->Number conversions
	use NaN, +Infinity, -Infinity where appropriate
	* server/string.cpp: Make charCodeAt() return a NaN value when
	appropriate
	* server/array.cpp: Array now checks for NaN after converting
	index string to_number(), instead of the old hacked-up way

2006-01-23  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* server/styles.cpp: Fix condition for gradient test.

	* configure.ac: Remove AM_MKINSTALLDIRS macro, it's now unneeded.

2006-01-23 Michael Carlson <corfe83dev@gmail.com>

	* server/array.h: Move new array code into array.cpp, array.h
	* server/array.cpp: Move new array code into array.cpp, array.h
	* server/action.cpp: Move new array code into array.cpp, array.h
	* server/Makefile.am: Move new array code into array.cpp, array.h
        * server/font.cpp: Report an error and continue when we get two
	of the same kerning pairs for a font, instead of crashing

2006-01-22  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Make text at end of configure more detailed about
	dependency errors.
	* macros/mad.m4: New macro to find libmad for mp3 support.
	* utilities/Makefile.am: Make MP3 support truly optional.
	* server/Makefile.am: Make MP3 support truly optional.
	* backend/Makefile.am: Make MP3 support truly optional.
	* plugin/Makefile.am: Make MP3 support truly optional.

2006-01-21  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Add tests for OGG and Vorbis.
	* backend/Makefile.am: Add flags and libs for OGG and Vorbis as
	separete flags.
	* utilities/Makefile.am: Add flags and libs for OGG and Vorbis as
	separete flags.
	* plugin/Makefile.am: Add flags and libs for OGG and Vorbis as
	separete flags.

	* server/styles.cpp: Don't abort if we read a bad gradient.

	* macros/sdl.m4: Store the compilation flags so the compilation
	tests works on ppc-linux.

2006-01-21 Michael Carlson <corfe83dev@gmail.com>

        * server/action.cpp: Initial implementation of as_array_object
        ( get_member, set_member, push, pop, and length )
	
2006-01-20  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* backend/Makefile.am: Make the OGL and SDL support a library so
	it can also be used by the plugin.
	* libbase/Makefile.am: Add SDL_MIXER_CFLAGS to the include paths.
	* macros/sdl.m4: Correct typo so --with-sdl_mixer-lib actually
	works. Add /usr/bin/X11 to the default search path for
	sdl-config.
	* server/styles.cpp: Print a better error message wh.en a bad
	gradient value is read before aborting.

2006-01-19  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* utilities/Makefile.am: Link with AM_LDFLAGS.
	* utilities/parser.cpp: Include config.h. Define gofast, goslow,
	and nodelay.
	* utilities/processor.cpp: Include config.h. Define gofast,
	goslow, and nodelay.
	* configure.ac: Look for mkinstalldirs. Remove test for GLUT, it's
	not used anymore.
	* doc/C/gnash.xml: Update copyright year.
	* backend/gnash.cpp: Include config.h. Give default values to
	gofast and goslow.
	* backend/Makefile.am: Don't install compatibility_include.h.
	* libbase/Makefile.am: Remove unused install hook.
	* libgeometry/Makefile.am: Remove unused install hook.
	* server/Makefile.am: Remove unused install hook.
	* config.mk.in: Remove GLUT variable.
	* All GPL'd Files: Update copyright year.
	* macros/firefox.m4: Get the java and plugin flags from
	$mconfig. Don't look for GLUT, it'sm not needed.
	* plugin/Makefile.am: Add include paths for all the Gnash
	directories and libxml2.

2006-01-08  Rob Savoye  <rob@wharfrat.welcomehome.org>

	* configure.ac: Print out an error message if any of the critical
	development packages aren't installed.

	* testsuite/movies.all: New sub directory for whole movies used
	for demos and testing.
	* testsuite/movies.all/ORIGIN: List where all these movies came
	from originally.
	* testsuite/movies.all/elvis.swf: Dancing figures movie. Makes a
	decent performance test.
	
	* testsuite/actionscript.all/movieclip_test.swf,
	moviecliploader_test.swf, text_formatting.swf, text_sizes.swf,
	visible_and_transparency.swf: New test cases.
	* testsuite/actionscript.all/green.jpg,lynch.jpg,offspring.jpg:
	New image files for the MovieClip and MovieClipLoader test cases.

	* testsuite: New directory for DejaGnu test suite.
	* testsuite/config: New directory for DejaGnu config files.
	* testsuite/lib: New directory for DejaGnu library files.
	* testsuite/actionscript.all: New directory for ActionScript test
	cases.

2006-01-07  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/impl.cpp (gnash): Use unsigned int for for loops so we
	don't have problems with comparing integers.

2006-01-07  Rob Savoye  <rob@darkstar.welcomehome.org>

	* plugin/plugin.cpp (eventThread): Add background thread for
	processing flash movies. Merge in OpenGL/SDL support from the
	standalone player. Start a thread for each new stream.

2006-01-06  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/sound_handler_mp3.cpp: Build if libmad exists.
	* configure.ac: Rearrange the final display lines, and the order
	some of the tests are done in. Look for libmad.
	* backend/Makefile.am: Add OpenGL flags so Darwin is happy.
	* libgeometry/Makefile.am:  Add OpenGL flags so Darwin is happy.
	* server/Makefile.am: Add sound_handler_mp3.cpp.

	* macros/opengl.m4: Rewrite completely. Add --with-opengl optins
	for the paths, and also make --disable-opengl work correctly.

	* libgeometry/geometry.h(math): Rename _X, _Y, or _Z because on
	Darwin they conflict with system header definitions.

	* configure.in, config.h.in, all Makefiles.in: Remove generated
	files from CVS. Running autogen.sh will regenerate them.

2006-01-05  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/action.cpp: Cast to void * to print the pointer address.

	* libbase/triangulate.h: Migrate patch from GameSWF.
	* libbase/triangulate_impl.h:  Migrate patch from GameSWF.
	* libbase/triangulate_float.cpp:  Migrate patch from GameSWF.
	* libbase/triangulate_sint32.cpp:  Migrate patch from GameSWF.

2005-12-27  Rob Savoye  <rob@bertha.welcomehome.org>

	* doc/C/gnash.xml: Add sections on software dependancies,
	configuring, installing, and running Gnash.
	
	* server/Makefile.am: Don't install the libraries in a package
	subdirectory of $libdir.
	* libbase/Makefile.am: Don't install the libraries in a package
	subdirectory of $libdir.
	* libgeometry/Makefile.am: Don't install the libraries in a
	package subdirectory of $libdir.

	* autogen.sh: If any command arguments are supplied, don't run
	automake, as nothing has changed but the configure script. This is
	to reduce clutter in the checkin messages when only a configure
	change has been made.

	* macros/libXML.m4: Don't look for XML libraries in the prefix
	directory.
	* macros/firefox.m4: Don't look for Firefox libraries in the
	prefix directory.

2005-12-26  Rob Savoye  <rob@bertha.welcomehome.org>

	* Makefile.am: Add doc subdirectory to DIST_SUBDIRS so it gets
	included in the tarball, but isn't part of the SUBDIRS, since we
	don't always want to build the docs.

	* macros/libXML.m4: Make the --with-libxml-include and
	--with-libxml-libraries add the library to the path. Test if
	pk-config exists. Use it if it does, but if it doesn't, do a brute
	force check of standard install locations for the XML2 headers and
	library.

	* backend/gnash.cpp: Define gofast and goslow here instead of
	xmlsocket.cpp.
	* server/xmlsocket.cpp: Reference gofast and goslow as externs so
	gnash actually builds with --disable-xml.

2005-12-25  Rob Savoye  <rob@bertha.welcomehome.org>

	* plugin/plugin.cpp: Fix plugin name so it's recognized correctly
	to play flash movies looking for the proprietary Flash
	player. Instead of rendering the flash movie, copy the byte stream
	to /tmp instead so we can collect more test cases.

	* configure.ac: Fix the --disable-xml option so it actually
	works.

2005-12-21  Rob Savoye  <rob@bertha.welcomehome.org>

	* macros/firefox.m4: Move enable test to here. If firefox-config
	doesn't exist, look for mozilla-config. If neither exists, the
	plugin won't be built as the mozilla development headers and
	libraries aren't installed.
	* Makefile.am: Don't try to build the plugin if the mozilla
	development SDK isn't installed.

	* config.h.in: Checkin header file produced by autoheader so Gnash
	builds on machines without the Autotools installed.
	* doc/C/images/car_crash.txt: Add file for alt text so conversion
	to info works correctly.

	* doc/C/gnash.xml: Update legal notices.
	* doc/C/fdl-appendix.xml: Add FDL in DocBook format.

2005-12-20  Rob Savoye  <rob@bertha.welcomehome.org>

	* libbase/Makefile.am, libgeometry/Makefile.am,
	server/Makefile.am: Don't install the headers.
	* plugin/mozilla-sdk/Makefile.am: Install the SDK library.

	* doc/C/gnash.xml: Add more content beyond just the command line
	arguments. Add a screenshot of the car crash test case.
	* configure.ac: Drop the plugin/test directory, it's unused for
	now.

2005-12-11  Rob Savoye  <rob@bertha.welcomehome.org>

	* server/xml.cpp, xml.h: Update copyright notice.
	* server/xmlsocket.cpp, xmlsocket.h: Update copyright notice.

2005-12-10  Rob Savoye  <rob@bertha.welcomehome.org>

	* AUTHORS, README, NEWS: Add content.

